; ModuleID = 'array'
source_filename = "array.rcp"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "arm64v8a-unknown-linux-androideabi34"

%slice.499 = type { i64, ptr }
%slice.497 = type { i64, ptr }
%__array_Header.456 = type { i64, %__mem_Allocator.453 }
%__mem_Allocator.453 = type { ptr, ptr, ptr }
%slice.500 = type { i64, ptr }

@__main_LogTag = external global ptr
@__main_GLOBAL = external global i64
@__pthread_DETACHED = external global i32
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.499
@__os_stdin = external global i64
@__os_stdout = external global i64
@__os_stderr = external global i64
@__os_SYS_read = external global i64
@__os_SYS_write = external global i64
@__os_SYS_open = external global i64
@__os_SYS_mmap = external global i64
@__os_SYS_munmap = external global i64
@__os_SYS_exit = external global i64
@__os_PROT_READ = external global i64
@__os_PROT_WRITE = external global i64
@__os_PROT_EXEC = external global i64
@__os_PROT_NONE = external global i64
@__os_MAP_SHARED = external global i64
@__os_MAP_PRIVATE = external global i64
@__os_MAP_ANONYMOUS = external global i64
@__os_MAP_ANON = external global i64
@__os_MAP_NORESERVE = external global i64
@__str_CONTINUE_BIT = external global i8

define void @__array___GlobalInitializerFunction_0() {
block_0:
  ret void
}

declare ptr @__main_thread_start(ptr)

declare void @__main_warn(ptr, ptr)

declare void @__main_fatal(ptr, ptr)

declare void @ANativeActivity_onCreate(ptr, ptr, i64)

declare i32 @__main_main()

declare i32 @__android_log_write(i32, ptr, ptr)

declare i32 @__android_log_print(i32, ptr, ptr, ...)

declare i32 @pthread_create(ptr, ptr, ptr, ptr)

declare i32 @pthread_attr_init(ptr)

declare i32 @pthread_attr_setdetachstate(ptr, i32)

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare void @__os_assert(i1, ptr)

declare i64 @_system_call(i64, ...)

declare void @__os_print(ptr, i32)

declare void @__os_abort()

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

declare i32 @__os_read_stdin_line(ptr, i32)

declare void @__io_push_string(ptr, ptr)

declare void @__io_format_uint(ptr, i64)

declare void @__io_format_int(ptr, i64)

declare void @__io_print_typetype(ptr, ptr)

declare void @__io_print_type(ptr, ptr)

declare void @__io_builder_to_string(ptr, ptr)

declare void @__io_print_type_with_formatter(ptr, i32, ptr)

declare void @__io___internal_print(ptr, ptr, ptr)

declare void @__io_vsprint(ptr, ptr, ptr)

declare void @__io_sprint(ptr, ptr, ptr)

declare void @__io_print(ptr, ptr)

declare void @__io_println(ptr, ptr)

declare void @__io_readln(ptr, ptr, i32)

declare i32 @__io_get_next(ptr)

declare void @"__io_format_float:type_*[]u32_f32_i32_:void"(i64, ptr, float, i32)

declare void @"__io_format_float:type_*[]u32_f64_i32_:void"(i64, ptr, double, i32)

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @__mem_arena_alloc(i64, ptr)

declare void @__mem_no_free(ptr, ptr)

declare void @__mem_create_scratch(ptr, i64)

declare void @__mem_destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare void @"__mem_make_slice:type_int_*__mem_Allocator_:[]u8"(ptr, i64, i64, ptr)

declare i64 @__str_to_int(ptr)

declare void @__str_create(ptr, ptr)

declare void @__str_append(ptr, ptr)

declare void @__str_append_u32(ptr, i32)

declare void @__str_append_u8(ptr, i8)

declare void @__str_from_builder(ptr, ptr, ptr)

declare void @__str_substr(ptr, ptr, i64, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

define void @"__array_add:*[]u32_u32_:void"(ptr %0, i32 %1) !dbg !78 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  %8 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !91
  call void @llvm.dbg.value(metadata ptr %2, metadata !92, metadata !DIExpression()), !dbg !91
  store i32 %1, ptr %3, align 4, !dbg !91
  call void @llvm.dbg.value(metadata ptr %3, metadata !93, metadata !DIExpression()), !dbg !91
  %9 = load ptr, ptr %2, align 8, !dbg !94
  store ptr %9, ptr %4, align 8, !dbg !94
  call void @llvm.dbg.declare(metadata ptr %4, metadata !95, metadata !DIExpression()), !dbg !94
  %10 = load ptr, ptr %4, align 8, !dbg !96
  %11 = getelementptr inbounds %slice.497, ptr %10, i32 0, i32 1, !dbg !96
  %12 = load ptr, ptr %11, align 8, !dbg !96
  %13 = getelementptr %__array_Header.456, ptr %12, i64 -1, !dbg !96
  store ptr %13, ptr %5, align 8, !dbg !96
  call void @llvm.dbg.declare(metadata ptr %5, metadata !97, metadata !DIExpression()), !dbg !96
  %14 = load ptr, ptr %4, align 8, !dbg !117
  %15 = getelementptr inbounds %slice.497, ptr %14, i32 0, i32 0, !dbg !117
  %16 = load i64, ptr %15, align 8, !dbg !117
  %17 = load ptr, ptr %5, align 8, !dbg !117
  %18 = getelementptr inbounds %__array_Header.456, ptr %17, i32 0, i32 0, !dbg !117
  %19 = load i64, ptr %18, align 8, !dbg !117
  %20 = icmp sge i64 %16, %19, !dbg !117
  br i1 %20, label %block_1, label %block_2, !dbg !117

block_1:                                          ; preds = %block_0
  %21 = load ptr, ptr %5, align 8, !dbg !118
  %22 = getelementptr inbounds %__array_Header.456, ptr %21, i32 0, i32 0, !dbg !118
  %23 = load i64, ptr %22, align 8, !dbg !118
  %24 = mul i64 %23, 2, !dbg !118
  store i64 %24, ptr %6, align 8, !dbg !118
  call void @llvm.dbg.declare(metadata ptr %6, metadata !119, metadata !DIExpression()), !dbg !118
  %25 = load ptr, ptr %5, align 8, !dbg !120
  %26 = getelementptr inbounds %__array_Header.456, ptr %25, i32 0, i32 1, !dbg !120
  %27 = getelementptr inbounds %__mem_Allocator.453, ptr %26, i32 0, i32 0, !dbg !120
  %28 = load ptr, ptr %27, align 8, !dbg !120
  %29 = load i64, ptr %6, align 8, !dbg !120
  %30 = mul i64 %29, 4, !dbg !120
  %31 = add i64 %30, 32, !dbg !120
  %32 = load ptr, ptr %5, align 8, !dbg !120
  %33 = getelementptr inbounds %__array_Header.456, ptr %32, i32 0, i32 1, !dbg !120
  %34 = call ptr %28(i64 %31, ptr %33), !dbg !120
  store ptr %34, ptr %7, align 8, !dbg !120
  call void @llvm.dbg.declare(metadata ptr %7, metadata !121, metadata !DIExpression()), !dbg !120
  %35 = load ptr, ptr %7, align 8, !dbg !123
  %36 = icmp ne ptr %35, null, !dbg !123
  %37 = icmp eq i1 %36, false, !dbg !123
  br i1 %37, label %block_4, label %block_5, !dbg !123

block_4:                                          ; preds = %block_1
  %38 = load ptr, ptr %4, align 8, !dbg !124
  %39 = getelementptr inbounds %slice.497, ptr %38, i32 0, i32 1, !dbg !124
  store ptr null, ptr %39, align 8, !dbg !124
  %40 = load ptr, ptr %4, align 8, !dbg !125
  %41 = getelementptr inbounds %slice.497, ptr %40, i32 0, i32 0, !dbg !125
  store i64 0, ptr %41, align 8, !dbg !125
  ret void, !dbg !126

block_5:                                          ; preds = %block_1
  br label %block_6, !dbg !126

block_6:                                          ; preds = %block_5
  %42 = load ptr, ptr %7, align 8, !dbg !127
  store ptr %42, ptr %8, align 8, !dbg !127
  call void @llvm.dbg.declare(metadata ptr %8, metadata !128, metadata !DIExpression()), !dbg !127
  %43 = load ptr, ptr %8, align 8, !dbg !129
  %44 = getelementptr inbounds %__array_Header.456, ptr %43, i32 0, i32 0, !dbg !129
  %45 = load i64, ptr %6, align 8, !dbg !129
  store i64 %45, ptr %44, align 8, !dbg !129
  %46 = load ptr, ptr %8, align 8, !dbg !130
  %47 = getelementptr inbounds %__array_Header.456, ptr %46, i32 0, i32 1, !dbg !130
  %48 = load ptr, ptr %5, align 8, !dbg !130
  %49 = getelementptr inbounds %__array_Header.456, ptr %48, i32 0, i32 1, !dbg !130
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %49, i64 24, i1 false), !dbg !130
  %50 = load ptr, ptr %8, align 8, !dbg !131
  %51 = getelementptr %__array_Header.456, ptr %50, i64 1, !dbg !131
  %52 = load ptr, ptr %4, align 8, !dbg !131
  %53 = getelementptr inbounds %slice.497, ptr %52, i32 0, i32 1, !dbg !131
  %54 = load ptr, ptr %53, align 8, !dbg !131
  %55 = load ptr, ptr %4, align 8, !dbg !131
  %56 = getelementptr inbounds %slice.497, ptr %55, i32 0, i32 0, !dbg !131
  %57 = load i64, ptr %56, align 8, !dbg !131
  %58 = mul i64 %57, 4, !dbg !131
  %59 = call ptr @memcpy(ptr %51, ptr %54, i64 %58), !dbg !131
  %60 = load ptr, ptr %8, align 8, !dbg !132
  %61 = getelementptr inbounds %__array_Header.456, ptr %60, i32 0, i32 1, !dbg !132
  %62 = getelementptr inbounds %__mem_Allocator.453, ptr %61, i32 0, i32 1, !dbg !132
  %63 = load ptr, ptr %62, align 8, !dbg !132
  %64 = load ptr, ptr %5, align 8, !dbg !132
  %65 = load ptr, ptr %8, align 8, !dbg !132
  %66 = getelementptr inbounds %__array_Header.456, ptr %65, i32 0, i32 1, !dbg !132
  call void %63(ptr %64, ptr %66), !dbg !132
  %67 = load ptr, ptr %4, align 8, !dbg !133
  %68 = getelementptr inbounds %slice.497, ptr %67, i32 0, i32 1, !dbg !133
  %69 = load ptr, ptr %8, align 8, !dbg !133
  %70 = getelementptr %__array_Header.456, ptr %69, i64 1, !dbg !133
  store ptr %70, ptr %68, align 8, !dbg !133
  br label %block_3, !dbg !133

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !133

block_3:                                          ; preds = %block_2, %block_6
  %71 = load ptr, ptr %4, align 8, !dbg !134
  %72 = load ptr, ptr %4, align 8, !dbg !134
  %73 = getelementptr inbounds %slice.497, ptr %72, i32 0, i32 0, !dbg !134
  %74 = load i64, ptr %73, align 8, !dbg !134
  %75 = getelementptr inbounds %slice.497, ptr %71, i32 0, i32 1, !dbg !134
  %76 = load ptr, ptr %75, align 8, !dbg !134
  %77 = getelementptr i32, ptr %76, i64 %74, !dbg !134
  %78 = load i32, ptr %3, align 4, !dbg !134
  store i32 %78, ptr %77, align 4, !dbg !134
  %79 = load ptr, ptr %4, align 8, !dbg !135
  %80 = getelementptr inbounds %slice.497, ptr %79, i32 0, i32 0, !dbg !135
  %81 = load ptr, ptr %4, align 8, !dbg !135
  %82 = getelementptr inbounds %slice.497, ptr %81, i32 0, i32 0, !dbg !135
  %83 = load i64, ptr %82, align 8, !dbg !135
  %84 = add i64 %83, 1, !dbg !135
  store i64 %84, ptr %80, align 8, !dbg !135
  ret void, !dbg !136
}

define void @"__array_create:type_*__mem_Allocator_:[]u8"(ptr %0, i64 %1, ptr %2) !dbg !137 {
block_0:
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca %slice.500, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  %8 = alloca ptr, align 8
  %9 = alloca %__mem_Allocator.453, align 8
  %10 = alloca %slice.500, align 8
  %11 = alloca %slice.500, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  store i64 %1, ptr %3, align 8, !dbg !148
  call void @llvm.dbg.value(metadata ptr %3, metadata !149, metadata !DIExpression()), !dbg !148
  store ptr %2, ptr %4, align 8, !dbg !148
  call void @llvm.dbg.value(metadata ptr %4, metadata !150, metadata !DIExpression()), !dbg !148
  store i64 8, ptr %5, align 8, !dbg !151
  call void @llvm.dbg.declare(metadata ptr %5, metadata !152, metadata !DIExpression()), !dbg !151
  %12 = load ptr, ptr %4, align 8, !dbg !153
  %13 = getelementptr inbounds %__mem_Allocator.453, ptr %12, i32 0, i32 0, !dbg !153
  %14 = load ptr, ptr %13, align 8, !dbg !153
  %15 = load i64, ptr %5, align 8, !dbg !153
  %16 = mul i64 %15, 1, !dbg !153
  %17 = add i64 %16, 32, !dbg !153
  %18 = load ptr, ptr %4, align 8, !dbg !153
  %19 = call ptr %14(i64 %17, ptr %18), !dbg !153
  store ptr %19, ptr %6, align 8, !dbg !153
  call void @llvm.dbg.declare(metadata ptr %6, metadata !154, metadata !DIExpression()), !dbg !153
  %20 = load ptr, ptr %6, align 8, !dbg !155
  %21 = icmp ne ptr %20, null, !dbg !155
  %22 = icmp eq i1 %21, false, !dbg !155
  br i1 %22, label %block_1, label %block_2, !dbg !155

block_1:                                          ; preds = %block_0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !156
  ret void, !dbg !156

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !156

block_3:                                          ; preds = %block_2
  %23 = load ptr, ptr %6, align 8, !dbg !157
  store ptr %23, ptr %8, align 8, !dbg !157
  call void @llvm.dbg.declare(metadata ptr %8, metadata !158, metadata !DIExpression()), !dbg !157
  %24 = load ptr, ptr %8, align 8, !dbg !159
  %25 = getelementptr inbounds %__array_Header.456, ptr %24, i32 0, i32 0, !dbg !159
  %26 = load i64, ptr %5, align 8, !dbg !159
  store i64 %26, ptr %25, align 8, !dbg !159
  %27 = load ptr, ptr %8, align 8, !dbg !160
  %28 = getelementptr inbounds %__array_Header.456, ptr %27, i32 0, i32 1, !dbg !160
  %29 = load ptr, ptr %4, align 8, !dbg !160
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %29, i64 24, i1 false), !dbg !160
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %9, i64 24, i1 false), !dbg !160
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %10, i64 16, i1 false), !dbg !161
  call void @llvm.dbg.declare(metadata ptr %11, metadata !162, metadata !DIExpression()), !dbg !161
  %30 = getelementptr inbounds %slice.500, ptr %11, i32 0, i32 1, !dbg !163
  %31 = load ptr, ptr %8, align 8, !dbg !163
  %32 = getelementptr %__array_Header.456, ptr %31, i64 1, !dbg !163
  store ptr %32, ptr %30, align 8, !dbg !163
  %33 = getelementptr inbounds %slice.500, ptr %11, i32 0, i32 0, !dbg !164
  store i64 0, ptr %33, align 8, !dbg !164
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %11, i64 16, i1 false), !dbg !165
  ret void, !dbg !165
}

define void @"__array_add:*[]u8_u8_:void"(ptr %0, i8 %1) !dbg !166 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i8, align 4
  %4 = alloca ptr, align 8
  %5 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 1, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca i64, align 8
  %7 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  %8 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !170
  call void @llvm.dbg.value(metadata ptr %2, metadata !171, metadata !DIExpression()), !dbg !170
  store i8 %1, ptr %3, align 1, !dbg !170
  call void @llvm.dbg.value(metadata ptr %3, metadata !172, metadata !DIExpression()), !dbg !170
  %9 = load ptr, ptr %2, align 8, !dbg !173
  store ptr %9, ptr %4, align 8, !dbg !173
  call void @llvm.dbg.declare(metadata ptr %4, metadata !174, metadata !DIExpression()), !dbg !173
  %10 = load ptr, ptr %4, align 8, !dbg !175
  %11 = getelementptr inbounds %slice.500, ptr %10, i32 0, i32 1, !dbg !175
  %12 = load ptr, ptr %11, align 8, !dbg !175
  %13 = getelementptr %__array_Header.456, ptr %12, i64 -1, !dbg !175
  store ptr %13, ptr %5, align 8, !dbg !175
  call void @llvm.dbg.declare(metadata ptr %5, metadata !176, metadata !DIExpression()), !dbg !175
  %14 = load ptr, ptr %4, align 8, !dbg !177
  %15 = getelementptr inbounds %slice.500, ptr %14, i32 0, i32 0, !dbg !177
  %16 = load i64, ptr %15, align 8, !dbg !177
  %17 = load ptr, ptr %5, align 8, !dbg !177
  %18 = getelementptr inbounds %__array_Header.456, ptr %17, i32 0, i32 0, !dbg !177
  %19 = load i64, ptr %18, align 8, !dbg !177
  %20 = icmp sge i64 %16, %19, !dbg !177
  br i1 %20, label %block_1, label %block_2, !dbg !177

block_1:                                          ; preds = %block_0
  %21 = load ptr, ptr %5, align 8, !dbg !178
  %22 = getelementptr inbounds %__array_Header.456, ptr %21, i32 0, i32 0, !dbg !178
  %23 = load i64, ptr %22, align 8, !dbg !178
  %24 = mul i64 %23, 2, !dbg !178
  store i64 %24, ptr %6, align 8, !dbg !178
  call void @llvm.dbg.declare(metadata ptr %6, metadata !179, metadata !DIExpression()), !dbg !178
  %25 = load ptr, ptr %5, align 8, !dbg !180
  %26 = getelementptr inbounds %__array_Header.456, ptr %25, i32 0, i32 1, !dbg !180
  %27 = getelementptr inbounds %__mem_Allocator.453, ptr %26, i32 0, i32 0, !dbg !180
  %28 = load ptr, ptr %27, align 8, !dbg !180
  %29 = load i64, ptr %6, align 8, !dbg !180
  %30 = mul i64 %29, 1, !dbg !180
  %31 = add i64 %30, 32, !dbg !180
  %32 = load ptr, ptr %5, align 8, !dbg !180
  %33 = getelementptr inbounds %__array_Header.456, ptr %32, i32 0, i32 1, !dbg !180
  %34 = call ptr %28(i64 %31, ptr %33), !dbg !180
  store ptr %34, ptr %7, align 8, !dbg !180
  call void @llvm.dbg.declare(metadata ptr %7, metadata !181, metadata !DIExpression()), !dbg !180
  %35 = load ptr, ptr %7, align 8, !dbg !182
  %36 = icmp ne ptr %35, null, !dbg !182
  %37 = icmp eq i1 %36, false, !dbg !182
  br i1 %37, label %block_4, label %block_5, !dbg !182

block_4:                                          ; preds = %block_1
  %38 = load ptr, ptr %4, align 8, !dbg !183
  %39 = getelementptr inbounds %slice.500, ptr %38, i32 0, i32 1, !dbg !183
  store ptr null, ptr %39, align 8, !dbg !183
  %40 = load ptr, ptr %4, align 8, !dbg !184
  %41 = getelementptr inbounds %slice.500, ptr %40, i32 0, i32 0, !dbg !184
  store i64 0, ptr %41, align 8, !dbg !184
  ret void, !dbg !185

block_5:                                          ; preds = %block_1
  br label %block_6, !dbg !185

block_6:                                          ; preds = %block_5
  %42 = load ptr, ptr %7, align 8, !dbg !186
  store ptr %42, ptr %8, align 8, !dbg !186
  call void @llvm.dbg.declare(metadata ptr %8, metadata !187, metadata !DIExpression()), !dbg !186
  %43 = load ptr, ptr %8, align 8, !dbg !188
  %44 = getelementptr inbounds %__array_Header.456, ptr %43, i32 0, i32 0, !dbg !188
  %45 = load i64, ptr %6, align 8, !dbg !188
  store i64 %45, ptr %44, align 8, !dbg !188
  %46 = load ptr, ptr %8, align 8, !dbg !189
  %47 = getelementptr inbounds %__array_Header.456, ptr %46, i32 0, i32 1, !dbg !189
  %48 = load ptr, ptr %5, align 8, !dbg !189
  %49 = getelementptr inbounds %__array_Header.456, ptr %48, i32 0, i32 1, !dbg !189
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %47, ptr align 8 %49, i64 24, i1 false), !dbg !189
  %50 = load ptr, ptr %8, align 8, !dbg !190
  %51 = getelementptr %__array_Header.456, ptr %50, i64 1, !dbg !190
  %52 = load ptr, ptr %4, align 8, !dbg !190
  %53 = getelementptr inbounds %slice.500, ptr %52, i32 0, i32 1, !dbg !190
  %54 = load ptr, ptr %53, align 8, !dbg !190
  %55 = load ptr, ptr %4, align 8, !dbg !190
  %56 = getelementptr inbounds %slice.500, ptr %55, i32 0, i32 0, !dbg !190
  %57 = load i64, ptr %56, align 8, !dbg !190
  %58 = mul i64 %57, 1, !dbg !190
  %59 = call ptr @memcpy(ptr %51, ptr %54, i64 %58), !dbg !190
  %60 = load ptr, ptr %8, align 8, !dbg !191
  %61 = getelementptr inbounds %__array_Header.456, ptr %60, i32 0, i32 1, !dbg !191
  %62 = getelementptr inbounds %__mem_Allocator.453, ptr %61, i32 0, i32 1, !dbg !191
  %63 = load ptr, ptr %62, align 8, !dbg !191
  %64 = load ptr, ptr %5, align 8, !dbg !191
  %65 = load ptr, ptr %8, align 8, !dbg !191
  %66 = getelementptr inbounds %__array_Header.456, ptr %65, i32 0, i32 1, !dbg !191
  call void %63(ptr %64, ptr %66), !dbg !191
  %67 = load ptr, ptr %4, align 8, !dbg !192
  %68 = getelementptr inbounds %slice.500, ptr %67, i32 0, i32 1, !dbg !192
  %69 = load ptr, ptr %8, align 8, !dbg !192
  %70 = getelementptr %__array_Header.456, ptr %69, i64 1, !dbg !192
  store ptr %70, ptr %68, align 8, !dbg !192
  br label %block_3, !dbg !192

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !192

block_3:                                          ; preds = %block_2, %block_6
  %71 = load ptr, ptr %4, align 8, !dbg !193
  %72 = load ptr, ptr %4, align 8, !dbg !193
  %73 = getelementptr inbounds %slice.500, ptr %72, i32 0, i32 0, !dbg !193
  %74 = load i64, ptr %73, align 8, !dbg !193
  %75 = getelementptr inbounds %slice.500, ptr %71, i32 0, i32 1, !dbg !193
  %76 = load ptr, ptr %75, align 8, !dbg !193
  %77 = getelementptr i8, ptr %76, i64 %74, !dbg !193
  %78 = load i8, ptr %3, align 1, !dbg !193
  store i8 %78, ptr %77, align 1, !dbg !193
  %79 = load ptr, ptr %4, align 8, !dbg !194
  %80 = getelementptr inbounds %slice.500, ptr %79, i32 0, i32 0, !dbg !194
  %81 = load ptr, ptr %4, align 8, !dbg !194
  %82 = getelementptr inbounds %slice.500, ptr %81, i32 0, i32 0, !dbg !194
  %83 = load i64, ptr %82, align 8, !dbg !194
  %84 = add i64 %83, 1, !dbg !194
  store i64 %84, ptr %80, align 8, !dbg !194
  ret void, !dbg !195
}

define void @"__array_create:type_*__mem_Allocator_:[]u32"(ptr %0, i64 %1, ptr %2) !dbg !196 {
block_0:
  %3 = alloca i64, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca %slice.497, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  %8 = alloca ptr, align 8
  %9 = alloca %__mem_Allocator.453, align 8
  %10 = alloca %slice.497, align 8
  %11 = alloca %slice.497, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  store i64 %1, ptr %3, align 8, !dbg !199
  call void @llvm.dbg.value(metadata ptr %3, metadata !200, metadata !DIExpression()), !dbg !199
  store ptr %2, ptr %4, align 8, !dbg !199
  call void @llvm.dbg.value(metadata ptr %4, metadata !201, metadata !DIExpression()), !dbg !199
  store i64 8, ptr %5, align 8, !dbg !202
  call void @llvm.dbg.declare(metadata ptr %5, metadata !203, metadata !DIExpression()), !dbg !202
  %12 = load ptr, ptr %4, align 8, !dbg !204
  %13 = getelementptr inbounds %__mem_Allocator.453, ptr %12, i32 0, i32 0, !dbg !204
  %14 = load ptr, ptr %13, align 8, !dbg !204
  %15 = load i64, ptr %5, align 8, !dbg !204
  %16 = mul i64 %15, 4, !dbg !204
  %17 = add i64 %16, 32, !dbg !204
  %18 = load ptr, ptr %4, align 8, !dbg !204
  %19 = call ptr %14(i64 %17, ptr %18), !dbg !204
  store ptr %19, ptr %6, align 8, !dbg !204
  call void @llvm.dbg.declare(metadata ptr %6, metadata !205, metadata !DIExpression()), !dbg !204
  %20 = load ptr, ptr %6, align 8, !dbg !206
  %21 = icmp ne ptr %20, null, !dbg !206
  %22 = icmp eq i1 %21, false, !dbg !206
  br i1 %22, label %block_1, label %block_2, !dbg !206

block_1:                                          ; preds = %block_0
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !207
  ret void, !dbg !207

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !207

block_3:                                          ; preds = %block_2
  %23 = load ptr, ptr %6, align 8, !dbg !208
  store ptr %23, ptr %8, align 8, !dbg !208
  call void @llvm.dbg.declare(metadata ptr %8, metadata !209, metadata !DIExpression()), !dbg !208
  %24 = load ptr, ptr %8, align 8, !dbg !210
  %25 = getelementptr inbounds %__array_Header.456, ptr %24, i32 0, i32 0, !dbg !210
  %26 = load i64, ptr %5, align 8, !dbg !210
  store i64 %26, ptr %25, align 8, !dbg !210
  %27 = load ptr, ptr %8, align 8, !dbg !211
  %28 = getelementptr inbounds %__array_Header.456, ptr %27, i32 0, i32 1, !dbg !211
  %29 = load ptr, ptr %4, align 8, !dbg !211
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %29, i64 24, i1 false), !dbg !211
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %9, i64 24, i1 false), !dbg !211
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %10, i64 16, i1 false), !dbg !212
  call void @llvm.dbg.declare(metadata ptr %11, metadata !213, metadata !DIExpression()), !dbg !212
  %30 = getelementptr inbounds %slice.497, ptr %11, i32 0, i32 1, !dbg !214
  %31 = load ptr, ptr %8, align 8, !dbg !214
  %32 = getelementptr %__array_Header.456, ptr %31, i64 1, !dbg !214
  store ptr %32, ptr %30, align 8, !dbg !214
  %33 = getelementptr inbounds %slice.497, ptr %11, i32 0, i32 0, !dbg !215
  store i64 0, ptr %33, align 8, !dbg !215
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %11, i64 16, i1 false), !dbg !216
  ret void, !dbg !216
}

define void @"__array_free:*[]u32_:void"(ptr %0) !dbg !217 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !220
  call void @llvm.dbg.value(metadata ptr %1, metadata !221, metadata !DIExpression()), !dbg !220
  %4 = load ptr, ptr %1, align 8, !dbg !222
  store ptr %4, ptr %2, align 8, !dbg !222
  call void @llvm.dbg.declare(metadata ptr %2, metadata !223, metadata !DIExpression()), !dbg !222
  %5 = load ptr, ptr %2, align 8, !dbg !224
  %6 = getelementptr inbounds %slice.497, ptr %5, i32 0, i32 1, !dbg !224
  %7 = load ptr, ptr %6, align 8, !dbg !224
  %8 = getelementptr %__array_Header.456, ptr %7, i64 -1, !dbg !224
  store ptr %8, ptr %3, align 8, !dbg !224
  call void @llvm.dbg.declare(metadata ptr %3, metadata !225, metadata !DIExpression()), !dbg !224
  %9 = load ptr, ptr %3, align 8, !dbg !226
  %10 = getelementptr inbounds %__array_Header.456, ptr %9, i32 0, i32 1, !dbg !226
  %11 = getelementptr inbounds %__mem_Allocator.453, ptr %10, i32 0, i32 1, !dbg !226
  %12 = load ptr, ptr %11, align 8, !dbg !226
  %13 = load ptr, ptr %3, align 8, !dbg !226
  %14 = load ptr, ptr %3, align 8, !dbg !226
  %15 = getelementptr inbounds %__array_Header.456, ptr %14, i32 0, i32 1, !dbg !226
  call void %12(ptr %13, ptr %15), !dbg !226
  %16 = load ptr, ptr %2, align 8, !dbg !227
  %17 = getelementptr inbounds %slice.497, ptr %16, i32 0, i32 1, !dbg !227
  store ptr null, ptr %17, align 8, !dbg !227
  %18 = load ptr, ptr %2, align 8, !dbg !228
  %19 = getelementptr inbounds %slice.497, ptr %18, i32 0, i32 0, !dbg !228
  store i64 0, ptr %19, align 8, !dbg !228
  ret void, !dbg !229
}

define void @"__array_free:*[]u8_:void"(ptr %0) !dbg !230 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !233
  call void @llvm.dbg.value(metadata ptr %1, metadata !234, metadata !DIExpression()), !dbg !233
  %4 = load ptr, ptr %1, align 8, !dbg !235
  store ptr %4, ptr %2, align 8, !dbg !235
  call void @llvm.dbg.declare(metadata ptr %2, metadata !236, metadata !DIExpression()), !dbg !235
  %5 = load ptr, ptr %2, align 8, !dbg !237
  %6 = getelementptr inbounds %slice.500, ptr %5, i32 0, i32 1, !dbg !237
  %7 = load ptr, ptr %6, align 8, !dbg !237
  %8 = getelementptr %__array_Header.456, ptr %7, i64 -1, !dbg !237
  store ptr %8, ptr %3, align 8, !dbg !237
  call void @llvm.dbg.declare(metadata ptr %3, metadata !238, metadata !DIExpression()), !dbg !237
  %9 = load ptr, ptr %3, align 8, !dbg !239
  %10 = getelementptr inbounds %__array_Header.456, ptr %9, i32 0, i32 1, !dbg !239
  %11 = getelementptr inbounds %__mem_Allocator.453, ptr %10, i32 0, i32 1, !dbg !239
  %12 = load ptr, ptr %11, align 8, !dbg !239
  %13 = load ptr, ptr %3, align 8, !dbg !239
  %14 = load ptr, ptr %3, align 8, !dbg !239
  %15 = getelementptr inbounds %__array_Header.456, ptr %14, i32 0, i32 1, !dbg !239
  call void %12(ptr %13, ptr %15), !dbg !239
  %16 = load ptr, ptr %2, align 8, !dbg !240
  %17 = getelementptr inbounds %slice.500, ptr %16, i32 0, i32 1, !dbg !240
  store ptr null, ptr %17, align 8, !dbg !240
  %18 = load ptr, ptr %2, align 8, !dbg !241
  %19 = getelementptr inbounds %slice.500, ptr %18, i32 0, i32 0, !dbg !241
  store i64 0, ptr %19, align 8, !dbg !241
  ret void, !dbg !242
}

declare ptr @memcpy.2(ptr, ptr, i64)

declare ptr @memset.3(ptr, i32, i64)

declare void @_fltused()

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!76, !77}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "array.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!2 = !{!3, !15, !36, !45, !50, !54, !65, !3, !15, !36, !45, !50, !54}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !1, file: !1, size: 64, align: 64, elements: !4)
!4 = !{!5, !6, !7, !8, !9, !10, !11, !12, !13, !14}
!5 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!6 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!7 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!8 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!9 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!11 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!12 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!13 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !1, file: !1, size: 64, align: 64, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!17 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !1, file: !1, size: 32, align: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44}
!38 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!44 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !1, file: !1, size: 32, align: 32, elements: !46)
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !1, file: !1, size: 64, align: 64, elements: !51)
!51 = !{!52, !53}
!52 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !1, file: !1, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64}
!56 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "SharedLib", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "CrossAndroid", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "NoLink", value: 256, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__android_LogPriority", scope: !1, file: !1, size: 32, align: 32, elements: !66)
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75}
!67 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "DEFAULT", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "VERBOSE", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "DEBUG", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "INFO", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "WARN", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "ERROR", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "FATAL", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "SILENT", value: 8, isUnsigned: true)
!76 = !{i32 2, !"CodeView", i32 1}
!77 = !{i32 2, !"Debug Info Version", i32 3}
!78 = distinct !DISubprogram(name: "add:*[]u32_u32_:void", linkageName: "__array_add:*[]u32_u32_:void", scope: !1, file: !1, line: 26, type: !79, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !90)
!79 = !DISubroutineType(types: !80)
!80 = !{null, !81, !89}
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u32", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!82 = !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !83, size: 128, align: 64, elements: !84)
!83 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\Android\\src")
!84 = !{!85, !87}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !83, file: !83, baseType: !86, size: 64, align: 64)
!86 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !88, size: 64, align: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u32", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!89 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!90 = !{}
!91 = !DILocation(line: 26, scope: !78)
!92 = !DILocalVariable(name: "arg_arr", scope: !78, file: !1, line: 26, type: !81)
!93 = !DILocalVariable(name: "item", arg: 1, scope: !78, file: !1, line: 26, type: !89)
!94 = !DILocation(line: 27, scope: !78)
!95 = !DILocalVariable(name: "arr", scope: !78, file: !1, line: 27, type: !81)
!96 = !DILocation(line: 28, scope: !78)
!97 = !DILocalVariable(name: "header", scope: !78, file: !1, line: 28, type: !98)
!98 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__array_Header", baseType: !99, size: 64, align: 64, dwarfAddressSpace: 0)
!99 = !DICompositeType(tag: DW_TAG_structure_type, name: "__array_Header", scope: !1, file: !1, size: 256, elements: !100)
!100 = !{!101, !102}
!101 = !DIDerivedType(tag: DW_TAG_member, name: "capacity", scope: !1, file: !1, baseType: !86, size: 64, align: 64)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "allocator", scope: !1, file: !1, baseType: !103, size: 192, align: 64, offset: 64)
!103 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !1, file: !1, size: 192, elements: !104)
!104 = !{!105, !112, !116}
!105 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1, file: !1, baseType: !106, size: 64, align: 64)
!106 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *__mem_Allocator) -> ?*", baseType: !107, size: 64, align: 64, dwarfAddressSpace: 0)
!107 = !DISubroutineType(types: !108)
!108 = !{!109, !86, !110}
!109 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!110 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_Allocator", baseType: !111, size: 64, align: 64, dwarfAddressSpace: 0)
!111 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !83, file: !83, size: 192, align: 64, flags: DIFlagFwdDecl)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1, file: !1, baseType: !113, size: 64, align: 64, offset: 64)
!113 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *__mem_Allocator)", baseType: !114, size: 64, align: 64, dwarfAddressSpace: 0)
!114 = !DISubroutineType(types: !115)
!115 = !{null, !109, !110}
!116 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !109, size: 64, align: 64, offset: 128)
!117 = !DILocation(line: 29, scope: !78)
!118 = !DILocation(line: 30, scope: !78)
!119 = !DILocalVariable(name: "new_capacity", scope: !78, file: !1, line: 30, type: !86)
!120 = !DILocation(line: 31, scope: !78)
!121 = !DILocalVariable(name: "maybe_ptr", scope: !78, file: !1, line: 31, type: !122)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "?*__array_Header", baseType: !99, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DILocation(line: 32, scope: !78)
!124 = !DILocation(line: 33, scope: !78)
!125 = !DILocation(line: 34, scope: !78)
!126 = !DILocation(line: 35, scope: !78)
!127 = !DILocation(line: 38, scope: !78)
!128 = !DILocalVariable(name: "ptr", scope: !78, file: !1, line: 38, type: !98)
!129 = !DILocation(line: 39, scope: !78)
!130 = !DILocation(line: 40, scope: !78)
!131 = !DILocation(line: 41, scope: !78)
!132 = !DILocation(line: 42, scope: !78)
!133 = !DILocation(line: 43, scope: !78)
!134 = !DILocation(line: 46, scope: !78)
!135 = !DILocation(line: 47, scope: !78)
!136 = !DILocation(line: 48, scope: !78)
!137 = distinct !DISubprogram(name: "create:type_*__mem_Allocator_:[]u8", linkageName: "__array_create:type_*__mem_Allocator_:[]u8", scope: !1, file: !1, line: 10, type: !138, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !90)
!138 = !DISubroutineType(types: !139)
!139 = !{!140, !147, !110}
!140 = !DICompositeType(tag: DW_TAG_structure_type, scope: !141, file: !141, size: 128, align: 64, elements: !142)
!141 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!142 = !{!143, !144}
!143 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !141, file: !141, baseType: !86, size: 64, align: 64)
!144 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !141, file: !141, baseType: !145, size: 64, align: 64, offset: 64)
!145 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !146, size: 64, align: 64, dwarfAddressSpace: 0)
!146 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!147 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!148 = !DILocation(line: 10, scope: !137)
!149 = !DILocalVariable(name: "T", scope: !137, file: !1, line: 10, type: !147)
!150 = !DILocalVariable(name: "allocator", arg: 1, scope: !137, file: !1, line: 10, type: !110)
!151 = !DILocation(line: 11, scope: !137)
!152 = !DILocalVariable(name: "INITIAL_CAPACITY", scope: !137, file: !1, line: 11, type: !86)
!153 = !DILocation(line: 12, scope: !137)
!154 = !DILocalVariable(name: "maybe_ptr", scope: !137, file: !1, line: 12, type: !122)
!155 = !DILocation(line: 13, scope: !137)
!156 = !DILocation(line: 14, scope: !137)
!157 = !DILocation(line: 16, scope: !137)
!158 = !DILocalVariable(name: "ptr", scope: !137, file: !1, line: 16, type: !98)
!159 = !DILocation(line: 17, scope: !137)
!160 = !DILocation(line: 18, scope: !137)
!161 = !DILocation(line: 20, scope: !137)
!162 = !DILocalVariable(name: "res", scope: !137, file: !1, line: 20, type: !140)
!163 = !DILocation(line: 21, scope: !137)
!164 = !DILocation(line: 22, scope: !137)
!165 = !DILocation(line: 23, scope: !137)
!166 = distinct !DISubprogram(name: "add:*[]u8_u8_:void", linkageName: "__array_add:*[]u8_u8_:void", scope: !1, file: !1, line: 26, type: !167, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !90)
!167 = !DISubroutineType(types: !168)
!168 = !{null, !169, !146}
!169 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u8", baseType: !140, size: 64, align: 64, dwarfAddressSpace: 0)
!170 = !DILocation(line: 26, scope: !166)
!171 = !DILocalVariable(name: "arg_arr", scope: !166, file: !1, line: 26, type: !169)
!172 = !DILocalVariable(name: "item", arg: 1, scope: !166, file: !1, line: 26, type: !146)
!173 = !DILocation(line: 27, scope: !166)
!174 = !DILocalVariable(name: "arr", scope: !166, file: !1, line: 27, type: !169)
!175 = !DILocation(line: 28, scope: !166)
!176 = !DILocalVariable(name: "header", scope: !166, file: !1, line: 28, type: !98)
!177 = !DILocation(line: 29, scope: !166)
!178 = !DILocation(line: 30, scope: !166)
!179 = !DILocalVariable(name: "new_capacity", scope: !166, file: !1, line: 30, type: !86)
!180 = !DILocation(line: 31, scope: !166)
!181 = !DILocalVariable(name: "maybe_ptr", scope: !166, file: !1, line: 31, type: !122)
!182 = !DILocation(line: 32, scope: !166)
!183 = !DILocation(line: 33, scope: !166)
!184 = !DILocation(line: 34, scope: !166)
!185 = !DILocation(line: 35, scope: !166)
!186 = !DILocation(line: 38, scope: !166)
!187 = !DILocalVariable(name: "ptr", scope: !166, file: !1, line: 38, type: !98)
!188 = !DILocation(line: 39, scope: !166)
!189 = !DILocation(line: 40, scope: !166)
!190 = !DILocation(line: 41, scope: !166)
!191 = !DILocation(line: 42, scope: !166)
!192 = !DILocation(line: 43, scope: !166)
!193 = !DILocation(line: 46, scope: !166)
!194 = !DILocation(line: 47, scope: !166)
!195 = !DILocation(line: 48, scope: !166)
!196 = distinct !DISubprogram(name: "create:type_*__mem_Allocator_:[]u32", linkageName: "__array_create:type_*__mem_Allocator_:[]u32", scope: !1, file: !1, line: 10, type: !197, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !90)
!197 = !DISubroutineType(types: !198)
!198 = !{!82, !147, !110}
!199 = !DILocation(line: 10, scope: !196)
!200 = !DILocalVariable(name: "T", scope: !196, file: !1, line: 10, type: !147)
!201 = !DILocalVariable(name: "allocator", arg: 1, scope: !196, file: !1, line: 10, type: !110)
!202 = !DILocation(line: 11, scope: !196)
!203 = !DILocalVariable(name: "INITIAL_CAPACITY", scope: !196, file: !1, line: 11, type: !86)
!204 = !DILocation(line: 12, scope: !196)
!205 = !DILocalVariable(name: "maybe_ptr", scope: !196, file: !1, line: 12, type: !122)
!206 = !DILocation(line: 13, scope: !196)
!207 = !DILocation(line: 14, scope: !196)
!208 = !DILocation(line: 16, scope: !196)
!209 = !DILocalVariable(name: "ptr", scope: !196, file: !1, line: 16, type: !98)
!210 = !DILocation(line: 17, scope: !196)
!211 = !DILocation(line: 18, scope: !196)
!212 = !DILocation(line: 20, scope: !196)
!213 = !DILocalVariable(name: "res", scope: !196, file: !1, line: 20, type: !82)
!214 = !DILocation(line: 21, scope: !196)
!215 = !DILocation(line: 22, scope: !196)
!216 = !DILocation(line: 23, scope: !196)
!217 = distinct !DISubprogram(name: "free:*[]u32_:void", linkageName: "__array_free:*[]u32_:void", scope: !1, file: !1, line: 50, type: !218, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !90)
!218 = !DISubroutineType(types: !219)
!219 = !{null, !81}
!220 = !DILocation(line: 50, scope: !217)
!221 = !DILocalVariable(name: "arg_arr", scope: !217, file: !1, line: 50, type: !81)
!222 = !DILocation(line: 51, scope: !217)
!223 = !DILocalVariable(name: "arr", scope: !217, file: !1, line: 51, type: !81)
!224 = !DILocation(line: 52, scope: !217)
!225 = !DILocalVariable(name: "header", scope: !217, file: !1, line: 52, type: !98)
!226 = !DILocation(line: 53, scope: !217)
!227 = !DILocation(line: 54, scope: !217)
!228 = !DILocation(line: 55, scope: !217)
!229 = !DILocation(line: 56, scope: !217)
!230 = distinct !DISubprogram(name: "free:*[]u8_:void", linkageName: "__array_free:*[]u8_:void", scope: !1, file: !1, line: 50, type: !231, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !90)
!231 = !DISubroutineType(types: !232)
!232 = !{null, !169}
!233 = !DILocation(line: 50, scope: !230)
!234 = !DILocalVariable(name: "arg_arr", scope: !230, file: !1, line: 50, type: !169)
!235 = !DILocation(line: 51, scope: !230)
!236 = !DILocalVariable(name: "arr", scope: !230, file: !1, line: 51, type: !169)
!237 = !DILocation(line: 52, scope: !230)
!238 = !DILocalVariable(name: "header", scope: !230, file: !1, line: 52, type: !98)
!239 = !DILocation(line: 53, scope: !230)
!240 = !DILocation(line: 54, scope: !230)
!241 = !DILocation(line: 55, scope: !230)
!242 = !DILocation(line: 56, scope: !230)
