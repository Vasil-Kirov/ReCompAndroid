; ModuleID = 'io'
source_filename = "io.rcp"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "arm64v8a-unknown-linux-androideabi34"

%slice.313 = type { i64, ptr }
%string.255 = type { ptr, i64 }
%__init_TypeInfo.268 = type { i64, %__init_TypeUnion.267 }
%__init_TypeUnion.267 = type { %__init_StructType.259 }
%__init_StructType.259 = type { %slice.308, %string.255, i32 }
%slice.308 = type { i64, ptr }
%slice.309 = type { i64, ptr }
%__init_BasicType.257 = type { i64, i32, i32, %string.255 }
%__init_FunctionType.260 = type { i64, %slice.309 }
%__init_PointerType.261 = type { i64, i1 }
%__init_ArrayType.262 = type { i64, i32 }
%__init_SliceType.263 = type { i64 }
%__init_EnumType.264 = type { %string.255, %slice.310, i64 }
%slice.310 = type { i64, ptr }
%__init_GenericType.266 = type { %string.255 }
%__init_Arg.256 = type { i64, ptr }
%__init_StructMember.258 = type { %string.255, i64 }
%slice.312 = type { i64, ptr }
%__mem_Allocator.270 = type { ptr, ptr, ptr }
%slice.314 = type { i64, ptr }
%slice.311 = type { i64, ptr }

@__main_LogTag = external global ptr
@__main_GLOBAL = external global i64
@__pthread_DETACHED = external global i32
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.313
@__os_stdin = external global i64
@__os_stdout = external global i64
@__os_stderr = external global i64
@__os_SYS_read = external global i64
@__os_SYS_write = external global i64
@__os_SYS_open = external global i64
@__os_SYS_mmap = external global i64
@__os_SYS_munmap = external global i64
@__os_SYS_exit = external global i64
@__os_PROT_READ = external global i64
@__os_PROT_WRITE = external global i64
@__os_PROT_EXEC = external global i64
@__os_PROT_NONE = external global i64
@__os_MAP_SHARED = external global i64
@__os_MAP_PRIVATE = external global i64
@__os_MAP_ANONYMOUS = external global i64
@__os_MAP_ANON = external global i64
@__os_MAP_NORESERVE = external global i64
@__str_CONTINUE_BIT = external global i8
@0 = private unnamed_addr constant [8 x i8] c"invalid\00", align 1
@1 = private unnamed_addr constant [4 x i8] c"fn(\00", align 1
@2 = private unnamed_addr constant [3 x i8] c", \00", align 1
@3 = private unnamed_addr constant [2 x i8] c")\00", align 1
@4 = private unnamed_addr constant [5 x i8] c" -> \00", align 1
@5 = private unnamed_addr constant [2 x i8] c"*\00", align 1
@6 = private unnamed_addr constant [4 x i8] c"[x]\00", align 1
@7 = private unnamed_addr constant [3 x i8] c"[]\00", align 1
@8 = private unnamed_addr constant [3 x i8] c"<>\00", align 1
@9 = private unnamed_addr constant [5 x i8] c"true\00", align 1
@10 = private unnamed_addr constant [6 x i8] c"false\00", align 1
@11 = private unnamed_addr constant [4 x i8] c" { \00", align 1
@12 = private unnamed_addr constant [8 x i8] c"mem: %\0A\00", align 1
@13 = private unnamed_addr constant [4 x i8] c" = \00", align 1
@14 = private unnamed_addr constant [3 x i8] c", \00", align 1
@15 = private unnamed_addr constant [3 x i8] c" }\00", align 1
@16 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@17 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

define void @__io___GlobalInitializerFunction_0() {
block_0:
  ret void
}

declare ptr @__main_thread_start(ptr)

declare void @__main_warn(ptr, ptr)

declare void @__main_fatal(ptr, ptr)

declare void @ANativeActivity_onCreate(ptr, ptr, i64)

declare i32 @__main_main()

declare i32 @__android_log_write(i32, ptr, ptr)

declare i32 @__android_log_print(i32, ptr, ptr, ...)

declare i32 @pthread_create(ptr, ptr, ptr, ptr)

declare i32 @pthread_attr_init(ptr)

declare i32 @pthread_attr_setdetachstate(ptr, i32)

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare void @__os_assert(i1, ptr)

declare i64 @_system_call(i64, ...)

declare void @__os_print(ptr, i32)

declare void @__os_abort()

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

declare i32 @__os_read_stdin_line(ptr, i32)

define void @__io_push_string(ptr %0, ptr %1) !dbg !78 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %string.255, align 8
  %4 = alloca ptr, align 8
  %5 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !97
  call void @llvm.dbg.value(metadata ptr %2, metadata !98, metadata !DIExpression()), !dbg !97
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !97
  call void @llvm.dbg.value(metadata ptr %3, metadata !99, metadata !DIExpression()), !dbg !97
  %7 = getelementptr inbounds %string.255, ptr %3, i32 0, i32 1, !dbg !100
  %8 = load i64, ptr %7, align 8, !dbg !100
  %9 = getelementptr inbounds %string.255, ptr %3, i32 0, i32 0, !dbg !100
  %10 = load ptr, ptr %9, align 8, !dbg !100
  store ptr %10, ptr %4, align 8, !dbg !100
  store i64 0, ptr %5, align 8, !dbg !100
  br label %block_1, !dbg !100

block_1:                                          ; preds = %block_3, %block_0
  %11 = load i64, ptr %5, align 8, !dbg !100
  %12 = icmp ult i64 %11, %8, !dbg !100
  br i1 %12, label %block_2, label %block_4, !dbg !100

block_2:                                          ; preds = %block_1
  %13 = load ptr, ptr %4, align 8, !dbg !100
  %14 = call i32 @__str_deref(ptr %13), !dbg !100
  store i32 %14, ptr %6, align 4, !dbg !100
  call void @llvm.dbg.declare(metadata ptr %6, metadata !101, metadata !DIExpression()), !dbg !100
  call void @llvm.dbg.declare(metadata ptr %5, metadata !102, metadata !DIExpression()), !dbg !100
  %15 = load ptr, ptr %2, align 8, !dbg !103
  %16 = load i32, ptr %6, align 4, !dbg !103
  call void @"__array_add:*[]u32_u32_:void"(ptr %15, i32 %16), !dbg !103
  br label %block_3, !dbg !103

block_3:                                          ; preds = %block_2
  %17 = load i64, ptr %5, align 8, !dbg !103
  %18 = add i64 %17, 1, !dbg !103
  store i64 %18, ptr %5, align 8, !dbg !103
  %19 = load ptr, ptr %4, align 8, !dbg !103
  %20 = call ptr @__str__it_advance(ptr %19, i64 %8, i64 %17), !dbg !103
  store ptr %20, ptr %4, align 8, !dbg !103
  br label %block_1, !dbg !103

block_4:                                          ; preds = %block_1
  ret void, !dbg !104
}

define void @__io_format_uint(ptr %0, i64 %1) !dbg !105 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !109
  call void @llvm.dbg.value(metadata ptr %2, metadata !110, metadata !DIExpression()), !dbg !109
  store i64 %1, ptr %3, align 8, !dbg !109
  call void @llvm.dbg.value(metadata ptr %3, metadata !111, metadata !DIExpression()), !dbg !109
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !112
  call void @llvm.dbg.declare(metadata ptr %5, metadata !113, metadata !DIExpression()), !dbg !112
  %11 = load i64, ptr %3, align 8, !dbg !117
  store i64 %11, ptr %6, align 8, !dbg !117
  call void @llvm.dbg.declare(metadata ptr %6, metadata !118, metadata !DIExpression()), !dbg !117
  %12 = load i64, ptr %6, align 8, !dbg !119
  %13 = icmp eq i64 %12, 0, !dbg !119
  br i1 %13, label %block_1, label %block_2, !dbg !119

block_1:                                          ; preds = %block_0
  %14 = load ptr, ptr %2, align 8, !dbg !120
  call void @"__array_add:*[]u32_u32_:void"(ptr %14, i32 48), !dbg !120
  ret void, !dbg !121

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !121

block_3:                                          ; preds = %block_2
  store i64 0, ptr %7, align 8, !dbg !122
  call void @llvm.dbg.declare(metadata ptr %7, metadata !123, metadata !DIExpression()), !dbg !122
  br label %block_4, !dbg !124

block_4:                                          ; preds = %block_5, %block_3
  %15 = load i64, ptr %6, align 8, !dbg !124
  %16 = icmp ugt i64 %15, 0, !dbg !124
  br i1 %16, label %block_5, label %block_6, !dbg !124

block_5:                                          ; preds = %block_4
  %17 = load i64, ptr %6, align 8, !dbg !125
  %18 = urem i64 %17, 10, !dbg !125
  store i64 %18, ptr %8, align 8, !dbg !125
  call void @llvm.dbg.declare(metadata ptr %8, metadata !126, metadata !DIExpression()), !dbg !125
  %19 = load i64, ptr %6, align 8, !dbg !127
  %20 = udiv i64 %19, 10, !dbg !127
  store i64 %20, ptr %6, align 8, !dbg !127
  %21 = load i64, ptr %8, align 8, !dbg !128
  %22 = add i64 48, %21, !dbg !128
  store i64 %22, ptr %9, align 8, !dbg !128
  call void @llvm.dbg.declare(metadata ptr %9, metadata !129, metadata !DIExpression()), !dbg !128
  %23 = load i64, ptr %7, align 8, !dbg !130
  %24 = getelementptr [256 x i32], ptr %5, i64 0, i64 %23, !dbg !130
  %25 = load i64, ptr %9, align 8, !dbg !130
  %26 = trunc i64 %25 to i32, !dbg !130
  store i32 %26, ptr %24, align 4, !dbg !130
  %27 = load i64, ptr %7, align 8, !dbg !131
  %28 = add i64 %27, 1, !dbg !131
  store i64 %28, ptr %7, align 8, !dbg !131
  br label %block_4, !dbg !131

block_6:                                          ; preds = %block_4
  %29 = load i64, ptr %7, align 8, !dbg !132
  store i64 0, ptr %10, align 8, !dbg !132
  br label %block_7, !dbg !132

block_7:                                          ; preds = %block_9, %block_6
  %30 = load i64, ptr %10, align 8, !dbg !132
  %31 = icmp ult i64 %30, %29, !dbg !132
  br i1 %31, label %block_8, label %block_10, !dbg !132

block_8:                                          ; preds = %block_7
  call void @llvm.dbg.declare(metadata ptr %10, metadata !133, metadata !DIExpression()), !dbg !132
  %32 = load ptr, ptr %2, align 8, !dbg !134
  %33 = load i64, ptr %7, align 8, !dbg !134
  %34 = load i64, ptr %10, align 8, !dbg !134
  %35 = sub i64 %33, %34, !dbg !134
  %36 = sub i64 %35, 1, !dbg !134
  %37 = getelementptr [256 x i32], ptr %5, i64 0, i64 %36, !dbg !134
  %38 = load i32, ptr %37, align 4, !dbg !134
  call void @"__array_add:*[]u32_u32_:void"(ptr %32, i32 %38), !dbg !134
  br label %block_9, !dbg !134

block_9:                                          ; preds = %block_8
  %39 = load i64, ptr %10, align 8, !dbg !134
  %40 = add i64 %39, 1, !dbg !134
  store i64 %40, ptr %10, align 8, !dbg !134
  br label %block_7, !dbg !134

block_10:                                         ; preds = %block_7
  ret void, !dbg !135
}

define void @__io_format_int(ptr %0, i64 %1) !dbg !136 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca i64, align 8
  %4 = alloca [256 x i32], align 4
  %5 = alloca [256 x i32], align 4
  %6 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %5, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  %7 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %7, i8 0, i32 1, i1 false)
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %10, i8 0, i32 4, i1 false)
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !139
  call void @llvm.dbg.value(metadata ptr %2, metadata !140, metadata !DIExpression()), !dbg !139
  store i64 %1, ptr %3, align 8, !dbg !139
  call void @llvm.dbg.value(metadata ptr %3, metadata !141, metadata !DIExpression()), !dbg !139
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %5, ptr align 4 %4, i64 1024, i1 false), !dbg !142
  call void @llvm.dbg.declare(metadata ptr %5, metadata !143, metadata !DIExpression()), !dbg !142
  %12 = load i64, ptr %3, align 8, !dbg !144
  store i64 %12, ptr %6, align 8, !dbg !144
  call void @llvm.dbg.declare(metadata ptr %6, metadata !145, metadata !DIExpression()), !dbg !144
  %13 = load i64, ptr %6, align 8, !dbg !146
  %14 = icmp eq i64 %13, 0, !dbg !146
  br i1 %14, label %block_1, label %block_2, !dbg !146

block_1:                                          ; preds = %block_0
  %15 = load ptr, ptr %2, align 8, !dbg !147
  call void @"__array_add:*[]u32_u32_:void"(ptr %15, i32 48), !dbg !147
  ret void, !dbg !148

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !148

block_3:                                          ; preds = %block_2
  store i1 false, ptr %7, align 1, !dbg !149
  call void @llvm.dbg.declare(metadata ptr %7, metadata !150, metadata !DIExpression()), !dbg !149
  %16 = load i64, ptr %6, align 8, !dbg !152
  %17 = icmp slt i64 %16, 0, !dbg !152
  br i1 %17, label %block_4, label %block_5, !dbg !152

block_4:                                          ; preds = %block_3
  %18 = load i64, ptr %6, align 8, !dbg !153
  %19 = sub i64 0, %18, !dbg !153
  store i64 %19, ptr %6, align 8, !dbg !153
  store i1 true, ptr %7, align 1, !dbg !154
  br label %block_6, !dbg !154

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !154

block_6:                                          ; preds = %block_5, %block_4
  store i64 0, ptr %8, align 8, !dbg !155
  call void @llvm.dbg.declare(metadata ptr %8, metadata !156, metadata !DIExpression()), !dbg !155
  br label %block_7, !dbg !157

block_7:                                          ; preds = %block_8, %block_6
  %20 = load i64, ptr %6, align 8, !dbg !157
  %21 = icmp sgt i64 %20, 0, !dbg !157
  br i1 %21, label %block_8, label %block_9, !dbg !157

block_8:                                          ; preds = %block_7
  %22 = load i64, ptr %6, align 8, !dbg !158
  %23 = srem i64 %22, 10, !dbg !158
  store i64 %23, ptr %9, align 8, !dbg !158
  call void @llvm.dbg.declare(metadata ptr %9, metadata !159, metadata !DIExpression()), !dbg !158
  %24 = load i64, ptr %6, align 8, !dbg !160
  %25 = sdiv i64 %24, 10, !dbg !160
  store i64 %25, ptr %6, align 8, !dbg !160
  %26 = load i64, ptr %9, align 8, !dbg !161
  %27 = trunc i64 %26 to i8, !dbg !161
  %28 = zext i8 %27 to i32, !dbg !161
  %29 = add i32 48, %28, !dbg !161
  store i32 %29, ptr %10, align 4, !dbg !161
  call void @llvm.dbg.declare(metadata ptr %10, metadata !162, metadata !DIExpression()), !dbg !161
  %30 = load i64, ptr %8, align 8, !dbg !163
  %31 = getelementptr [256 x i32], ptr %5, i64 0, i64 %30, !dbg !163
  %32 = load i32, ptr %10, align 4, !dbg !163
  store i32 %32, ptr %31, align 4, !dbg !163
  %33 = load i64, ptr %8, align 8, !dbg !164
  %34 = add i64 %33, 1, !dbg !164
  store i64 %34, ptr %8, align 8, !dbg !164
  br label %block_7, !dbg !164

block_9:                                          ; preds = %block_7
  %35 = load i1, ptr %7, align 1, !dbg !165
  br i1 %35, label %block_10, label %block_11, !dbg !165

block_10:                                         ; preds = %block_9
  %36 = load ptr, ptr %2, align 8, !dbg !165
  call void @"__array_add:*[]u32_u32_:void"(ptr %36, i32 45), !dbg !165
  br label %block_12, !dbg !165

block_11:                                         ; preds = %block_9
  br label %block_12, !dbg !165

block_12:                                         ; preds = %block_11, %block_10
  %37 = load i64, ptr %8, align 8, !dbg !166
  store i64 0, ptr %11, align 8, !dbg !166
  br label %block_13, !dbg !166

block_13:                                         ; preds = %block_15, %block_12
  %38 = load i64, ptr %11, align 8, !dbg !166
  %39 = icmp ult i64 %38, %37, !dbg !166
  br i1 %39, label %block_14, label %block_16, !dbg !166

block_14:                                         ; preds = %block_13
  call void @llvm.dbg.declare(metadata ptr %11, metadata !167, metadata !DIExpression()), !dbg !166
  %40 = load ptr, ptr %2, align 8, !dbg !168
  %41 = load i64, ptr %8, align 8, !dbg !168
  %42 = load i64, ptr %11, align 8, !dbg !168
  %43 = sub i64 %41, %42, !dbg !168
  %44 = sub i64 %43, 1, !dbg !168
  %45 = getelementptr [256 x i32], ptr %5, i64 0, i64 %44, !dbg !168
  %46 = load i32, ptr %45, align 4, !dbg !168
  call void @"__array_add:*[]u32_u32_:void"(ptr %40, i32 %46), !dbg !168
  br label %block_15, !dbg !168

block_15:                                         ; preds = %block_14
  %47 = load i64, ptr %11, align 8, !dbg !168
  %48 = add i64 %47, 1, !dbg !168
  store i64 %48, ptr %11, align 8, !dbg !168
  br label %block_13, !dbg !168

block_16:                                         ; preds = %block_13
  ret void, !dbg !169
}

define void @__io_print_typetype(ptr %0, ptr %1) !dbg !170 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 48, i1 false)
  %4 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  %5 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  %6 = alloca %string.255, align 8
  %7 = alloca %slice.309, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca i64, align 8
  %10 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 48, i1 false)
  %11 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 16, i1 false)
  %12 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 16, i1 false)
  %13 = alloca %string.255, align 8
  %14 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 48, i1 false)
  %15 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  %16 = alloca %string.255, align 8
  %17 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 48, i1 false)
  %18 = alloca %string.255, align 8
  %19 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 48, i1 false)
  %20 = alloca %string.255, align 8
  %21 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %21, i8 0, i32 48, i1 false)
  %22 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %22, i8 0, i32 16, i1 false)
  %23 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %23, i8 0, i32 16, i1 false)
  %24 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %24, i8 0, i32 16, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !243
  call void @llvm.dbg.value(metadata ptr %2, metadata !244, metadata !DIExpression()), !dbg !243
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 48, i1 false), !dbg !243
  call void @llvm.dbg.value(metadata ptr %3, metadata !245, metadata !DIExpression()), !dbg !243
  %25 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 0, !dbg !246
  %26 = load i64, ptr %25, align 8, !dbg !246
  switch i64 %26, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_4
    i64 3, label %block_15
    i64 4, label %block_16
    i64 5, label %block_17
    i64 6, label %block_18
    i64 7, label %block_19
    i64 8, label %block_20
    i64 9, label %block_21
  ], !dbg !246

block_2:                                          ; preds = %block_0
  %27 = load ptr, ptr %2, align 8, !dbg !247
  %28 = alloca %string.255, align 8, !dbg !247
  %String = getelementptr inbounds %string.255, ptr %28, i32 0, i32 0, !dbg !247
  %Size = getelementptr inbounds %string.255, ptr %28, i32 0, i32 1, !dbg !247
  store ptr @0, ptr %String, align 8, !dbg !247
  store i64 7, ptr %Size, align 8, !dbg !247
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %28, i64 16, i1 false), !dbg !247
  call void @__io_push_string(ptr %27, ptr %4), !dbg !247
  br label %block_1, !dbg !247

block_3:                                          ; preds = %block_0
  %29 = load ptr, ptr %2, align 8, !dbg !248
  %30 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !248
  %31 = getelementptr inbounds %__init_BasicType.257, ptr %30, i32 0, i32 3, !dbg !248
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %31, i64 16, i1 false), !dbg !248
  call void @__io_push_string(ptr %29, ptr %5), !dbg !248
  br label %block_1, !dbg !248

block_4:                                          ; preds = %block_0
  %32 = load ptr, ptr %2, align 8, !dbg !249
  %33 = alloca %string.255, align 8, !dbg !249
  %String1 = getelementptr inbounds %string.255, ptr %33, i32 0, i32 0, !dbg !249
  %Size2 = getelementptr inbounds %string.255, ptr %33, i32 0, i32 1, !dbg !249
  store ptr @1, ptr %String1, align 8, !dbg !249
  store i64 3, ptr %Size2, align 8, !dbg !249
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %33, i64 16, i1 false), !dbg !249
  call void @__io_push_string(ptr %32, ptr %6), !dbg !249
  %34 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !250
  %35 = getelementptr inbounds %__init_FunctionType.260, ptr %34, i32 0, i32 1, !dbg !250
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %35, i64 16, i1 false), !dbg !250
  call void @llvm.dbg.declare(metadata ptr %7, metadata !251, metadata !DIExpression()), !dbg !250
  %36 = getelementptr inbounds %slice.309, ptr %7, i32 0, i32 0, !dbg !252
  %37 = load i64, ptr %36, align 8, !dbg !252
  store i64 0, ptr %8, align 8, !dbg !252
  br label %block_5, !dbg !252

block_5:                                          ; preds = %block_7, %block_4
  %38 = load i64, ptr %8, align 8, !dbg !252
  %39 = icmp ult i64 %38, %37, !dbg !252
  br i1 %39, label %block_6, label %block_8, !dbg !252

block_6:                                          ; preds = %block_5
  %40 = load i64, ptr %8, align 8, !dbg !252
  %41 = getelementptr inbounds %slice.309, ptr %7, i32 0, i32 1, !dbg !252
  %42 = load ptr, ptr %41, align 8, !dbg !252
  %43 = getelementptr i64, ptr %42, i64 %40, !dbg !252
  %44 = load i64, ptr %43, align 8, !dbg !252
  store i64 %44, ptr %9, align 8, !dbg !252
  call void @llvm.dbg.declare(metadata ptr %9, metadata !253, metadata !DIExpression()), !dbg !252
  call void @llvm.dbg.declare(metadata ptr %8, metadata !254, metadata !DIExpression()), !dbg !252
  %45 = load ptr, ptr %2, align 8, !dbg !255
  %46 = load i64, ptr %9, align 8, !dbg !255
  %47 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !255
  %48 = getelementptr %__init_TypeInfo.268, ptr %47, i64 %46, !dbg !255
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %48, i64 48, i1 false), !dbg !255
  call void @__io_print_typetype(ptr %45, ptr %10), !dbg !255
  %49 = load i64, ptr %8, align 8, !dbg !256
  %50 = add i64 %49, 1, !dbg !256
  %51 = getelementptr inbounds %slice.309, ptr %7, i32 0, i32 0, !dbg !256
  %52 = load i64, ptr %51, align 8, !dbg !256
  %53 = icmp ne i64 %50, %52, !dbg !256
  br i1 %53, label %block_9, label %block_10, !dbg !256

block_9:                                          ; preds = %block_6
  %54 = load ptr, ptr %2, align 8, !dbg !257
  %55 = alloca %string.255, align 8, !dbg !257
  %String3 = getelementptr inbounds %string.255, ptr %55, i32 0, i32 0, !dbg !257
  %Size4 = getelementptr inbounds %string.255, ptr %55, i32 0, i32 1, !dbg !257
  store ptr @2, ptr %String3, align 8, !dbg !257
  store i64 2, ptr %Size4, align 8, !dbg !257
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %11, ptr align 8 %55, i64 16, i1 false), !dbg !257
  call void @__io_push_string(ptr %54, ptr %11), !dbg !257
  br label %block_11, !dbg !257

block_10:                                         ; preds = %block_6
  br label %block_11, !dbg !257

block_11:                                         ; preds = %block_10, %block_9
  br label %block_7, !dbg !257

block_7:                                          ; preds = %block_11
  %56 = load i64, ptr %8, align 8, !dbg !257
  %57 = add i64 %56, 1, !dbg !257
  store i64 %57, ptr %8, align 8, !dbg !257
  br label %block_5, !dbg !257

block_8:                                          ; preds = %block_5
  %58 = load ptr, ptr %2, align 8, !dbg !258
  %59 = alloca %string.255, align 8, !dbg !258
  %String5 = getelementptr inbounds %string.255, ptr %59, i32 0, i32 0, !dbg !258
  %Size6 = getelementptr inbounds %string.255, ptr %59, i32 0, i32 1, !dbg !258
  store ptr @3, ptr %String5, align 8, !dbg !258
  store i64 1, ptr %Size6, align 8, !dbg !258
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %12, ptr align 8 %59, i64 16, i1 false), !dbg !258
  call void @__io_push_string(ptr %58, ptr %12), !dbg !258
  %60 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !259
  %61 = getelementptr inbounds %__init_FunctionType.260, ptr %60, i32 0, i32 0, !dbg !259
  %62 = load i64, ptr %61, align 8, !dbg !259
  %63 = load i64, ptr @__init_INVALID_TYPE, align 8, !dbg !259
  %64 = icmp ne i64 %62, %63, !dbg !259
  br i1 %64, label %block_12, label %block_13, !dbg !259

block_12:                                         ; preds = %block_8
  %65 = load ptr, ptr %2, align 8, !dbg !260
  %66 = alloca %string.255, align 8, !dbg !260
  %String7 = getelementptr inbounds %string.255, ptr %66, i32 0, i32 0, !dbg !260
  %Size8 = getelementptr inbounds %string.255, ptr %66, i32 0, i32 1, !dbg !260
  store ptr @4, ptr %String7, align 8, !dbg !260
  store i64 4, ptr %Size8, align 8, !dbg !260
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %13, ptr align 8 %66, i64 16, i1 false), !dbg !260
  call void @__io_push_string(ptr %65, ptr %13), !dbg !260
  %67 = load ptr, ptr %2, align 8, !dbg !261
  %68 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !261
  %69 = getelementptr inbounds %__init_FunctionType.260, ptr %68, i32 0, i32 0, !dbg !261
  %70 = load i64, ptr %69, align 8, !dbg !261
  %71 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !261
  %72 = getelementptr %__init_TypeInfo.268, ptr %71, i64 %70, !dbg !261
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %72, i64 48, i1 false), !dbg !261
  call void @__io_print_typetype(ptr %67, ptr %14), !dbg !261
  br label %block_14, !dbg !261

block_13:                                         ; preds = %block_8
  br label %block_14, !dbg !261

block_14:                                         ; preds = %block_13, %block_12
  br label %block_1, !dbg !261

block_15:                                         ; preds = %block_0
  %73 = load ptr, ptr %2, align 8, !dbg !262
  %74 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !262
  %75 = getelementptr inbounds %__init_StructType.259, ptr %74, i32 0, i32 1, !dbg !262
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %75, i64 16, i1 false), !dbg !262
  call void @__io_push_string(ptr %73, ptr %15), !dbg !262
  br label %block_1, !dbg !262

block_16:                                         ; preds = %block_0
  %76 = load ptr, ptr %2, align 8, !dbg !263
  %77 = alloca %string.255, align 8, !dbg !263
  %String9 = getelementptr inbounds %string.255, ptr %77, i32 0, i32 0, !dbg !263
  %Size10 = getelementptr inbounds %string.255, ptr %77, i32 0, i32 1, !dbg !263
  store ptr @5, ptr %String9, align 8, !dbg !263
  store i64 1, ptr %Size10, align 8, !dbg !263
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %77, i64 16, i1 false), !dbg !263
  call void @__io_push_string(ptr %76, ptr %16), !dbg !263
  %78 = load ptr, ptr %2, align 8, !dbg !264
  %79 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !264
  %80 = getelementptr inbounds %__init_PointerType.261, ptr %79, i32 0, i32 0, !dbg !264
  %81 = load i64, ptr %80, align 8, !dbg !264
  %82 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !264
  %83 = getelementptr %__init_TypeInfo.268, ptr %82, i64 %81, !dbg !264
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %83, i64 48, i1 false), !dbg !264
  call void @__io_print_typetype(ptr %78, ptr %17), !dbg !264
  br label %block_1, !dbg !264

block_17:                                         ; preds = %block_0
  %84 = load ptr, ptr %2, align 8, !dbg !265
  %85 = alloca %string.255, align 8, !dbg !265
  %String11 = getelementptr inbounds %string.255, ptr %85, i32 0, i32 0, !dbg !265
  %Size12 = getelementptr inbounds %string.255, ptr %85, i32 0, i32 1, !dbg !265
  store ptr @6, ptr %String11, align 8, !dbg !265
  store i64 3, ptr %Size12, align 8, !dbg !265
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %18, ptr align 8 %85, i64 16, i1 false), !dbg !265
  call void @__io_push_string(ptr %84, ptr %18), !dbg !265
  %86 = load ptr, ptr %2, align 8, !dbg !266
  %87 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !266
  %88 = getelementptr inbounds %__init_ArrayType.262, ptr %87, i32 0, i32 0, !dbg !266
  %89 = load i64, ptr %88, align 8, !dbg !266
  %90 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !266
  %91 = getelementptr %__init_TypeInfo.268, ptr %90, i64 %89, !dbg !266
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %19, ptr align 8 %91, i64 48, i1 false), !dbg !266
  call void @__io_print_typetype(ptr %86, ptr %19), !dbg !266
  br label %block_1, !dbg !266

block_18:                                         ; preds = %block_0
  %92 = load ptr, ptr %2, align 8, !dbg !267
  %93 = alloca %string.255, align 8, !dbg !267
  %String13 = getelementptr inbounds %string.255, ptr %93, i32 0, i32 0, !dbg !267
  %Size14 = getelementptr inbounds %string.255, ptr %93, i32 0, i32 1, !dbg !267
  store ptr @7, ptr %String13, align 8, !dbg !267
  store i64 2, ptr %Size14, align 8, !dbg !267
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %20, ptr align 8 %93, i64 16, i1 false), !dbg !267
  call void @__io_push_string(ptr %92, ptr %20), !dbg !267
  %94 = load ptr, ptr %2, align 8, !dbg !268
  %95 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !268
  %96 = getelementptr inbounds %__init_SliceType.263, ptr %95, i32 0, i32 0, !dbg !268
  %97 = load i64, ptr %96, align 8, !dbg !268
  %98 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !268
  %99 = getelementptr %__init_TypeInfo.268, ptr %98, i64 %97, !dbg !268
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %21, ptr align 8 %99, i64 48, i1 false), !dbg !268
  call void @__io_print_typetype(ptr %94, ptr %21), !dbg !268
  br label %block_1, !dbg !268

block_19:                                         ; preds = %block_0
  %100 = load ptr, ptr %2, align 8, !dbg !269
  %101 = alloca %string.255, align 8, !dbg !269
  %String15 = getelementptr inbounds %string.255, ptr %101, i32 0, i32 0, !dbg !269
  %Size16 = getelementptr inbounds %string.255, ptr %101, i32 0, i32 1, !dbg !269
  store ptr @8, ptr %String15, align 8, !dbg !269
  store i64 2, ptr %Size16, align 8, !dbg !269
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %22, ptr align 8 %101, i64 16, i1 false), !dbg !269
  call void @__io_push_string(ptr %100, ptr %22), !dbg !269
  br label %block_1, !dbg !269

block_20:                                         ; preds = %block_0
  %102 = load ptr, ptr %2, align 8, !dbg !270
  %103 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !270
  %104 = getelementptr inbounds %__init_EnumType.264, ptr %103, i32 0, i32 0, !dbg !270
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %23, ptr align 8 %104, i64 16, i1 false), !dbg !270
  call void @__io_push_string(ptr %102, ptr %23), !dbg !270
  br label %block_1, !dbg !270

block_21:                                         ; preds = %block_0
  %105 = load ptr, ptr %2, align 8, !dbg !271
  %106 = getelementptr inbounds %__init_TypeInfo.268, ptr %3, i32 0, i32 1, !dbg !271
  %107 = getelementptr inbounds %__init_GenericType.266, ptr %106, i32 0, i32 0, !dbg !271
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %107, i64 16, i1 false), !dbg !271
  call void @__io_push_string(ptr %105, ptr %24), !dbg !271
  br label %block_1, !dbg !271

block_1:                                          ; preds = %block_21, %block_20, %block_19, %block_18, %block_17, %block_16, %block_15, %block_14, %block_3, %block_2, %block_0
  ret void, !dbg !272
}

define void @__io_print_type(ptr %0, ptr %1) !dbg !273 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca %__init_Arg.256, align 8
  %4 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 48, i1 false)
  %5 = alloca %__init_BasicType.257, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 32, i1 false)
  %6 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  %7 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  %8 = alloca %string.255, align 8
  %9 = alloca %string.255, align 8
  %10 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  %12 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  %13 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %13, i8 0, i32 8, i1 false)
  %14 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 8, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  %16 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 8, i1 false)
  %17 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 8, i1 false)
  %18 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %18, i8 0, i32 8, i1 false)
  %19 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %19, i8 0, i32 8, i1 false)
  %20 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %20, i8 0, i32 8, i1 false)
  %21 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %21, i8 0, i32 4, i1 false)
  %22 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %22, i8 0, i32 8, i1 false)
  %23 = alloca i64, align 8
  %24 = alloca %__init_TypeInfo.268, align 8
  %25 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %23, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %24, i8 0, i32 48, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %25, i8 0, i32 48, i1 false)
  %26 = alloca %__init_StructType.259, align 8
  %27 = alloca %string.255, align 8
  %28 = alloca %string.255, align 8
  %29 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %26, i8 0, i32 40, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %27, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %28, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %29, i8 0, i32 8, i1 false)
  %30 = alloca %__init_StructMember.258, align 8
  %31 = alloca %slice.312, align 8
  %32 = alloca [1 x %__init_Arg.256], align 8
  %33 = alloca %string.255, align 8
  %34 = alloca %string.255, align 8
  %35 = alloca %string.255, align 8
  %36 = alloca %string.255, align 8
  %37 = alloca ptr, align 8
  %38 = alloca %__init_StructType.259, align 8
  %39 = alloca i64, align 8
  %40 = alloca %__init_Arg.256, align 8
  %41 = alloca %__init_Arg.256, align 8
  %42 = alloca %__init_Arg.256, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %30, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %31, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %32, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %33, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %34, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %35, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %36, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %37, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %38, i8 0, i32 40, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %39, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %40, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %41, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %42, i8 0, i32 16, i1 false)
  %43 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %43, i8 0, i32 16, i1 false)
  %44 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %44, i8 0, i32 16, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !280
  call void @llvm.dbg.value(metadata ptr %2, metadata !281, metadata !DIExpression()), !dbg !280
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !280
  call void @llvm.dbg.value(metadata ptr %3, metadata !282, metadata !DIExpression()), !dbg !280
  %45 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 0, !dbg !283
  %46 = load i64, ptr %45, align 8, !dbg !283
  %47 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !283
  %48 = getelementptr %__init_TypeInfo.268, ptr %47, i64 %46, !dbg !283
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %48, i64 48, i1 false), !dbg !283
  call void @llvm.dbg.declare(metadata ptr %4, metadata !284, metadata !DIExpression()), !dbg !283
  %49 = getelementptr inbounds %__init_TypeInfo.268, ptr %4, i32 0, i32 0, !dbg !285
  %50 = load i64, ptr %49, align 8, !dbg !285
  switch i64 %50, label %block_1 [
    i64 0, label %block_2
    i64 1, label %block_3
    i64 2, label %block_52
    i64 3, label %block_53
    i64 4, label %block_61
    i64 5, label %block_62
    i64 6, label %block_63
    i64 7, label %block_64
    i64 8, label %block_65
    i64 9, label %block_66
  ], !dbg !285

block_2:                                          ; preds = %block_0
  br label %block_1, !dbg !285

block_3:                                          ; preds = %block_0
  %51 = getelementptr inbounds %__init_TypeInfo.268, ptr %4, i32 0, i32 1, !dbg !286
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %51, i64 32, i1 false), !dbg !286
  call void @llvm.dbg.declare(metadata ptr %5, metadata !287, metadata !DIExpression()), !dbg !286
  %52 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !288
  %53 = load i64, ptr %52, align 8, !dbg !288
  %54 = icmp eq i64 %53, 0, !dbg !288
  br i1 %54, label %block_4, label %block_5, !dbg !288

block_4:                                          ; preds = %block_3
  %55 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !289
  %56 = load ptr, ptr %55, align 8, !dbg !289
  %57 = load i1, ptr %56, align 1, !dbg !289
  br i1 %57, label %block_7, label %block_8, !dbg !289

block_7:                                          ; preds = %block_4
  %58 = load ptr, ptr %2, align 8, !dbg !290
  %59 = alloca %string.255, align 8, !dbg !290
  %String = getelementptr inbounds %string.255, ptr %59, i32 0, i32 0, !dbg !290
  %Size = getelementptr inbounds %string.255, ptr %59, i32 0, i32 1, !dbg !290
  store ptr @9, ptr %String, align 8, !dbg !290
  store i64 4, ptr %Size, align 8, !dbg !290
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %59, i64 16, i1 false), !dbg !290
  call void @__io_push_string(ptr %58, ptr %6), !dbg !290
  br label %block_9, !dbg !290

block_8:                                          ; preds = %block_4
  %60 = load ptr, ptr %2, align 8, !dbg !291
  %61 = alloca %string.255, align 8, !dbg !291
  %String1 = getelementptr inbounds %string.255, ptr %61, i32 0, i32 0, !dbg !291
  %Size2 = getelementptr inbounds %string.255, ptr %61, i32 0, i32 1, !dbg !291
  store ptr @10, ptr %String1, align 8, !dbg !291
  store i64 5, ptr %Size2, align 8, !dbg !291
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %61, i64 16, i1 false), !dbg !291
  call void @__io_push_string(ptr %60, ptr %7), !dbg !291
  br label %block_9, !dbg !291

block_9:                                          ; preds = %block_8, %block_7
  br label %block_6, !dbg !291

block_5:                                          ; preds = %block_3
  %62 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !292
  %63 = load i64, ptr %62, align 8, !dbg !292
  %64 = icmp eq i64 %63, 1, !dbg !292
  br i1 %64, label %block_10, label %block_11, !dbg !292

block_10:                                         ; preds = %block_5
  %65 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !293
  %66 = load ptr, ptr %65, align 8, !dbg !293
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %66, i64 16, i1 false), !dbg !293
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !293
  call void @llvm.dbg.declare(metadata ptr %9, metadata !294, metadata !DIExpression()), !dbg !293
  %67 = load ptr, ptr %2, align 8, !dbg !295
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %10, ptr align 8 %9, i64 16, i1 false), !dbg !295
  call void @__io_push_string(ptr %67, ptr %10), !dbg !295
  br label %block_12, !dbg !295

block_11:                                         ; preds = %block_5
  %68 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !296
  %69 = load i64, ptr %68, align 8, !dbg !296
  %70 = icmp eq i64 %69, 2, !dbg !296
  br i1 %70, label %block_13, label %block_14, !dbg !296

block_13:                                         ; preds = %block_11
  %71 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !297
  %72 = load ptr, ptr %71, align 8, !dbg !297
  %73 = load i8, ptr %72, align 1, !dbg !297
  %74 = zext i8 %73 to i64, !dbg !297
  store i64 %74, ptr %11, align 8, !dbg !297
  call void @llvm.dbg.declare(metadata ptr %11, metadata !298, metadata !DIExpression()), !dbg !297
  %75 = load ptr, ptr %2, align 8, !dbg !299
  %76 = load i64, ptr %11, align 8, !dbg !299
  call void @__io_format_uint(ptr %75, i64 %76), !dbg !299
  br label %block_15, !dbg !299

block_14:                                         ; preds = %block_11
  %77 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !300
  %78 = load i64, ptr %77, align 8, !dbg !300
  %79 = icmp eq i64 %78, 3, !dbg !300
  br i1 %79, label %block_16, label %block_17, !dbg !300

block_16:                                         ; preds = %block_14
  %80 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !301
  %81 = load ptr, ptr %80, align 8, !dbg !301
  %82 = load i16, ptr %81, align 2, !dbg !301
  %83 = zext i16 %82 to i64, !dbg !301
  store i64 %83, ptr %12, align 8, !dbg !301
  call void @llvm.dbg.declare(metadata ptr %12, metadata !302, metadata !DIExpression()), !dbg !301
  %84 = load ptr, ptr %2, align 8, !dbg !303
  %85 = load i64, ptr %12, align 8, !dbg !303
  call void @__io_format_uint(ptr %84, i64 %85), !dbg !303
  br label %block_18, !dbg !303

block_17:                                         ; preds = %block_14
  %86 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !304
  %87 = load i64, ptr %86, align 8, !dbg !304
  %88 = icmp eq i64 %87, 4, !dbg !304
  br i1 %88, label %block_19, label %block_20, !dbg !304

block_19:                                         ; preds = %block_17
  %89 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !305
  %90 = load ptr, ptr %89, align 8, !dbg !305
  %91 = load i32, ptr %90, align 4, !dbg !305
  %92 = zext i32 %91 to i64, !dbg !305
  store i64 %92, ptr %13, align 8, !dbg !305
  call void @llvm.dbg.declare(metadata ptr %13, metadata !306, metadata !DIExpression()), !dbg !305
  %93 = load ptr, ptr %2, align 8, !dbg !307
  %94 = load i64, ptr %13, align 8, !dbg !307
  call void @__io_format_uint(ptr %93, i64 %94), !dbg !307
  br label %block_21, !dbg !307

block_20:                                         ; preds = %block_17
  %95 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !308
  %96 = load i64, ptr %95, align 8, !dbg !308
  %97 = icmp eq i64 %96, 5, !dbg !308
  br i1 %97, label %block_22, label %block_23, !dbg !308

block_22:                                         ; preds = %block_20
  %98 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !309
  %99 = load ptr, ptr %98, align 8, !dbg !309
  %100 = load i64, ptr %99, align 8, !dbg !309
  store i64 %100, ptr %14, align 8, !dbg !309
  call void @llvm.dbg.declare(metadata ptr %14, metadata !310, metadata !DIExpression()), !dbg !309
  %101 = load ptr, ptr %2, align 8, !dbg !311
  %102 = load i64, ptr %14, align 8, !dbg !311
  call void @__io_format_uint(ptr %101, i64 %102), !dbg !311
  br label %block_24, !dbg !311

block_23:                                         ; preds = %block_20
  %103 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !312
  %104 = load i64, ptr %103, align 8, !dbg !312
  %105 = icmp eq i64 %104, 6, !dbg !312
  br i1 %105, label %block_25, label %block_26, !dbg !312

block_25:                                         ; preds = %block_23
  %106 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !313
  %107 = load ptr, ptr %106, align 8, !dbg !313
  %108 = load i8, ptr %107, align 1, !dbg !313
  %109 = sext i8 %108 to i64, !dbg !313
  store i64 %109, ptr %15, align 8, !dbg !313
  call void @llvm.dbg.declare(metadata ptr %15, metadata !314, metadata !DIExpression()), !dbg !313
  %110 = load ptr, ptr %2, align 8, !dbg !315
  %111 = load i64, ptr %15, align 8, !dbg !315
  call void @__io_format_int(ptr %110, i64 %111), !dbg !315
  br label %block_27, !dbg !315

block_26:                                         ; preds = %block_23
  %112 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !316
  %113 = load i64, ptr %112, align 8, !dbg !316
  %114 = icmp eq i64 %113, 7, !dbg !316
  br i1 %114, label %block_28, label %block_29, !dbg !316

block_28:                                         ; preds = %block_26
  %115 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !317
  %116 = load ptr, ptr %115, align 8, !dbg !317
  %117 = load i16, ptr %116, align 2, !dbg !317
  %118 = sext i16 %117 to i64, !dbg !317
  store i64 %118, ptr %16, align 8, !dbg !317
  call void @llvm.dbg.declare(metadata ptr %16, metadata !318, metadata !DIExpression()), !dbg !317
  %119 = load ptr, ptr %2, align 8, !dbg !319
  %120 = load i64, ptr %16, align 8, !dbg !319
  call void @__io_format_int(ptr %119, i64 %120), !dbg !319
  br label %block_30, !dbg !319

block_29:                                         ; preds = %block_26
  %121 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !320
  %122 = load i64, ptr %121, align 8, !dbg !320
  %123 = icmp eq i64 %122, 8, !dbg !320
  br i1 %123, label %block_31, label %block_32, !dbg !320

block_31:                                         ; preds = %block_29
  %124 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !321
  %125 = load ptr, ptr %124, align 8, !dbg !321
  %126 = load i32, ptr %125, align 4, !dbg !321
  %127 = sext i32 %126 to i64, !dbg !321
  store i64 %127, ptr %17, align 8, !dbg !321
  call void @llvm.dbg.declare(metadata ptr %17, metadata !322, metadata !DIExpression()), !dbg !321
  %128 = load ptr, ptr %2, align 8, !dbg !323
  %129 = load i64, ptr %17, align 8, !dbg !323
  call void @__io_format_int(ptr %128, i64 %129), !dbg !323
  br label %block_33, !dbg !323

block_32:                                         ; preds = %block_29
  %130 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !324
  %131 = load i64, ptr %130, align 8, !dbg !324
  %132 = icmp eq i64 %131, 9, !dbg !324
  br i1 %132, label %block_34, label %block_35, !dbg !324

block_34:                                         ; preds = %block_32
  %133 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !325
  %134 = load ptr, ptr %133, align 8, !dbg !325
  %135 = load i64, ptr %134, align 8, !dbg !325
  store i64 %135, ptr %18, align 8, !dbg !325
  call void @llvm.dbg.declare(metadata ptr %18, metadata !326, metadata !DIExpression()), !dbg !325
  %136 = load ptr, ptr %2, align 8, !dbg !327
  %137 = load i64, ptr %18, align 8, !dbg !327
  call void @__io_format_int(ptr %136, i64 %137), !dbg !327
  br label %block_36, !dbg !327

block_35:                                         ; preds = %block_32
  %138 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !328
  %139 = load i64, ptr %138, align 8, !dbg !328
  %140 = icmp eq i64 %139, 14, !dbg !328
  br i1 %140, label %block_37, label %block_38, !dbg !328

block_37:                                         ; preds = %block_35
  %141 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !329
  %142 = load ptr, ptr %141, align 8, !dbg !329
  %143 = load i64, ptr %142, align 8, !dbg !329
  store i64 %143, ptr %19, align 8, !dbg !329
  call void @llvm.dbg.declare(metadata ptr %19, metadata !330, metadata !DIExpression()), !dbg !329
  %144 = load ptr, ptr %2, align 8, !dbg !331
  %145 = load i64, ptr %19, align 8, !dbg !331
  call void @__io_format_int(ptr %144, i64 %145), !dbg !331
  br label %block_39, !dbg !331

block_38:                                         ; preds = %block_35
  %146 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !332
  %147 = load i64, ptr %146, align 8, !dbg !332
  %148 = icmp eq i64 %147, 15, !dbg !332
  br i1 %148, label %block_40, label %block_41, !dbg !332

block_40:                                         ; preds = %block_38
  %149 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !333
  %150 = load ptr, ptr %149, align 8, !dbg !333
  %151 = load i64, ptr %150, align 8, !dbg !333
  store i64 %151, ptr %20, align 8, !dbg !333
  call void @llvm.dbg.declare(metadata ptr %20, metadata !334, metadata !DIExpression()), !dbg !333
  %152 = load ptr, ptr %2, align 8, !dbg !335
  %153 = load i64, ptr %20, align 8, !dbg !335
  call void @__io_format_uint(ptr %152, i64 %153), !dbg !335
  br label %block_42, !dbg !335

block_41:                                         ; preds = %block_38
  %154 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !336
  %155 = load i64, ptr %154, align 8, !dbg !336
  %156 = icmp eq i64 %155, 10, !dbg !336
  br i1 %156, label %block_43, label %block_44, !dbg !336

block_43:                                         ; preds = %block_41
  %157 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !337
  %158 = load ptr, ptr %157, align 8, !dbg !337
  %159 = load float, ptr %158, align 4, !dbg !337
  store float %159, ptr %21, align 4, !dbg !337
  call void @llvm.dbg.declare(metadata ptr %21, metadata !338, metadata !DIExpression()), !dbg !337
  %160 = load ptr, ptr %2, align 8, !dbg !340
  %161 = load float, ptr %21, align 4, !dbg !340
  call void @"__io_format_float:type_*[]u32_f32_i32_:void"(i64 10, ptr %160, float %161, i32 100), !dbg !340
  br label %block_45, !dbg !340

block_44:                                         ; preds = %block_41
  %162 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !341
  %163 = load i64, ptr %162, align 8, !dbg !341
  %164 = icmp eq i64 %163, 11, !dbg !341
  br i1 %164, label %block_46, label %block_47, !dbg !341

block_46:                                         ; preds = %block_44
  %165 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !342
  %166 = load ptr, ptr %165, align 8, !dbg !342
  %167 = load double, ptr %166, align 8, !dbg !342
  store double %167, ptr %22, align 8, !dbg !342
  call void @llvm.dbg.declare(metadata ptr %22, metadata !343, metadata !DIExpression()), !dbg !342
  %168 = load ptr, ptr %2, align 8, !dbg !345
  %169 = load double, ptr %22, align 8, !dbg !345
  call void @"__io_format_float:type_*[]u32_f64_i32_:void"(i64 11, ptr %168, double %169, i32 100), !dbg !345
  br label %block_48, !dbg !345

block_47:                                         ; preds = %block_44
  %170 = getelementptr inbounds %__init_BasicType.257, ptr %5, i32 0, i32 0, !dbg !346
  %171 = load i64, ptr %170, align 8, !dbg !346
  %172 = icmp eq i64 %171, 16, !dbg !346
  br i1 %172, label %block_49, label %block_50, !dbg !346

block_49:                                         ; preds = %block_47
  %173 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !347
  %174 = load ptr, ptr %173, align 8, !dbg !347
  %175 = load i64, ptr %174, align 8, !dbg !347
  store i64 %175, ptr %23, align 8, !dbg !347
  call void @llvm.dbg.declare(metadata ptr %23, metadata !348, metadata !DIExpression()), !dbg !347
  %176 = load i64, ptr %23, align 8, !dbg !349
  %177 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !349
  %178 = getelementptr %__init_TypeInfo.268, ptr %177, i64 %176, !dbg !349
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %24, ptr align 8 %178, i64 48, i1 false), !dbg !349
  call void @llvm.dbg.declare(metadata ptr %24, metadata !350, metadata !DIExpression()), !dbg !349
  %179 = load ptr, ptr %2, align 8, !dbg !351
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %25, ptr align 8 %24, i64 48, i1 false), !dbg !351
  call void @__io_print_typetype(ptr %179, ptr %25), !dbg !351
  br label %block_51, !dbg !351

block_50:                                         ; preds = %block_47
  %180 = load ptr, ptr %2, align 8, !dbg !352
  call void @"__array_add:*[]u32_u32_:void"(ptr %180, i32 37), !dbg !352
  br label %block_51, !dbg !352

block_51:                                         ; preds = %block_50, %block_49
  br label %block_48, !dbg !352

block_48:                                         ; preds = %block_51, %block_46
  br label %block_45, !dbg !352

block_45:                                         ; preds = %block_48, %block_43
  br label %block_42, !dbg !352

block_42:                                         ; preds = %block_45, %block_40
  br label %block_39, !dbg !352

block_39:                                         ; preds = %block_42, %block_37
  br label %block_36, !dbg !352

block_36:                                         ; preds = %block_39, %block_34
  br label %block_33, !dbg !352

block_33:                                         ; preds = %block_36, %block_31
  br label %block_30, !dbg !352

block_30:                                         ; preds = %block_33, %block_28
  br label %block_27, !dbg !352

block_27:                                         ; preds = %block_30, %block_25
  br label %block_24, !dbg !352

block_24:                                         ; preds = %block_27, %block_22
  br label %block_21, !dbg !352

block_21:                                         ; preds = %block_24, %block_19
  br label %block_18, !dbg !352

block_18:                                         ; preds = %block_21, %block_16
  br label %block_15, !dbg !352

block_15:                                         ; preds = %block_18, %block_13
  br label %block_12, !dbg !352

block_12:                                         ; preds = %block_15, %block_10
  br label %block_6, !dbg !352

block_6:                                          ; preds = %block_12, %block_9
  br label %block_1, !dbg !352

block_52:                                         ; preds = %block_0
  br label %block_1, !dbg !352

block_53:                                         ; preds = %block_0
  %181 = getelementptr inbounds %__init_TypeInfo.268, ptr %4, i32 0, i32 1, !dbg !353
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %26, ptr align 8 %181, i64 40, i1 false), !dbg !353
  call void @llvm.dbg.declare(metadata ptr %26, metadata !354, metadata !DIExpression()), !dbg !353
  %182 = load ptr, ptr %2, align 8, !dbg !355
  %183 = getelementptr inbounds %__init_StructType.259, ptr %26, i32 0, i32 1, !dbg !355
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %27, ptr align 8 %183, i64 16, i1 false), !dbg !355
  call void @__io_push_string(ptr %182, ptr %27), !dbg !355
  %184 = load ptr, ptr %2, align 8, !dbg !356
  %185 = alloca %string.255, align 8, !dbg !356
  %String3 = getelementptr inbounds %string.255, ptr %185, i32 0, i32 0, !dbg !356
  %Size4 = getelementptr inbounds %string.255, ptr %185, i32 0, i32 1, !dbg !356
  store ptr @11, ptr %String3, align 8, !dbg !356
  store i64 3, ptr %Size4, align 8, !dbg !356
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %28, ptr align 8 %185, i64 16, i1 false), !dbg !356
  call void @__io_push_string(ptr %184, ptr %28), !dbg !356
  %186 = getelementptr inbounds %__init_StructType.259, ptr %26, i32 0, i32 0, !dbg !357
  %187 = getelementptr inbounds %slice.308, ptr %186, i32 0, i32 0, !dbg !357
  %188 = load i64, ptr %187, align 8, !dbg !357
  store i64 0, ptr %29, align 8, !dbg !357
  br label %block_54, !dbg !357

block_54:                                         ; preds = %block_56, %block_53
  %189 = load i64, ptr %29, align 8, !dbg !357
  %190 = icmp ult i64 %189, %188, !dbg !357
  br i1 %190, label %block_55, label %block_57, !dbg !357

block_55:                                         ; preds = %block_54
  call void @llvm.dbg.declare(metadata ptr %29, metadata !358, metadata !DIExpression()), !dbg !357
  %191 = getelementptr inbounds %__init_StructType.259, ptr %26, i32 0, i32 0, !dbg !359
  %192 = load i64, ptr %29, align 8, !dbg !359
  %193 = getelementptr inbounds %slice.308, ptr %191, i32 0, i32 1, !dbg !359
  %194 = load ptr, ptr %193, align 8, !dbg !359
  %195 = getelementptr %__init_StructMember.258, ptr %194, i64 %192, !dbg !359
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr align 8 %195, i64 24, i1 false), !dbg !359
  call void @llvm.dbg.declare(metadata ptr %30, metadata !360, metadata !DIExpression()), !dbg !359
  %196 = getelementptr inbounds %slice.312, ptr %31, i32 0, i32 0, !dbg !364
  %197 = getelementptr inbounds %slice.312, ptr %31, i32 0, i32 1, !dbg !364
  store i64 1, ptr %196, align 8, !dbg !364
  store ptr %32, ptr %197, align 8, !dbg !364
  %198 = alloca %string.255, align 8, !dbg !364
  %String5 = getelementptr inbounds %string.255, ptr %198, i32 0, i32 0, !dbg !364
  %Size6 = getelementptr inbounds %string.255, ptr %198, i32 0, i32 1, !dbg !364
  store ptr @12, ptr %String5, align 8, !dbg !364
  store i64 7, ptr %Size6, align 8, !dbg !364
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %33, ptr align 8 %198, i64 16, i1 false), !dbg !364
  %199 = getelementptr inbounds %__init_StructMember.258, ptr %30, i32 0, i32 0, !dbg !364
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %34, ptr align 8 %199, i64 16, i1 false), !dbg !364
  %200 = getelementptr [1 x %__init_Arg.256], ptr %32, i64 0, i64 0, !dbg !364
  %201 = getelementptr inbounds %__init_Arg.256, ptr %200, i32 0, i32 0, !dbg !364
  %202 = getelementptr inbounds %__init_Arg.256, ptr %200, i32 0, i32 1, !dbg !364
  store i64 1, ptr %201, align 8, !dbg !364
  store ptr %34, ptr %202, align 8, !dbg !364
  call void @__io_print(ptr %33, ptr %31), !dbg !364
  %203 = load ptr, ptr %2, align 8, !dbg !365
  %204 = getelementptr inbounds %__init_StructMember.258, ptr %30, i32 0, i32 0, !dbg !365
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %35, ptr align 8 %204, i64 16, i1 false), !dbg !365
  call void @__io_push_string(ptr %203, ptr %35), !dbg !365
  %205 = load ptr, ptr %2, align 8, !dbg !366
  %206 = alloca %string.255, align 8, !dbg !366
  %String7 = getelementptr inbounds %string.255, ptr %206, i32 0, i32 0, !dbg !366
  %Size8 = getelementptr inbounds %string.255, ptr %206, i32 0, i32 1, !dbg !366
  store ptr @13, ptr %String7, align 8, !dbg !366
  store i64 3, ptr %Size8, align 8, !dbg !366
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %36, ptr align 8 %206, i64 16, i1 false), !dbg !366
  call void @__io_push_string(ptr %205, ptr %36), !dbg !366
  %207 = getelementptr inbounds %__init_Arg.256, ptr %3, i32 0, i32 1, !dbg !367
  %208 = load ptr, ptr %207, align 8, !dbg !367
  store ptr %208, ptr %37, align 8, !dbg !367
  call void @llvm.dbg.declare(metadata ptr %37, metadata !368, metadata !DIExpression()), !dbg !367
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %38, ptr align 8 %26, i64 40, i1 false), !dbg !369
  %209 = load i64, ptr %29, align 8, !dbg !369
  %210 = call i64 @__init_get_struct_member_offset(ptr %38, i64 %209), !dbg !369
  store i64 %210, ptr %39, align 8, !dbg !369
  call void @llvm.dbg.declare(metadata ptr %39, metadata !370, metadata !DIExpression()), !dbg !369
  %211 = getelementptr inbounds %__init_StructMember.258, ptr %30, i32 0, i32 1, !dbg !371
  %212 = load i64, ptr %211, align 8, !dbg !371
  %213 = getelementptr inbounds %__init_Arg.256, ptr %40, i32 0, i32 0, !dbg !371
  store i64 %212, ptr %213, align 8, !dbg !371
  %214 = load ptr, ptr %37, align 8, !dbg !371
  %215 = load i64, ptr %39, align 8, !dbg !371
  %216 = getelementptr i8, ptr %214, i64 %215, !dbg !371
  %217 = getelementptr inbounds %__init_Arg.256, ptr %40, i32 0, i32 1, !dbg !371
  store ptr %216, ptr %217, align 8, !dbg !371
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %41, ptr align 8 %40, i64 16, i1 false), !dbg !371
  call void @llvm.dbg.declare(metadata ptr %41, metadata !372, metadata !DIExpression()), !dbg !371
  %218 = getelementptr inbounds %__init_Arg.256, ptr %41, i32 0, i32 0, !dbg !373
  %219 = getelementptr inbounds %__init_StructMember.258, ptr %30, i32 0, i32 1, !dbg !373
  %220 = load i64, ptr %219, align 8, !dbg !373
  store i64 %220, ptr %218, align 8, !dbg !373
  %221 = load ptr, ptr %2, align 8, !dbg !374
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %42, ptr align 8 %41, i64 16, i1 false), !dbg !374
  call void @__io_print_type(ptr %221, ptr %42), !dbg !374
  %222 = load i64, ptr %29, align 8, !dbg !375
  %223 = add i64 %222, 1, !dbg !375
  %224 = getelementptr inbounds %__init_StructType.259, ptr %26, i32 0, i32 0, !dbg !375
  %225 = getelementptr inbounds %slice.308, ptr %224, i32 0, i32 0, !dbg !375
  %226 = load i64, ptr %225, align 8, !dbg !375
  %227 = icmp ne i64 %223, %226, !dbg !375
  br i1 %227, label %block_58, label %block_59, !dbg !375

block_58:                                         ; preds = %block_55
  %228 = load ptr, ptr %2, align 8, !dbg !376
  %229 = alloca %string.255, align 8, !dbg !376
  %String9 = getelementptr inbounds %string.255, ptr %229, i32 0, i32 0, !dbg !376
  %Size10 = getelementptr inbounds %string.255, ptr %229, i32 0, i32 1, !dbg !376
  store ptr @14, ptr %String9, align 8, !dbg !376
  store i64 2, ptr %Size10, align 8, !dbg !376
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %43, ptr align 8 %229, i64 16, i1 false), !dbg !376
  call void @__io_push_string(ptr %228, ptr %43), !dbg !376
  br label %block_60, !dbg !376

block_59:                                         ; preds = %block_55
  br label %block_60, !dbg !376

block_60:                                         ; preds = %block_59, %block_58
  br label %block_56, !dbg !376

block_56:                                         ; preds = %block_60
  %230 = load i64, ptr %29, align 8, !dbg !376
  %231 = add i64 %230, 1, !dbg !376
  store i64 %231, ptr %29, align 8, !dbg !376
  br label %block_54, !dbg !376

block_57:                                         ; preds = %block_54
  %232 = load ptr, ptr %2, align 8, !dbg !377
  %233 = alloca %string.255, align 8, !dbg !377
  %String11 = getelementptr inbounds %string.255, ptr %233, i32 0, i32 0, !dbg !377
  %Size12 = getelementptr inbounds %string.255, ptr %233, i32 0, i32 1, !dbg !377
  store ptr @15, ptr %String11, align 8, !dbg !377
  store i64 2, ptr %Size12, align 8, !dbg !377
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %44, ptr align 8 %233, i64 16, i1 false), !dbg !377
  call void @__io_push_string(ptr %232, ptr %44), !dbg !377
  br label %block_1, !dbg !377

block_61:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_62:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_63:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_64:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_65:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_66:                                         ; preds = %block_0
  br label %block_1, !dbg !377

block_1:                                          ; preds = %block_66, %block_65, %block_64, %block_63, %block_62, %block_61, %block_57, %block_52, %block_6, %block_2, %block_0
  ret void, !dbg !378
}

define void @__io_builder_to_string(ptr %0, ptr %1) !dbg !379 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  %4 = alloca %__mem_Allocator.270, align 8
  %5 = alloca %__mem_Allocator.270, align 8
  %6 = alloca %slice.314, align 8
  %7 = alloca %slice.314, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  %10 = alloca i64, align 8
  %11 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  store ptr %1, ptr %2, align 8, !dbg !386
  call void @llvm.dbg.value(metadata ptr %2, metadata !387, metadata !DIExpression()), !dbg !386
  %12 = load ptr, ptr %2, align 8, !dbg !388
  store ptr %12, ptr %3, align 8, !dbg !388
  call void @llvm.dbg.declare(metadata ptr %3, metadata !389, metadata !DIExpression()), !dbg !388
  call void @__mem_create_generic_allocator(ptr %4), !dbg !390
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %4, i64 24, i1 false), !dbg !390
  call void @llvm.dbg.declare(metadata ptr %5, metadata !391, metadata !DIExpression()), !dbg !390
  call void @"__array_create:type_*__mem_Allocator_:[]u8"(ptr %6, i64 2, ptr %5), !dbg !405
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %6, i64 16, i1 false), !dbg !405
  call void @llvm.dbg.declare(metadata ptr %7, metadata !406, metadata !DIExpression()), !dbg !405
  %13 = load ptr, ptr %3, align 8, !dbg !407
  %14 = getelementptr inbounds %slice.311, ptr %13, i32 0, i32 0, !dbg !407
  %15 = load i64, ptr %14, align 8, !dbg !407
  store i64 0, ptr %8, align 8, !dbg !407
  br label %block_1, !dbg !407

block_1:                                          ; preds = %block_3, %block_0
  %16 = load i64, ptr %8, align 8, !dbg !407
  %17 = icmp ult i64 %16, %15, !dbg !407
  br i1 %17, label %block_2, label %block_4, !dbg !407

block_2:                                          ; preds = %block_1
  call void @llvm.dbg.declare(metadata ptr %8, metadata !408, metadata !DIExpression()), !dbg !407
  %18 = load ptr, ptr %3, align 8, !dbg !409
  %19 = getelementptr inbounds %slice.311, ptr %18, i32 0, i32 1, !dbg !409
  %20 = load ptr, ptr %19, align 8, !dbg !409
  %21 = load i64, ptr %8, align 8, !dbg !409
  %22 = getelementptr i32, ptr %20, i64 %21, !dbg !409
  store ptr %22, ptr %9, align 8, !dbg !409
  call void @llvm.dbg.declare(metadata ptr %9, metadata !410, metadata !DIExpression()), !dbg !409
  %23 = load ptr, ptr %9, align 8, !dbg !411
  %24 = getelementptr i8, ptr %23, i64 3, !dbg !411
  store ptr %24, ptr %9, align 8, !dbg !411
  br label %block_5, !dbg !412

block_5:                                          ; preds = %block_6, %block_2
  %25 = load ptr, ptr %9, align 8, !dbg !412
  %26 = load i8, ptr %25, align 1, !dbg !412
  %27 = icmp eq i8 %26, 0, !dbg !412
  br i1 %27, label %block_6, label %block_7, !dbg !412

block_6:                                          ; preds = %block_5
  %28 = load ptr, ptr %9, align 8, !dbg !413
  %29 = getelementptr i8, ptr %28, i64 -1, !dbg !413
  store ptr %29, ptr %9, align 8, !dbg !413
  br label %block_5, !dbg !413

block_7:                                          ; preds = %block_5
  %30 = load ptr, ptr %9, align 8, !dbg !414
  %31 = call i64 @__str_get_codepoint_size(ptr %30), !dbg !414
  store i64 %31, ptr %10, align 8, !dbg !414
  call void @llvm.dbg.declare(metadata ptr %10, metadata !415, metadata !DIExpression()), !dbg !414
  %32 = load i64, ptr %10, align 8, !dbg !416
  store i64 0, ptr %11, align 8, !dbg !416
  br label %block_8, !dbg !416

block_8:                                          ; preds = %block_10, %block_7
  %33 = load i64, ptr %11, align 8, !dbg !416
  %34 = icmp ult i64 %33, %32, !dbg !416
  br i1 %34, label %block_9, label %block_11, !dbg !416

block_9:                                          ; preds = %block_8
  call void @llvm.dbg.declare(metadata ptr %11, metadata !417, metadata !DIExpression()), !dbg !416
  %35 = load ptr, ptr %9, align 8, !dbg !418
  %36 = load i64, ptr %11, align 8, !dbg !418
  %37 = sub i64 0, %36, !dbg !418
  %38 = getelementptr i8, ptr %35, i64 %37, !dbg !418
  %39 = load i8, ptr %38, align 1, !dbg !418
  call void @"__array_add:*[]u8_u8_:void"(ptr %7, i8 %39), !dbg !418
  br label %block_10, !dbg !418

block_10:                                         ; preds = %block_9
  %40 = load i64, ptr %11, align 8, !dbg !418
  %41 = add i64 %40, 1, !dbg !418
  store i64 %41, ptr %11, align 8, !dbg !418
  br label %block_8, !dbg !418

block_11:                                         ; preds = %block_8
  br label %block_3, !dbg !418

block_3:                                          ; preds = %block_11
  %42 = load i64, ptr %8, align 8, !dbg !418
  %43 = add i64 %42, 1, !dbg !418
  store i64 %43, ptr %8, align 8, !dbg !418
  br label %block_1, !dbg !418

block_4:                                          ; preds = %block_1
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %7, i64 16, i1 false), !dbg !419
  ret void, !dbg !419
}

define void @__io_print_type_with_formatter(ptr %0, i32 %1, ptr %2) !dbg !420 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca %__init_Arg.256, align 8
  %6 = alloca %__init_TypeInfo.268, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 48, i1 false)
  %7 = alloca ptr, align 8
  %8 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 8, i1 false)
  %9 = alloca %__init_Arg.256, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  store ptr %0, ptr %3, align 8, !dbg !423
  call void @llvm.dbg.value(metadata ptr %3, metadata !424, metadata !DIExpression()), !dbg !423
  store i32 %1, ptr %4, align 4, !dbg !423
  call void @llvm.dbg.value(metadata ptr %4, metadata !425, metadata !DIExpression()), !dbg !423
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !423
  call void @llvm.dbg.value(metadata ptr %5, metadata !426, metadata !DIExpression()), !dbg !423
  %10 = getelementptr inbounds %__init_Arg.256, ptr %5, i32 0, i32 0, !dbg !427
  %11 = load i64, ptr %10, align 8, !dbg !427
  %12 = load ptr, ptr getelementptr inbounds (%slice.313, ptr @__init_type_table, i32 0, i32 1), align 8, !dbg !427
  %13 = getelementptr %__init_TypeInfo.268, ptr %12, i64 %11, !dbg !427
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %13, i64 48, i1 false), !dbg !427
  call void @llvm.dbg.declare(metadata ptr %6, metadata !428, metadata !DIExpression()), !dbg !427
  %14 = load i32, ptr %4, align 4, !dbg !429
  %15 = icmp eq i32 %14, 115, !dbg !429
  %16 = getelementptr inbounds %__init_TypeInfo.268, ptr %6, i32 0, i32 0, !dbg !429
  %17 = load i64, ptr %16, align 8, !dbg !429
  %18 = icmp eq i64 %17, 4, !dbg !429
  %19 = icmp ne i1 %15, false, !dbg !429
  %20 = icmp ne i1 %18, false, !dbg !429
  %21 = and i1 %19, %20, !dbg !429
  %22 = getelementptr inbounds %__init_TypeInfo.268, ptr %6, i32 0, i32 1, !dbg !429
  %23 = getelementptr inbounds %__init_PointerType.261, ptr %22, i32 0, i32 0, !dbg !429
  %24 = load i64, ptr %23, align 8, !dbg !429
  %25 = icmp eq i64 %24, 2, !dbg !429
  %26 = icmp ne i1 %21, false, !dbg !429
  %27 = icmp ne i1 %25, false, !dbg !429
  %28 = and i1 %26, %27, !dbg !429
  br i1 %28, label %block_1, label %block_2, !dbg !429

block_1:                                          ; preds = %block_0
  %29 = getelementptr inbounds %__init_Arg.256, ptr %5, i32 0, i32 1, !dbg !430
  %30 = load ptr, ptr %29, align 8, !dbg !430
  %31 = load ptr, ptr %30, align 8, !dbg !430
  store ptr %31, ptr %7, align 8, !dbg !430
  call void @llvm.dbg.declare(metadata ptr %7, metadata !431, metadata !DIExpression()), !dbg !430
  store i64 0, ptr %8, align 8, !dbg !432
  call void @llvm.dbg.declare(metadata ptr %8, metadata !433, metadata !DIExpression()), !dbg !432
  br label %block_4, !dbg !432

block_4:                                          ; preds = %block_6, %block_1
  %32 = load ptr, ptr %7, align 8, !dbg !432
  %33 = load i64, ptr %8, align 8, !dbg !432
  %34 = getelementptr i8, ptr %32, i64 %33, !dbg !432
  %35 = load i8, ptr %34, align 1, !dbg !432
  %36 = zext i8 %35 to i32, !dbg !432
  %37 = icmp ne i32 %36, 0, !dbg !432
  br i1 %37, label %block_5, label %block_7, !dbg !432

block_5:                                          ; preds = %block_4
  %38 = load ptr, ptr %3, align 8, !dbg !434
  %39 = load ptr, ptr %7, align 8, !dbg !434
  %40 = load i64, ptr %8, align 8, !dbg !434
  %41 = getelementptr i8, ptr %39, i64 %40, !dbg !434
  %42 = load i8, ptr %41, align 1, !dbg !434
  %43 = zext i8 %42 to i32, !dbg !434
  call void @"__array_add:*[]u32_u32_:void"(ptr %38, i32 %43), !dbg !434
  br label %block_6, !dbg !434

block_6:                                          ; preds = %block_5
  %44 = load i64, ptr %8, align 8, !dbg !434
  %45 = add i64 %44, 1, !dbg !434
  store i64 %45, ptr %8, align 8, !dbg !434
  %46 = load i64, ptr %8, align 8, !dbg !434
  br label %block_4, !dbg !434

block_7:                                          ; preds = %block_4
  br label %block_3, !dbg !434

block_2:                                          ; preds = %block_0
  %47 = load ptr, ptr %3, align 8, !dbg !435
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %5, i64 16, i1 false), !dbg !435
  call void @__io_print_type(ptr %47, ptr %9), !dbg !435
  %48 = load i32, ptr %4, align 4, !dbg !436
  %49 = icmp ne i32 %48, 0, !dbg !436
  br i1 %49, label %block_8, label %block_9, !dbg !436

block_8:                                          ; preds = %block_2
  %50 = load ptr, ptr %3, align 8, !dbg !437
  %51 = load i32, ptr %4, align 4, !dbg !437
  call void @"__array_add:*[]u32_u32_:void"(ptr %50, i32 %51), !dbg !437
  br label %block_10, !dbg !437

block_9:                                          ; preds = %block_2
  br label %block_10, !dbg !437

block_10:                                         ; preds = %block_9, %block_8
  br label %block_3, !dbg !437

block_3:                                          ; preds = %block_10, %block_7
  ret void, !dbg !438
}

define void @__io___internal_print(ptr %0, ptr %1, ptr %2) !dbg !439 {
block_0:
  %3 = alloca %string.255, align 8
  %4 = alloca %slice.312, align 8
  %5 = alloca %__mem_Allocator.270, align 8
  %6 = alloca %__mem_Allocator.270, align 8
  %7 = alloca %slice.311, align 8
  %8 = alloca %slice.311, align 8
  %9 = alloca i64, align 8
  %10 = alloca i1, align 1
  %11 = alloca ptr, align 8
  %12 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 1 %10, i8 0, i32 1, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %12, i8 0, i32 8, i1 false)
  %13 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  %14 = alloca %__init_Arg.256, align 8
  %15 = alloca %__init_Arg.256, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %14, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 16, i1 false)
  %16 = alloca %__init_Arg.256, align 8
  %17 = alloca %__init_Arg.256, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %16, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %17, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !450
  call void @llvm.dbg.value(metadata ptr %3, metadata !451, metadata !DIExpression()), !dbg !450
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !450
  call void @llvm.dbg.value(metadata ptr %4, metadata !452, metadata !DIExpression()), !dbg !450
  call void @__mem_create_generic_allocator(ptr %5), !dbg !453
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %5, i64 24, i1 false), !dbg !453
  call void @llvm.dbg.declare(metadata ptr %6, metadata !454, metadata !DIExpression()), !dbg !453
  call void @"__array_create:type_*__mem_Allocator_:[]u32"(ptr %7, i64 4, ptr %6), !dbg !455
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !455
  call void @llvm.dbg.declare(metadata ptr %8, metadata !456, metadata !DIExpression()), !dbg !455
  store i64 0, ptr %9, align 8, !dbg !457
  call void @llvm.dbg.declare(metadata ptr %9, metadata !458, metadata !DIExpression()), !dbg !457
  store i1 false, ptr %10, align 1, !dbg !459
  call void @llvm.dbg.declare(metadata ptr %10, metadata !460, metadata !DIExpression()), !dbg !459
  %18 = getelementptr inbounds %string.255, ptr %3, i32 0, i32 1, !dbg !461
  %19 = load i64, ptr %18, align 8, !dbg !461
  %20 = getelementptr inbounds %string.255, ptr %3, i32 0, i32 0, !dbg !461
  %21 = load ptr, ptr %20, align 8, !dbg !461
  store ptr %21, ptr %11, align 8, !dbg !461
  store i64 0, ptr %12, align 8, !dbg !461
  br label %block_1, !dbg !461

block_1:                                          ; preds = %block_3, %block_0
  %22 = load i64, ptr %12, align 8, !dbg !461
  %23 = icmp ult i64 %22, %19, !dbg !461
  br i1 %23, label %block_2, label %block_4, !dbg !461

block_2:                                          ; preds = %block_1
  %24 = load ptr, ptr %11, align 8, !dbg !461
  %25 = call i32 @__str_deref(ptr %24), !dbg !461
  store i32 %25, ptr %13, align 4, !dbg !461
  call void @llvm.dbg.declare(metadata ptr %13, metadata !462, metadata !DIExpression()), !dbg !461
  call void @llvm.dbg.declare(metadata ptr %12, metadata !463, metadata !DIExpression()), !dbg !461
  %26 = load i32, ptr %13, align 4, !dbg !464
  %27 = icmp eq i32 %26, 37, !dbg !464
  %28 = getelementptr inbounds %slice.312, ptr %4, i32 0, i32 0, !dbg !464
  %29 = load i64, ptr %28, align 8, !dbg !464
  %30 = load i64, ptr %9, align 8, !dbg !464
  %31 = icmp sgt i64 %29, %30, !dbg !464
  %32 = icmp ne i1 %27, false, !dbg !464
  %33 = icmp ne i1 %31, false, !dbg !464
  %34 = and i1 %32, %33, !dbg !464
  br i1 %34, label %block_5, label %block_6, !dbg !464

block_5:                                          ; preds = %block_2
  store i1 true, ptr %10, align 1, !dbg !465
  br label %block_7, !dbg !465

block_6:                                          ; preds = %block_2
  %35 = load i1, ptr %10, align 1, !dbg !466
  br i1 %35, label %block_8, label %block_9, !dbg !466

block_8:                                          ; preds = %block_6
  %36 = load i64, ptr %9, align 8, !dbg !467
  %37 = getelementptr inbounds %slice.312, ptr %4, i32 0, i32 1, !dbg !467
  %38 = load ptr, ptr %37, align 8, !dbg !467
  %39 = getelementptr %__init_Arg.256, ptr %38, i64 %36, !dbg !467
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %14, ptr align 8 %39, i64 16, i1 false), !dbg !467
  call void @llvm.dbg.declare(metadata ptr %14, metadata !468, metadata !DIExpression()), !dbg !467
  %40 = load i64, ptr %9, align 8, !dbg !469
  %41 = add i64 %40, 1, !dbg !469
  store i64 %41, ptr %9, align 8, !dbg !469
  %42 = load i32, ptr %13, align 4, !dbg !470
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %15, ptr align 8 %14, i64 16, i1 false), !dbg !470
  call void @__io_print_type_with_formatter(ptr %8, i32 %42, ptr %15), !dbg !470
  store i1 false, ptr %10, align 1, !dbg !471
  br label %block_10, !dbg !471

block_9:                                          ; preds = %block_6
  %43 = load i32, ptr %13, align 4, !dbg !472
  call void @"__array_add:*[]u32_u32_:void"(ptr %8, i32 %43), !dbg !472
  br label %block_10, !dbg !472

block_10:                                         ; preds = %block_9, %block_8
  br label %block_7, !dbg !472

block_7:                                          ; preds = %block_10, %block_5
  br label %block_3, !dbg !472

block_3:                                          ; preds = %block_7
  %44 = load i64, ptr %12, align 8, !dbg !472
  %45 = add i64 %44, 1, !dbg !472
  store i64 %45, ptr %12, align 8, !dbg !472
  %46 = load ptr, ptr %11, align 8, !dbg !472
  %47 = call ptr @__str__it_advance(ptr %46, i64 %19, i64 %44), !dbg !472
  store ptr %47, ptr %11, align 8, !dbg !472
  br label %block_1, !dbg !472

block_4:                                          ; preds = %block_1
  %48 = load i1, ptr %10, align 1, !dbg !473
  br i1 %48, label %block_11, label %block_12, !dbg !473

block_11:                                         ; preds = %block_4
  %49 = load i64, ptr %9, align 8, !dbg !474
  %50 = getelementptr inbounds %slice.312, ptr %4, i32 0, i32 1, !dbg !474
  %51 = load ptr, ptr %50, align 8, !dbg !474
  %52 = getelementptr %__init_Arg.256, ptr %51, i64 %49, !dbg !474
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %16, ptr align 8 %52, i64 16, i1 false), !dbg !474
  call void @llvm.dbg.declare(metadata ptr %16, metadata !475, metadata !DIExpression()), !dbg !474
  %53 = load i64, ptr %9, align 8, !dbg !476
  %54 = add i64 %53, 1, !dbg !476
  store i64 %54, ptr %9, align 8, !dbg !476
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %17, ptr align 8 %16, i64 16, i1 false), !dbg !477
  call void @__io_print_type_with_formatter(ptr %8, i32 0, ptr %17), !dbg !477
  store i1 false, ptr %10, align 1, !dbg !478
  br label %block_13, !dbg !478

block_12:                                         ; preds = %block_4
  br label %block_13, !dbg !478

block_13:                                         ; preds = %block_12, %block_11
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !479
  ret void, !dbg !479
}

define void @__io_vsprint(ptr %0, ptr %1, ptr %2) !dbg !480 {
block_0:
  %3 = alloca %string.255, align 8
  %4 = alloca %slice.312, align 8
  %5 = alloca %slice.311, align 8
  %6 = alloca %string.255, align 8
  %7 = alloca %slice.311, align 8
  %8 = alloca %slice.314, align 8
  %9 = alloca %slice.314, align 8
  %10 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !483
  call void @llvm.dbg.value(metadata ptr %3, metadata !484, metadata !DIExpression()), !dbg !483
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !483
  call void @llvm.dbg.value(metadata ptr %4, metadata !485, metadata !DIExpression()), !dbg !483
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 16, i1 false), !dbg !486
  call void @__io___internal_print(ptr %5, ptr %6, ptr %4), !dbg !486
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %5, i64 16, i1 false), !dbg !486
  call void @llvm.dbg.declare(metadata ptr %7, metadata !487, metadata !DIExpression()), !dbg !486
  call void @__io_builder_to_string(ptr %8, ptr %7), !dbg !488
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !488
  call void @llvm.dbg.declare(metadata ptr %9, metadata !489, metadata !DIExpression()), !dbg !488
  call void @"__array_free:*[]u32_:void"(ptr %7), !dbg !490
  %11 = getelementptr inbounds %slice.314, ptr %9, i32 0, i32 1, !dbg !491
  %12 = load ptr, ptr %11, align 8, !dbg !491
  %13 = getelementptr i8, ptr %12, i64 0, !dbg !491
  %14 = getelementptr inbounds %string.255, ptr %10, i32 0, i32 0, !dbg !491
  store ptr %13, ptr %14, align 8, !dbg !491
  %15 = getelementptr inbounds %slice.314, ptr %9, i32 0, i32 0, !dbg !491
  %16 = load i64, ptr %15, align 8, !dbg !491
  %17 = getelementptr inbounds %string.255, ptr %10, i32 0, i32 1, !dbg !491
  store i64 %16, ptr %17, align 8, !dbg !491
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %10, i64 16, i1 false), !dbg !491
  ret void, !dbg !491
}

define void @__io_sprint(ptr %0, ptr %1, ptr %2) !dbg !492 {
block_0:
  %3 = alloca %string.255, align 8
  %4 = alloca %slice.312, align 8
  %5 = alloca %slice.311, align 8
  %6 = alloca %string.255, align 8
  %7 = alloca %slice.311, align 8
  %8 = alloca %slice.314, align 8
  %9 = alloca %slice.314, align 8
  %10 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %9, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !495
  call void @llvm.dbg.value(metadata ptr %3, metadata !496, metadata !DIExpression()), !dbg !495
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %4, ptr align 8 %2, i64 16, i1 false), !dbg !495
  call void @llvm.dbg.value(metadata ptr %4, metadata !497, metadata !DIExpression()), !dbg !495
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %3, i64 16, i1 false), !dbg !498
  call void @__io___internal_print(ptr %5, ptr %6, ptr %4), !dbg !498
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %7, ptr align 8 %5, i64 16, i1 false), !dbg !498
  call void @llvm.dbg.declare(metadata ptr %7, metadata !499, metadata !DIExpression()), !dbg !498
  call void @__io_builder_to_string(ptr %8, ptr %7), !dbg !500
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %9, ptr align 8 %8, i64 16, i1 false), !dbg !500
  call void @llvm.dbg.declare(metadata ptr %9, metadata !501, metadata !DIExpression()), !dbg !500
  call void @"__array_free:*[]u32_:void"(ptr %7), !dbg !502
  %11 = getelementptr inbounds %slice.314, ptr %9, i32 0, i32 1, !dbg !503
  %12 = load ptr, ptr %11, align 8, !dbg !503
  %13 = getelementptr i8, ptr %12, i64 0, !dbg !503
  %14 = getelementptr inbounds %string.255, ptr %10, i32 0, i32 0, !dbg !503
  store ptr %13, ptr %14, align 8, !dbg !503
  %15 = getelementptr inbounds %slice.314, ptr %9, i32 0, i32 0, !dbg !503
  %16 = load i64, ptr %15, align 8, !dbg !503
  %17 = getelementptr inbounds %string.255, ptr %10, i32 0, i32 1, !dbg !503
  store i64 %16, ptr %17, align 8, !dbg !503
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %10, i64 16, i1 false), !dbg !503
  ret void, !dbg !503
}

define void @__io_print(ptr %0, ptr %1) !dbg !504 {
block_0:
  %2 = alloca %string.255, align 8
  %3 = alloca %slice.312, align 8
  %4 = alloca %slice.311, align 8
  %5 = alloca %string.255, align 8
  %6 = alloca %slice.311, align 8
  %7 = alloca %slice.314, align 8
  %8 = alloca %slice.314, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !507
  call void @llvm.dbg.value(metadata ptr %2, metadata !508, metadata !DIExpression()), !dbg !507
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !507
  call void @llvm.dbg.value(metadata ptr %3, metadata !509, metadata !DIExpression()), !dbg !507
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !510
  call void @__io___internal_print(ptr %4, ptr %5, ptr %3), !dbg !510
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !510
  call void @llvm.dbg.declare(metadata ptr %6, metadata !511, metadata !DIExpression()), !dbg !510
  call void @__io_builder_to_string(ptr %7, ptr %6), !dbg !512
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !512
  call void @llvm.dbg.declare(metadata ptr %8, metadata !513, metadata !DIExpression()), !dbg !512
  %9 = getelementptr inbounds %slice.314, ptr %8, i32 0, i32 1, !dbg !514
  %10 = load ptr, ptr %9, align 8, !dbg !514
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !514
  %12 = getelementptr inbounds %slice.314, ptr %8, i32 0, i32 0, !dbg !514
  %13 = load i64, ptr %12, align 8, !dbg !514
  %14 = trunc i64 %13 to i32, !dbg !514
  call void @__os_print(ptr %11, i32 %14), !dbg !514
  call void @"__array_free:*[]u32_:void"(ptr %6), !dbg !515
  call void @"__array_free:*[]u8_:void"(ptr %8), !dbg !516
  ret void, !dbg !517
}

define void @__io_println(ptr %0, ptr %1) !dbg !518 {
block_0:
  %2 = alloca %string.255, align 8
  %3 = alloca %slice.312, align 8
  %4 = alloca %slice.311, align 8
  %5 = alloca %string.255, align 8
  %6 = alloca %slice.311, align 8
  %7 = alloca %slice.314, align 8
  %8 = alloca %slice.314, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %0, i64 16, i1 false), !dbg !519
  call void @llvm.dbg.value(metadata ptr %2, metadata !520, metadata !DIExpression()), !dbg !519
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %1, i64 16, i1 false), !dbg !519
  call void @llvm.dbg.value(metadata ptr %3, metadata !521, metadata !DIExpression()), !dbg !519
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %2, i64 16, i1 false), !dbg !522
  call void @__io___internal_print(ptr %4, ptr %5, ptr %3), !dbg !522
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %4, i64 16, i1 false), !dbg !522
  call void @llvm.dbg.declare(metadata ptr %6, metadata !523, metadata !DIExpression()), !dbg !522
  call void @"__array_add:*[]u32_u32_:void"(ptr %6, i32 10), !dbg !524
  call void @__io_builder_to_string(ptr %7, ptr %6), !dbg !525
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !525
  call void @llvm.dbg.declare(metadata ptr %8, metadata !526, metadata !DIExpression()), !dbg !525
  %9 = getelementptr inbounds %slice.314, ptr %8, i32 0, i32 1, !dbg !527
  %10 = load ptr, ptr %9, align 8, !dbg !527
  %11 = getelementptr i8, ptr %10, i64 0, !dbg !527
  %12 = getelementptr inbounds %slice.314, ptr %8, i32 0, i32 0, !dbg !527
  %13 = load i64, ptr %12, align 8, !dbg !527
  %14 = trunc i64 %13 to i32, !dbg !527
  call void @__os_print(ptr %11, i32 %14), !dbg !527
  call void @"__array_free:*[]u32_:void"(ptr %6), !dbg !528
  call void @"__array_free:*[]u8_:void"(ptr %8), !dbg !529
  ret void, !dbg !530
}

define void @__io_readln(ptr %0, ptr %1, i32 %2) !dbg !531 {
block_0:
  %3 = alloca ptr, align 8
  %4 = alloca i32, align 4
  %5 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %4, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  %6 = alloca ptr, align 8
  %7 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  %8 = alloca %string.255, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  store ptr %1, ptr %3, align 8, !dbg !534
  call void @llvm.dbg.value(metadata ptr %3, metadata !535, metadata !DIExpression()), !dbg !534
  store i32 %2, ptr %4, align 4, !dbg !534
  call void @llvm.dbg.value(metadata ptr %4, metadata !536, metadata !DIExpression()), !dbg !534
  %9 = load ptr, ptr %3, align 8, !dbg !537
  %10 = getelementptr inbounds %__mem_Allocator.270, ptr %9, i32 0, i32 0, !dbg !537
  %11 = load ptr, ptr %10, align 8, !dbg !537
  %12 = load i32, ptr %4, align 4, !dbg !537
  %13 = zext i32 %12 to i64, !dbg !537
  %14 = load ptr, ptr %3, align 8, !dbg !537
  %15 = call ptr %11(i64 %13, ptr %14), !dbg !537
  store ptr %15, ptr %5, align 8, !dbg !537
  call void @llvm.dbg.declare(metadata ptr %5, metadata !538, metadata !DIExpression()), !dbg !537
  %16 = load ptr, ptr %5, align 8, !dbg !539
  %17 = icmp eq ptr %16, null, !dbg !539
  br i1 %17, label %block_1, label %block_2, !dbg !539

block_1:                                          ; preds = %block_0
  %18 = alloca %string.255, align 8, !dbg !540
  %String = getelementptr inbounds %string.255, ptr %18, i32 0, i32 0, !dbg !540
  %Size = getelementptr inbounds %string.255, ptr %18, i32 0, i32 1, !dbg !540
  store ptr @16, ptr %String, align 8, !dbg !540
  store i64 0, ptr %Size, align 8, !dbg !540
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %18, i64 16, i1 false), !dbg !540
  ret void, !dbg !540

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !540

block_3:                                          ; preds = %block_2
  %19 = load ptr, ptr %5, align 8, !dbg !541
  store ptr %19, ptr %6, align 8, !dbg !541
  call void @llvm.dbg.declare(metadata ptr %6, metadata !542, metadata !DIExpression()), !dbg !541
  %20 = load ptr, ptr %6, align 8, !dbg !543
  %21 = load i32, ptr %4, align 4, !dbg !543
  %22 = call i32 @__os_read_stdin_line(ptr %20, i32 %21), !dbg !543
  store i32 %22, ptr %7, align 4, !dbg !543
  call void @llvm.dbg.declare(metadata ptr %7, metadata !544, metadata !DIExpression()), !dbg !543
  %23 = load i32, ptr %7, align 4, !dbg !545
  %24 = icmp eq i32 %23, 0, !dbg !545
  br i1 %24, label %block_4, label %block_5, !dbg !545

block_4:                                          ; preds = %block_3
  %25 = alloca %string.255, align 8, !dbg !546
  %String1 = getelementptr inbounds %string.255, ptr %25, i32 0, i32 0, !dbg !546
  %Size2 = getelementptr inbounds %string.255, ptr %25, i32 0, i32 1, !dbg !546
  store ptr @17, ptr %String1, align 8, !dbg !546
  store i64 0, ptr %Size2, align 8, !dbg !546
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %25, i64 16, i1 false), !dbg !546
  ret void, !dbg !546

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !546

block_6:                                          ; preds = %block_5
  call void @llvm.dbg.declare(metadata ptr %8, metadata !547, metadata !DIExpression()), !dbg !548
  %26 = getelementptr inbounds %string.255, ptr %8, i32 0, i32 0, !dbg !549
  %27 = load ptr, ptr %6, align 8, !dbg !549
  store ptr %27, ptr %26, align 8, !dbg !549
  %28 = getelementptr inbounds %string.255, ptr %8, i32 0, i32 1, !dbg !550
  %29 = load i32, ptr %7, align 4, !dbg !550
  %30 = zext i32 %29 to i64, !dbg !550
  store i64 %30, ptr %28, align 8, !dbg !550
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !551
  ret void, !dbg !551
}

define i32 @__io_get_next(ptr %0) !dbg !552 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %3, i8 0, i32 4, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !555
  call void @llvm.dbg.value(metadata ptr %1, metadata !556, metadata !DIExpression()), !dbg !555
  %4 = load ptr, ptr %1, align 8, !dbg !557
  store ptr %4, ptr %2, align 8, !dbg !557
  call void @llvm.dbg.declare(metadata ptr %2, metadata !558, metadata !DIExpression()), !dbg !557
  %5 = load ptr, ptr %2, align 8, !dbg !559
  %6 = load i8, ptr %5, align 1, !dbg !559
  %7 = zext i8 %6 to i32, !dbg !559
  store i32 %7, ptr %3, align 4, !dbg !559
  call void @llvm.dbg.declare(metadata ptr %3, metadata !560, metadata !DIExpression()), !dbg !559
  br label %block_1, !dbg !561

block_1:                                          ; preds = %block_6, %block_0
  br label %block_2, !dbg !561

block_2:                                          ; preds = %block_1
  %8 = load ptr, ptr %2, align 8, !dbg !562
  %9 = load i8, ptr %8, align 1, !dbg !562
  %10 = and i8 %9, -128, !dbg !562
  %11 = icmp ne i8 %10, 0, !dbg !562
  br i1 %11, label %block_4, label %block_5, !dbg !562

block_4:                                          ; preds = %block_2
  %12 = load ptr, ptr %2, align 8, !dbg !563
  %13 = getelementptr i8, ptr %12, i64 1, !dbg !563
  store ptr %13, ptr %2, align 8, !dbg !563
  %14 = load i32, ptr %3, align 4, !dbg !564
  %15 = shl i32 %14, 8, !dbg !564
  %16 = load ptr, ptr %2, align 8, !dbg !564
  %17 = load i8, ptr %16, align 1, !dbg !564
  %18 = zext i8 %17 to i32, !dbg !564
  %19 = or i32 %15, %18, !dbg !564
  store i32 %19, ptr %3, align 4, !dbg !564
  br label %block_6, !dbg !564

block_5:                                          ; preds = %block_2
  %20 = load i32, ptr %3, align 4, !dbg !565
  ret i32 %20, !dbg !565

block_6:                                          ; preds = %block_4
  br label %block_1, !dbg !565

block_3:                                          ; No predecessors!
  %21 = load i32, ptr %3, align 4, !dbg !566
  ret i32 %21, !dbg !566
}

define void @"__io_format_float:type_*[]u32_f32_i32_:void"(i64 %0, ptr %1, float %2, i32 %3) !dbg !567 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca float, align 4
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca float, align 4
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %6, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %11, i8 0, i32 4, i1 false)
  %12 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %12, i8 0, i32 1, i1 false)
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %14, i8 0, i32 4, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store i64 %0, ptr %4, align 8, !dbg !571
  call void @llvm.dbg.value(metadata ptr %4, metadata !572, metadata !DIExpression()), !dbg !571
  store ptr %1, ptr %5, align 8, !dbg !571
  call void @llvm.dbg.value(metadata ptr %5, metadata !573, metadata !DIExpression()), !dbg !571
  store float %2, ptr %6, align 4, !dbg !571
  call void @llvm.dbg.value(metadata ptr %6, metadata !574, metadata !DIExpression()), !dbg !571
  store i32 %3, ptr %7, align 4, !dbg !571
  call void @llvm.dbg.value(metadata ptr %7, metadata !575, metadata !DIExpression()), !dbg !571
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !576
  call void @llvm.dbg.declare(metadata ptr %9, metadata !577, metadata !DIExpression()), !dbg !576
  store i64 0, ptr %10, align 8, !dbg !578
  call void @llvm.dbg.declare(metadata ptr %10, metadata !579, metadata !DIExpression()), !dbg !578
  %16 = load float, ptr %6, align 4, !dbg !580
  store float %16, ptr %11, align 4, !dbg !580
  call void @llvm.dbg.declare(metadata ptr %11, metadata !581, metadata !DIExpression()), !dbg !580
  %17 = load i64, ptr %4, align 8, !dbg !582
  %18 = icmp ne i64 %17, 10, !dbg !582
  %19 = load i64, ptr %4, align 8, !dbg !582
  %20 = icmp ne i64 %19, 11, !dbg !582
  %21 = icmp ne i1 %18, false, !dbg !582
  %22 = icmp ne i1 %20, false, !dbg !582
  %23 = and i1 %21, %22, !dbg !582
  br i1 %23, label %block_1, label %block_2, !dbg !582

block_1:                                          ; preds = %block_0
  ret void, !dbg !583

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !583

block_3:                                          ; preds = %block_2
  %24 = load float, ptr %11, align 4, !dbg !584
  %25 = fcmp oeq float %24, 0.000000e+00, !dbg !584
  br i1 %25, label %block_4, label %block_5, !dbg !584

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !585
  call void @"__array_add:*[]u32_u32_:void"(ptr %26, i32 48), !dbg !585
  ret void, !dbg !586

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !586

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !587
  call void @llvm.dbg.declare(metadata ptr %12, metadata !588, metadata !DIExpression()), !dbg !587
  %27 = load float, ptr %11, align 4, !dbg !589
  %28 = fcmp olt float %27, 0.000000e+00, !dbg !589
  br i1 %28, label %block_7, label %block_8, !dbg !589

block_7:                                          ; preds = %block_6
  %29 = load float, ptr %11, align 4, !dbg !590
  %30 = fsub float 0.000000e+00, %29, !dbg !590
  store float %30, ptr %11, align 4, !dbg !590
  store i1 true, ptr %12, align 1, !dbg !591
  br label %block_9, !dbg !591

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !591

block_9:                                          ; preds = %block_8, %block_7
  %31 = load float, ptr %11, align 4, !dbg !592
  %32 = fadd float %31, 0x3F747AE140000000, !dbg !592
  store float %32, ptr %11, align 4, !dbg !592
  %33 = load float, ptr %11, align 4, !dbg !593
  %34 = fptosi float %33 to i32, !dbg !593
  store i32 %34, ptr %13, align 4, !dbg !593
  call void @llvm.dbg.declare(metadata ptr %13, metadata !594, metadata !DIExpression()), !dbg !593
  %35 = load float, ptr %11, align 4, !dbg !595
  %36 = load i32, ptr %7, align 4, !dbg !595
  %37 = sitofp i32 %36 to float, !dbg !595
  %38 = fmul float %35, %37, !dbg !595
  %39 = fptosi float %38 to i32, !dbg !595
  %40 = load i32, ptr %7, align 4, !dbg !595
  %41 = srem i32 %39, %40, !dbg !595
  store i32 %41, ptr %14, align 4, !dbg !595
  call void @llvm.dbg.declare(metadata ptr %14, metadata !596, metadata !DIExpression()), !dbg !595
  %42 = load i32, ptr %14, align 4, !dbg !597
  %43 = icmp eq i32 %42, 0, !dbg !597
  br i1 %43, label %block_10, label %block_11, !dbg !597

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !598
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !598
  store i32 48, ptr %45, align 4, !dbg !598
  %46 = load i64, ptr %10, align 8, !dbg !599
  %47 = add i64 %46, 1, !dbg !599
  store i64 %47, ptr %10, align 8, !dbg !599
  br label %block_12, !dbg !599

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !600

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !600
  %49 = icmp sgt i32 %48, 0, !dbg !600
  br i1 %49, label %block_14, label %block_15, !dbg !600

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !601
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !601
  %52 = load i32, ptr %14, align 4, !dbg !601
  %53 = srem i32 %52, 10, !dbg !601
  %54 = trunc i32 %53 to i8, !dbg !601
  %55 = zext i8 %54 to i32, !dbg !601
  %56 = add i32 48, %55, !dbg !601
  store i32 %56, ptr %51, align 4, !dbg !601
  %57 = load i64, ptr %10, align 8, !dbg !602
  %58 = add i64 %57, 1, !dbg !602
  store i64 %58, ptr %10, align 8, !dbg !602
  %59 = load i32, ptr %14, align 4, !dbg !603
  %60 = sdiv i32 %59, 10, !dbg !603
  store i32 %60, ptr %14, align 4, !dbg !603
  br label %block_13, !dbg !603

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !603

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !604
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !604
  store i32 46, ptr %62, align 4, !dbg !604
  %63 = load i64, ptr %10, align 8, !dbg !605
  %64 = add i64 %63, 1, !dbg !605
  store i64 %64, ptr %10, align 8, !dbg !605
  %65 = load i32, ptr %13, align 4, !dbg !606
  %66 = icmp eq i32 %65, 0, !dbg !606
  br i1 %66, label %block_16, label %block_17, !dbg !606

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !607
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !607
  store i32 48, ptr %68, align 4, !dbg !607
  %69 = load i64, ptr %10, align 8, !dbg !608
  %70 = add i64 %69, 1, !dbg !608
  store i64 %70, ptr %10, align 8, !dbg !608
  br label %block_18, !dbg !608

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !609

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !609
  %72 = icmp sgt i32 %71, 0, !dbg !609
  br i1 %72, label %block_20, label %block_21, !dbg !609

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !610
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !610
  %75 = load i32, ptr %13, align 4, !dbg !610
  %76 = srem i32 %75, 10, !dbg !610
  %77 = add i32 48, %76, !dbg !610
  store i32 %77, ptr %74, align 4, !dbg !610
  %78 = load i64, ptr %10, align 8, !dbg !611
  %79 = add i64 %78, 1, !dbg !611
  store i64 %79, ptr %10, align 8, !dbg !611
  %80 = load i32, ptr %13, align 4, !dbg !612
  %81 = sdiv i32 %80, 10, !dbg !612
  store i32 %81, ptr %13, align 4, !dbg !612
  br label %block_19, !dbg !612

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !612

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !613
  br i1 %82, label %block_22, label %block_23, !dbg !613

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !614
  call void @"__array_add:*[]u32_u32_:void"(ptr %83, i32 45), !dbg !614
  br label %block_24, !dbg !614

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !614

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !615
  store i64 0, ptr %15, align 8, !dbg !615
  br label %block_25, !dbg !615

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !615
  %86 = icmp ult i64 %85, %84, !dbg !615
  br i1 %86, label %block_26, label %block_28, !dbg !615

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !616, metadata !DIExpression()), !dbg !615
  %87 = load ptr, ptr %5, align 8, !dbg !617
  %88 = load i64, ptr %10, align 8, !dbg !617
  %89 = load i64, ptr %15, align 8, !dbg !617
  %90 = sub i64 %88, %89, !dbg !617
  %91 = sub i64 %90, 1, !dbg !617
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !617
  %93 = load i32, ptr %92, align 4, !dbg !617
  call void @"__array_add:*[]u32_u32_:void"(ptr %87, i32 %93), !dbg !617
  br label %block_27, !dbg !617

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !617
  %95 = add i64 %94, 1, !dbg !617
  store i64 %95, ptr %15, align 8, !dbg !617
  br label %block_25, !dbg !617

block_28:                                         ; preds = %block_25
  ret void, !dbg !618
}

define void @"__io_format_float:type_*[]u32_f64_i32_:void"(i64 %0, ptr %1, double %2, i32 %3) !dbg !619 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca ptr, align 8
  %6 = alloca double, align 8
  %7 = alloca i32, align 4
  %8 = alloca [256 x i32], align 4
  %9 = alloca [256 x i32], align 4
  %10 = alloca i64, align 8
  %11 = alloca double, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %7, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %8, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %9, i8 0, i32 1024, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %10, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %11, i8 0, i32 8, i1 false)
  %12 = alloca i1, align 1
  call void @llvm.memset.p0.i32(ptr align 1 %12, i8 0, i32 1, i1 false)
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  call void @llvm.memset.p0.i32(ptr align 4 %13, i8 0, i32 4, i1 false)
  call void @llvm.memset.p0.i32(ptr align 4 %14, i8 0, i32 4, i1 false)
  %15 = alloca i64, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %15, i8 0, i32 8, i1 false)
  store i64 %0, ptr %4, align 8, !dbg !622
  call void @llvm.dbg.value(metadata ptr %4, metadata !623, metadata !DIExpression()), !dbg !622
  store ptr %1, ptr %5, align 8, !dbg !622
  call void @llvm.dbg.value(metadata ptr %5, metadata !624, metadata !DIExpression()), !dbg !622
  store double %2, ptr %6, align 8, !dbg !622
  call void @llvm.dbg.value(metadata ptr %6, metadata !625, metadata !DIExpression()), !dbg !622
  store i32 %3, ptr %7, align 4, !dbg !622
  call void @llvm.dbg.value(metadata ptr %7, metadata !626, metadata !DIExpression()), !dbg !622
  call void @llvm.memcpy.p0.p0.i64(ptr align 4 %9, ptr align 4 %8, i64 1024, i1 false), !dbg !627
  call void @llvm.dbg.declare(metadata ptr %9, metadata !628, metadata !DIExpression()), !dbg !627
  store i64 0, ptr %10, align 8, !dbg !629
  call void @llvm.dbg.declare(metadata ptr %10, metadata !630, metadata !DIExpression()), !dbg !629
  %16 = load double, ptr %6, align 8, !dbg !631
  store double %16, ptr %11, align 8, !dbg !631
  call void @llvm.dbg.declare(metadata ptr %11, metadata !632, metadata !DIExpression()), !dbg !631
  %17 = load i64, ptr %4, align 8, !dbg !633
  %18 = icmp ne i64 %17, 10, !dbg !633
  %19 = load i64, ptr %4, align 8, !dbg !633
  %20 = icmp ne i64 %19, 11, !dbg !633
  %21 = icmp ne i1 %18, false, !dbg !633
  %22 = icmp ne i1 %20, false, !dbg !633
  %23 = and i1 %21, %22, !dbg !633
  br i1 %23, label %block_1, label %block_2, !dbg !633

block_1:                                          ; preds = %block_0
  ret void, !dbg !634

block_2:                                          ; preds = %block_0
  br label %block_3, !dbg !634

block_3:                                          ; preds = %block_2
  %24 = load double, ptr %11, align 8, !dbg !635
  %25 = fcmp oeq double %24, 0.000000e+00, !dbg !635
  br i1 %25, label %block_4, label %block_5, !dbg !635

block_4:                                          ; preds = %block_3
  %26 = load ptr, ptr %5, align 8, !dbg !636
  call void @"__array_add:*[]u32_u32_:void"(ptr %26, i32 48), !dbg !636
  ret void, !dbg !637

block_5:                                          ; preds = %block_3
  br label %block_6, !dbg !637

block_6:                                          ; preds = %block_5
  store i1 false, ptr %12, align 1, !dbg !638
  call void @llvm.dbg.declare(metadata ptr %12, metadata !639, metadata !DIExpression()), !dbg !638
  %27 = load double, ptr %11, align 8, !dbg !640
  %28 = fcmp olt double %27, 0.000000e+00, !dbg !640
  br i1 %28, label %block_7, label %block_8, !dbg !640

block_7:                                          ; preds = %block_6
  %29 = load double, ptr %11, align 8, !dbg !641
  %30 = fsub double 0.000000e+00, %29, !dbg !641
  store double %30, ptr %11, align 8, !dbg !641
  store i1 true, ptr %12, align 1, !dbg !642
  br label %block_9, !dbg !642

block_8:                                          ; preds = %block_6
  br label %block_9, !dbg !642

block_9:                                          ; preds = %block_8, %block_7
  %31 = load double, ptr %11, align 8, !dbg !643
  %32 = fadd double %31, 0x3F747AE140000000, !dbg !643
  store double %32, ptr %11, align 8, !dbg !643
  %33 = load double, ptr %11, align 8, !dbg !644
  %34 = fptosi double %33 to i32, !dbg !644
  store i32 %34, ptr %13, align 4, !dbg !644
  call void @llvm.dbg.declare(metadata ptr %13, metadata !645, metadata !DIExpression()), !dbg !644
  %35 = load double, ptr %11, align 8, !dbg !646
  %36 = load i32, ptr %7, align 4, !dbg !646
  %37 = sitofp i32 %36 to double, !dbg !646
  %38 = fmul double %35, %37, !dbg !646
  %39 = fptosi double %38 to i32, !dbg !646
  %40 = load i32, ptr %7, align 4, !dbg !646
  %41 = srem i32 %39, %40, !dbg !646
  store i32 %41, ptr %14, align 4, !dbg !646
  call void @llvm.dbg.declare(metadata ptr %14, metadata !647, metadata !DIExpression()), !dbg !646
  %42 = load i32, ptr %14, align 4, !dbg !648
  %43 = icmp eq i32 %42, 0, !dbg !648
  br i1 %43, label %block_10, label %block_11, !dbg !648

block_10:                                         ; preds = %block_9
  %44 = load i64, ptr %10, align 8, !dbg !649
  %45 = getelementptr [256 x i32], ptr %9, i64 0, i64 %44, !dbg !649
  store i32 48, ptr %45, align 4, !dbg !649
  %46 = load i64, ptr %10, align 8, !dbg !650
  %47 = add i64 %46, 1, !dbg !650
  store i64 %47, ptr %10, align 8, !dbg !650
  br label %block_12, !dbg !650

block_11:                                         ; preds = %block_9
  br label %block_13, !dbg !651

block_13:                                         ; preds = %block_14, %block_11
  %48 = load i32, ptr %14, align 4, !dbg !651
  %49 = icmp sgt i32 %48, 0, !dbg !651
  br i1 %49, label %block_14, label %block_15, !dbg !651

block_14:                                         ; preds = %block_13
  %50 = load i64, ptr %10, align 8, !dbg !652
  %51 = getelementptr [256 x i32], ptr %9, i64 0, i64 %50, !dbg !652
  %52 = load i32, ptr %14, align 4, !dbg !652
  %53 = srem i32 %52, 10, !dbg !652
  %54 = trunc i32 %53 to i8, !dbg !652
  %55 = zext i8 %54 to i32, !dbg !652
  %56 = add i32 48, %55, !dbg !652
  store i32 %56, ptr %51, align 4, !dbg !652
  %57 = load i64, ptr %10, align 8, !dbg !653
  %58 = add i64 %57, 1, !dbg !653
  store i64 %58, ptr %10, align 8, !dbg !653
  %59 = load i32, ptr %14, align 4, !dbg !654
  %60 = sdiv i32 %59, 10, !dbg !654
  store i32 %60, ptr %14, align 4, !dbg !654
  br label %block_13, !dbg !654

block_15:                                         ; preds = %block_13
  br label %block_12, !dbg !654

block_12:                                         ; preds = %block_15, %block_10
  %61 = load i64, ptr %10, align 8, !dbg !655
  %62 = getelementptr [256 x i32], ptr %9, i64 0, i64 %61, !dbg !655
  store i32 46, ptr %62, align 4, !dbg !655
  %63 = load i64, ptr %10, align 8, !dbg !656
  %64 = add i64 %63, 1, !dbg !656
  store i64 %64, ptr %10, align 8, !dbg !656
  %65 = load i32, ptr %13, align 4, !dbg !657
  %66 = icmp eq i32 %65, 0, !dbg !657
  br i1 %66, label %block_16, label %block_17, !dbg !657

block_16:                                         ; preds = %block_12
  %67 = load i64, ptr %10, align 8, !dbg !658
  %68 = getelementptr [256 x i32], ptr %9, i64 0, i64 %67, !dbg !658
  store i32 48, ptr %68, align 4, !dbg !658
  %69 = load i64, ptr %10, align 8, !dbg !659
  %70 = add i64 %69, 1, !dbg !659
  store i64 %70, ptr %10, align 8, !dbg !659
  br label %block_18, !dbg !659

block_17:                                         ; preds = %block_12
  br label %block_19, !dbg !660

block_19:                                         ; preds = %block_20, %block_17
  %71 = load i32, ptr %13, align 4, !dbg !660
  %72 = icmp sgt i32 %71, 0, !dbg !660
  br i1 %72, label %block_20, label %block_21, !dbg !660

block_20:                                         ; preds = %block_19
  %73 = load i64, ptr %10, align 8, !dbg !661
  %74 = getelementptr [256 x i32], ptr %9, i64 0, i64 %73, !dbg !661
  %75 = load i32, ptr %13, align 4, !dbg !661
  %76 = srem i32 %75, 10, !dbg !661
  %77 = add i32 48, %76, !dbg !661
  store i32 %77, ptr %74, align 4, !dbg !661
  %78 = load i64, ptr %10, align 8, !dbg !662
  %79 = add i64 %78, 1, !dbg !662
  store i64 %79, ptr %10, align 8, !dbg !662
  %80 = load i32, ptr %13, align 4, !dbg !663
  %81 = sdiv i32 %80, 10, !dbg !663
  store i32 %81, ptr %13, align 4, !dbg !663
  br label %block_19, !dbg !663

block_21:                                         ; preds = %block_19
  br label %block_18, !dbg !663

block_18:                                         ; preds = %block_21, %block_16
  %82 = load i1, ptr %12, align 1, !dbg !664
  br i1 %82, label %block_22, label %block_23, !dbg !664

block_22:                                         ; preds = %block_18
  %83 = load ptr, ptr %5, align 8, !dbg !665
  call void @"__array_add:*[]u32_u32_:void"(ptr %83, i32 45), !dbg !665
  br label %block_24, !dbg !665

block_23:                                         ; preds = %block_18
  br label %block_24, !dbg !665

block_24:                                         ; preds = %block_23, %block_22
  %84 = load i64, ptr %10, align 8, !dbg !666
  store i64 0, ptr %15, align 8, !dbg !666
  br label %block_25, !dbg !666

block_25:                                         ; preds = %block_27, %block_24
  %85 = load i64, ptr %15, align 8, !dbg !666
  %86 = icmp ult i64 %85, %84, !dbg !666
  br i1 %86, label %block_26, label %block_28, !dbg !666

block_26:                                         ; preds = %block_25
  call void @llvm.dbg.declare(metadata ptr %15, metadata !667, metadata !DIExpression()), !dbg !666
  %87 = load ptr, ptr %5, align 8, !dbg !668
  %88 = load i64, ptr %10, align 8, !dbg !668
  %89 = load i64, ptr %15, align 8, !dbg !668
  %90 = sub i64 %88, %89, !dbg !668
  %91 = sub i64 %90, 1, !dbg !668
  %92 = getelementptr [256 x i32], ptr %9, i64 0, i64 %91, !dbg !668
  %93 = load i32, ptr %92, align 4, !dbg !668
  call void @"__array_add:*[]u32_u32_:void"(ptr %87, i32 %93), !dbg !668
  br label %block_27, !dbg !668

block_27:                                         ; preds = %block_26
  %94 = load i64, ptr %15, align 8, !dbg !668
  %95 = add i64 %94, 1, !dbg !668
  store i64 %95, ptr %15, align 8, !dbg !668
  br label %block_25, !dbg !668

block_28:                                         ; preds = %block_25
  ret void, !dbg !669
}

declare ptr @__mem_generic_alloc(i64, ptr)

declare void @__mem_generic_free(ptr, ptr)

declare void @__mem_create_generic_allocator(ptr)

declare ptr @__mem_arena_alloc(i64, ptr)

declare void @__mem_no_free(ptr, ptr)

declare void @__mem_create_scratch(ptr, i64)

declare void @__mem_destroy_scratch(ptr)

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

declare void @"__mem_make_slice:type_int_*__mem_Allocator_:[]u8"(ptr, i64, i64, ptr)

declare i64 @__str_to_int(ptr)

declare void @__str_create(ptr, ptr)

declare void @__str_append(ptr, ptr)

declare void @__str_append_u32(ptr, i32)

declare void @__str_append_u8(ptr, i8)

declare void @__str_from_builder(ptr, ptr, ptr)

declare void @__str_substr(ptr, ptr, i64, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_add:*[]u32_u32_:void"(ptr, i32)

declare void @"__array_create:type_*__mem_Allocator_:[]u8"(ptr, i64, ptr)

declare void @"__array_add:*[]u8_u8_:void"(ptr, i8)

declare void @"__array_create:type_*__mem_Allocator_:[]u32"(ptr, i64, ptr)

declare void @"__array_free:*[]u32_:void"(ptr)

declare void @"__array_free:*[]u8_:void"(ptr)

declare ptr @memcpy.2(ptr, ptr, i64)

declare ptr @memset.3(ptr, i32, i64)

declare void @_fltused()

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!76, !77}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!2 = !{!3, !15, !36, !45, !50, !54, !65, !3, !15, !36, !45, !50, !54}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !1, file: !1, size: 64, align: 64, elements: !4)
!4 = !{!5, !6, !7, !8, !9, !10, !11, !12, !13, !14}
!5 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!6 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!7 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!8 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!9 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!11 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!12 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!13 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !1, file: !1, size: 64, align: 64, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!17 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !1, file: !1, size: 32, align: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44}
!38 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!44 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !1, file: !1, size: 32, align: 32, elements: !46)
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !1, file: !1, size: 64, align: 64, elements: !51)
!51 = !{!52, !53}
!52 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !1, file: !1, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64}
!56 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "SharedLib", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "CrossAndroid", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "NoLink", value: 256, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__android_LogPriority", scope: !1, file: !1, size: 32, align: 32, elements: !66)
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75}
!67 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "DEFAULT", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "VERBOSE", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "DEBUG", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "INFO", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "WARN", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "ERROR", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "FATAL", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "SILENT", value: 8, isUnsigned: true)
!76 = !{i32 2, !"CodeView", i32 1}
!77 = !{i32 2, !"Debug Info Version", i32 3}
!78 = distinct !DISubprogram(name: "push_string", linkageName: "__io_push_string", scope: !1, file: !1, line: 9, type: !79, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!79 = !DISubroutineType(types: !80)
!80 = !{null, !81, !90}
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*[]u32", baseType: !82, size: 64, align: 64, dwarfAddressSpace: 0)
!82 = !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !83, size: 128, align: 64, elements: !84)
!83 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\Android\\src")
!84 = !{!85, !87}
!85 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !83, file: !83, baseType: !86, size: 64, align: 64)
!86 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !88, size: 64, align: 64, offset: 64)
!88 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u32", baseType: !89, size: 64, align: 64, dwarfAddressSpace: 0)
!89 = !DIBasicType(name: "u32", size: 32, encoding: DW_ATE_unsigned)
!90 = !DICompositeType(tag: DW_TAG_structure_type, name: "string", scope: !83, file: !83, size: 128, elements: !91)
!91 = !{!92, !95}
!92 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !93, size: 64, align: 64)
!93 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !94, size: 64, align: 64, dwarfAddressSpace: 0)
!94 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!95 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !83, file: !83, baseType: !86, size: 64, align: 64, offset: 64)
!96 = !{}
!97 = !DILocation(line: 9, scope: !78)
!98 = !DILocalVariable(name: "b", scope: !78, file: !1, line: 9, type: !81)
!99 = !DILocalVariable(name: "to_push", arg: 1, scope: !78, file: !1, line: 9, type: !90)
!100 = !DILocation(line: 10, scope: !78)
!101 = !DILocalVariable(name: "c", scope: !78, file: !1, line: 10, type: !89)
!102 = !DILocalVariable(name: "i", scope: !78, file: !1, line: 10, type: !86)
!103 = !DILocation(line: 11, scope: !78)
!104 = !DILocation(line: 13, scope: !78)
!105 = distinct !DISubprogram(name: "format_uint", linkageName: "__io_format_uint", scope: !1, file: !1, line: 15, type: !106, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!106 = !DISubroutineType(types: !107)
!107 = !{null, !81, !108}
!108 = !DIBasicType(name: "uint", size: 64, encoding: DW_ATE_unsigned)
!109 = !DILocation(line: 15, scope: !105)
!110 = !DILocalVariable(name: "b", scope: !105, file: !1, line: 15, type: !81)
!111 = !DILocalVariable(name: "num_in", arg: 1, scope: !105, file: !1, line: 15, type: !108)
!112 = !DILocation(line: 16, scope: !105)
!113 = !DILocalVariable(name: "temp", scope: !105, file: !1, line: 16, type: !114)
!114 = !DICompositeType(tag: DW_TAG_array_type, baseType: !89, size: 8192, align: 32, elements: !115)
!115 = !{!116}
!116 = !DISubrange(count: 256, lowerBound: 0)
!117 = !DILocation(line: 17, scope: !105)
!118 = !DILocalVariable(name: "num", scope: !105, file: !1, line: 17, type: !108)
!119 = !DILocation(line: 18, scope: !105)
!120 = !DILocation(line: 19, scope: !105)
!121 = !DILocation(line: 20, scope: !105)
!122 = !DILocation(line: 23, scope: !105)
!123 = !DILocalVariable(name: "count", scope: !105, file: !1, line: 23, type: !86)
!124 = !DILocation(line: 24, scope: !105)
!125 = !DILocation(line: 25, scope: !105)
!126 = !DILocalVariable(name: "digit", scope: !105, file: !1, line: 25, type: !108)
!127 = !DILocation(line: 26, scope: !105)
!128 = !DILocation(line: 27, scope: !105)
!129 = !DILocalVariable(name: "c", scope: !105, file: !1, line: 27, type: !108)
!130 = !DILocation(line: 28, scope: !105)
!131 = !DILocation(line: 29, scope: !105)
!132 = !DILocation(line: 32, scope: !105)
!133 = !DILocalVariable(name: "i", scope: !105, file: !1, line: 32, type: !86)
!134 = !DILocation(line: 33, scope: !105)
!135 = !DILocation(line: 35, scope: !105)
!136 = distinct !DISubprogram(name: "format_int", linkageName: "__io_format_int", scope: !1, file: !1, line: 37, type: !137, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!137 = !DISubroutineType(types: !138)
!138 = !{null, !81, !86}
!139 = !DILocation(line: 37, scope: !136)
!140 = !DILocalVariable(name: "b", scope: !136, file: !1, line: 37, type: !81)
!141 = !DILocalVariable(name: "num_in", arg: 1, scope: !136, file: !1, line: 37, type: !86)
!142 = !DILocation(line: 38, scope: !136)
!143 = !DILocalVariable(name: "temp", scope: !136, file: !1, line: 38, type: !114)
!144 = !DILocation(line: 39, scope: !136)
!145 = !DILocalVariable(name: "num", scope: !136, file: !1, line: 39, type: !86)
!146 = !DILocation(line: 40, scope: !136)
!147 = !DILocation(line: 41, scope: !136)
!148 = !DILocation(line: 42, scope: !136)
!149 = !DILocation(line: 45, scope: !136)
!150 = !DILocalVariable(name: "is_neg", scope: !136, file: !1, line: 45, type: !151)
!151 = !DIBasicType(name: "bool", size: 8, encoding: DW_ATE_boolean)
!152 = !DILocation(line: 46, scope: !136)
!153 = !DILocation(line: 47, scope: !136)
!154 = !DILocation(line: 48, scope: !136)
!155 = !DILocation(line: 51, scope: !136)
!156 = !DILocalVariable(name: "count", scope: !136, file: !1, line: 51, type: !86)
!157 = !DILocation(line: 52, scope: !136)
!158 = !DILocation(line: 53, scope: !136)
!159 = !DILocalVariable(name: "digit", scope: !136, file: !1, line: 53, type: !86)
!160 = !DILocation(line: 54, scope: !136)
!161 = !DILocation(line: 55, scope: !136)
!162 = !DILocalVariable(name: "c", scope: !136, file: !1, line: 55, type: !89)
!163 = !DILocation(line: 56, scope: !136)
!164 = !DILocation(line: 57, scope: !136)
!165 = !DILocation(line: 60, scope: !136)
!166 = !DILocation(line: 62, scope: !136)
!167 = !DILocalVariable(name: "i", scope: !136, file: !1, line: 62, type: !86)
!168 = !DILocation(line: 63, scope: !136)
!169 = !DILocation(line: 65, scope: !136)
!170 = distinct !DISubprogram(name: "print_typetype", linkageName: "__io_print_typetype", scope: !1, file: !1, line: 127, type: !171, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!171 = !DISubroutineType(types: !172)
!172 = !{null, !81, !173}
!173 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_TypeInfo", scope: !1, file: !1, size: 384, elements: !174)
!174 = !{!175, !177}
!175 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !176, size: 64, align: 64)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !83, file: !83, size: 64, align: 64, elements: !4)
!177 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !178, size: 320, align: 64, offset: 64)
!178 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_TypeUnion", scope: !1, file: !1, size: 320, elements: !179)
!179 = !{!180, !188, !202, !211, !216, !221, !224, !234, !240}
!180 = !DIDerivedType(tag: DW_TAG_member, name: "basic", scope: !1, file: !1, baseType: !181, size: 256, align: 64)
!181 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_BasicType", scope: !1, file: !1, size: 256, elements: !182)
!182 = !{!183, !185, !186, !187}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !184, size: 64, align: 64)
!184 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !83, file: !83, size: 64, align: 64, elements: !16)
!185 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 64)
!186 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 96)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1, file: !1, baseType: !90, size: 128, align: 64, offset: 128)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "struct_", scope: !1, file: !1, baseType: !189, size: 320, align: 64)
!189 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructType", scope: !1, file: !1, size: 320, elements: !190)
!190 = !{!191, !187, !201}
!191 = !DIDerivedType(tag: DW_TAG_member, name: "members", scope: !1, file: !1, baseType: !192, size: 128, align: 64)
!192 = !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !83, size: 128, align: 64, elements: !193)
!193 = !{!85, !194}
!194 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !195, size: 64, align: 64, offset: 64)
!195 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init_StructMember", baseType: !196, size: 64, align: 64, dwarfAddressSpace: 0)
!196 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructMember", scope: !83, file: !83, size: 192, elements: !197)
!197 = !{!198, !199}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !83, file: !83, baseType: !90, size: 128, align: 64)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !83, file: !83, baseType: !200, size: 64, align: 64, offset: 128)
!200 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!201 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 256)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "function", scope: !1, file: !1, baseType: !203, size: 192, align: 64)
!203 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_FunctionType", scope: !1, file: !1, size: 192, elements: !204)
!204 = !{!205, !206}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "return_", scope: !1, file: !1, baseType: !200, size: 64, align: 64)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "args_t", scope: !1, file: !1, baseType: !207, size: 128, align: 64, offset: 64)
!207 = !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !83, size: 128, align: 64, elements: !208)
!208 = !{!85, !209}
!209 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !210, size: 64, align: 64, offset: 64)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*type", baseType: !200, size: 64, align: 64, dwarfAddressSpace: 0)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1, file: !1, baseType: !212, size: 128, align: 64)
!212 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_PointerType", scope: !1, file: !1, size: 128, elements: !213)
!213 = !{!214, !215}
!214 = !DIDerivedType(tag: DW_TAG_member, name: "pointee", scope: !1, file: !1, baseType: !200, size: 64, align: 64)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "is_optional", scope: !1, file: !1, baseType: !151, size: 8, align: 8, offset: 64)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !1, file: !1, baseType: !217, size: 128, align: 64)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_ArrayType", scope: !1, file: !1, size: 128, elements: !218)
!218 = !{!219, !220}
!219 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !200, size: 64, align: 64)
!220 = !DIDerivedType(tag: DW_TAG_member, name: "member_count", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 64)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "slice", scope: !1, file: !1, baseType: !222, size: 64, align: 64)
!222 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_SliceType", scope: !1, file: !1, size: 64, elements: !223)
!223 = !{!219}
!224 = !DIDerivedType(tag: DW_TAG_member, name: "enum_", scope: !1, file: !1, baseType: !225, size: 320, align: 64)
!225 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_EnumType", scope: !1, file: !1, size: 320, elements: !226)
!226 = !{!227, !228, !233}
!227 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1, file: !1, baseType: !90, size: 128, align: 64)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "member_names", scope: !1, file: !1, baseType: !229, size: 128, align: 64, offset: 128)
!229 = !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !83, size: 128, align: 64, elements: !230)
!230 = !{!85, !231}
!231 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !232, size: 64, align: 64, offset: 64)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*string", baseType: !90, size: 64, align: 64, dwarfAddressSpace: 0)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !200, size: 64, align: 64, offset: 256)
!234 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1, file: !1, baseType: !235, size: 128, align: 64)
!235 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_VectorType", scope: !1, file: !1, size: 128, elements: !236)
!236 = !{!237, !239}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "kind", scope: !1, file: !1, baseType: !238, size: 64, align: 64)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !83, file: !83, size: 64, align: 64, elements: !51)
!239 = !DIDerivedType(tag: DW_TAG_member, name: "elem_count", scope: !1, file: !1, baseType: !89, size: 32, align: 32, offset: 64)
!240 = !DIDerivedType(tag: DW_TAG_member, name: "generic", scope: !1, file: !1, baseType: !241, size: 128, align: 64)
!241 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_GenericType", scope: !1, file: !1, size: 128, elements: !242)
!242 = !{!227}
!243 = !DILocation(line: 127, scope: !170)
!244 = !DILocalVariable(name: "b", scope: !170, file: !1, line: 127, type: !81)
!245 = !DILocalVariable(name: "info", arg: 1, scope: !170, file: !1, line: 127, type: !173)
!246 = !DILocation(line: 128, scope: !170)
!247 = !DILocation(line: 130, scope: !170)
!248 = !DILocation(line: 133, scope: !170)
!249 = !DILocation(line: 136, scope: !170)
!250 = !DILocation(line: 137, scope: !170)
!251 = !DILocalVariable(name: "args", scope: !170, file: !1, line: 137, type: !207)
!252 = !DILocation(line: 138, scope: !170)
!253 = !DILocalVariable(name: "arg", scope: !170, file: !1, line: 138, type: !200)
!254 = !DILocalVariable(name: "i", scope: !170, file: !1, line: 138, type: !86)
!255 = !DILocation(line: 139, scope: !170)
!256 = !DILocation(line: 140, scope: !170)
!257 = !DILocation(line: 141, scope: !170)
!258 = !DILocation(line: 144, scope: !170)
!259 = !DILocation(line: 145, scope: !170)
!260 = !DILocation(line: 146, scope: !170)
!261 = !DILocation(line: 147, scope: !170)
!262 = !DILocation(line: 151, scope: !170)
!263 = !DILocation(line: 154, scope: !170)
!264 = !DILocation(line: 155, scope: !170)
!265 = !DILocation(line: 158, scope: !170)
!266 = !DILocation(line: 159, scope: !170)
!267 = !DILocation(line: 162, scope: !170)
!268 = !DILocation(line: 163, scope: !170)
!269 = !DILocation(line: 166, scope: !170)
!270 = !DILocation(line: 169, scope: !170)
!271 = !DILocation(line: 172, scope: !170)
!272 = !DILocation(line: 176, scope: !170)
!273 = distinct !DISubprogram(name: "print_type", linkageName: "__io_print_type", scope: !1, file: !1, line: 178, type: !274, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!274 = !DISubroutineType(types: !275)
!275 = !{null, !81, !276}
!276 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_Arg", scope: !1, file: !1, size: 128, elements: !277)
!277 = !{!219, !278}
!278 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !1, file: !1, baseType: !279, size: 64, align: 64, offset: 64)
!279 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!280 = !DILocation(line: 178, scope: !273)
!281 = !DILocalVariable(name: "b", scope: !273, file: !1, line: 178, type: !81)
!282 = !DILocalVariable(name: "arg", arg: 1, scope: !273, file: !1, line: 178, type: !276)
!283 = !DILocation(line: 179, scope: !273)
!284 = !DILocalVariable(name: "t", scope: !273, file: !1, line: 179, type: !173)
!285 = !DILocation(line: 180, scope: !273)
!286 = !DILocation(line: 184, scope: !273)
!287 = !DILocalVariable(name: "basic", scope: !273, file: !1, line: 184, type: !181)
!288 = !DILocation(line: 185, scope: !273)
!289 = !DILocation(line: 186, scope: !273)
!290 = !DILocation(line: 187, scope: !273)
!291 = !DILocation(line: 189, scope: !273)
!292 = !DILocation(line: 192, scope: !273)
!293 = !DILocation(line: 193, scope: !273)
!294 = !DILocalVariable(name: "str", scope: !273, file: !1, line: 193, type: !90)
!295 = !DILocation(line: 194, scope: !273)
!296 = !DILocation(line: 203, scope: !273)
!297 = !DILocation(line: 204, scope: !273)
!298 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 204, type: !108)
!299 = !DILocation(line: 205, scope: !273)
!300 = !DILocation(line: 207, scope: !273)
!301 = !DILocation(line: 208, scope: !273)
!302 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 208, type: !108)
!303 = !DILocation(line: 209, scope: !273)
!304 = !DILocation(line: 211, scope: !273)
!305 = !DILocation(line: 212, scope: !273)
!306 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 212, type: !108)
!307 = !DILocation(line: 213, scope: !273)
!308 = !DILocation(line: 215, scope: !273)
!309 = !DILocation(line: 216, scope: !273)
!310 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 216, type: !108)
!311 = !DILocation(line: 217, scope: !273)
!312 = !DILocation(line: 219, scope: !273)
!313 = !DILocation(line: 220, scope: !273)
!314 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 220, type: !86)
!315 = !DILocation(line: 221, scope: !273)
!316 = !DILocation(line: 223, scope: !273)
!317 = !DILocation(line: 224, scope: !273)
!318 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 224, type: !86)
!319 = !DILocation(line: 225, scope: !273)
!320 = !DILocation(line: 227, scope: !273)
!321 = !DILocation(line: 228, scope: !273)
!322 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 228, type: !86)
!323 = !DILocation(line: 229, scope: !273)
!324 = !DILocation(line: 231, scope: !273)
!325 = !DILocation(line: 232, scope: !273)
!326 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 232, type: !86)
!327 = !DILocation(line: 233, scope: !273)
!328 = !DILocation(line: 235, scope: !273)
!329 = !DILocation(line: 236, scope: !273)
!330 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 236, type: !86)
!331 = !DILocation(line: 237, scope: !273)
!332 = !DILocation(line: 239, scope: !273)
!333 = !DILocation(line: 240, scope: !273)
!334 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 240, type: !108)
!335 = !DILocation(line: 241, scope: !273)
!336 = !DILocation(line: 243, scope: !273)
!337 = !DILocation(line: 244, scope: !273)
!338 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 244, type: !339)
!339 = !DIBasicType(name: "f32", size: 32, encoding: DW_ATE_float)
!340 = !DILocation(line: 245, scope: !273)
!341 = !DILocation(line: 247, scope: !273)
!342 = !DILocation(line: 248, scope: !273)
!343 = !DILocalVariable(name: "num", scope: !273, file: !1, line: 248, type: !344)
!344 = !DIBasicType(name: "f64", size: 64, encoding: DW_ATE_float)
!345 = !DILocation(line: 249, scope: !273)
!346 = !DILocation(line: 251, scope: !273)
!347 = !DILocation(line: 252, scope: !273)
!348 = !DILocalVariable(name: "pt", scope: !273, file: !1, line: 252, type: !200)
!349 = !DILocation(line: 253, scope: !273)
!350 = !DILocalVariable(name: "info", scope: !273, file: !1, line: 253, type: !173)
!351 = !DILocation(line: 254, scope: !273)
!352 = !DILocation(line: 257, scope: !273)
!353 = !DILocation(line: 263, scope: !273)
!354 = !DILocalVariable(name: "st", scope: !273, file: !1, line: 263, type: !189)
!355 = !DILocation(line: 264, scope: !273)
!356 = !DILocation(line: 265, scope: !273)
!357 = !DILocation(line: 266, scope: !273)
!358 = !DILocalVariable(name: "n", scope: !273, file: !1, line: 266, type: !86)
!359 = !DILocation(line: 267, scope: !273)
!360 = !DILocalVariable(name: "m", scope: !273, file: !1, line: 267, type: !361)
!361 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_StructMember", scope: !1, file: !1, size: 192, elements: !362)
!362 = !{!227, !363}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !1, file: !1, baseType: !200, size: 64, align: 64, offset: 128)
!364 = !DILocation(line: 268, scope: !273)
!365 = !DILocation(line: 269, scope: !273)
!366 = !DILocation(line: 270, scope: !273)
!367 = !DILocation(line: 271, scope: !273)
!368 = !DILocalVariable(name: "ptr", scope: !273, file: !1, line: 271, type: !93)
!369 = !DILocation(line: 272, scope: !273)
!370 = !DILocalVariable(name: "offset", scope: !273, file: !1, line: 272, type: !86)
!371 = !DILocation(line: 273, scope: !273)
!372 = !DILocalVariable(name: "mem_arg", scope: !273, file: !1, line: 273, type: !276)
!373 = !DILocation(line: 277, scope: !273)
!374 = !DILocation(line: 279, scope: !273)
!375 = !DILocation(line: 280, scope: !273)
!376 = !DILocation(line: 281, scope: !273)
!377 = !DILocation(line: 284, scope: !273)
!378 = !DILocation(line: 299, scope: !273)
!379 = distinct !DISubprogram(name: "builder_to_string", linkageName: "__io_builder_to_string", scope: !1, file: !1, line: 301, type: !380, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!380 = !DISubroutineType(types: !381)
!381 = !{!382, !81}
!382 = !DICompositeType(tag: DW_TAG_structure_type, scope: !1, file: !1, size: 128, align: 64, elements: !383)
!383 = !{!384, !385}
!384 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1, file: !1, baseType: !86, size: 64, align: 64)
!385 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !93, size: 64, align: 64, offset: 64)
!386 = !DILocation(line: 301, scope: !379)
!387 = !DILocalVariable(name: "b_in", scope: !379, file: !1, line: 301, type: !81)
!388 = !DILocation(line: 302, scope: !379)
!389 = !DILocalVariable(name: "b", scope: !379, file: !1, line: 302, type: !81)
!390 = !DILocation(line: 303, scope: !379)
!391 = !DILocalVariable(name: "alloc", scope: !379, file: !1, line: 303, type: !392)
!392 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !1, file: !1, size: 192, elements: !393)
!393 = !{!394, !400, !404}
!394 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1, file: !1, baseType: !395, size: 64, align: 64)
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *__mem_Allocator) -> ?*", baseType: !396, size: 64, align: 64, dwarfAddressSpace: 0)
!396 = !DISubroutineType(types: !397)
!397 = !{!279, !86, !398}
!398 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_Allocator", baseType: !399, size: 64, align: 64, dwarfAddressSpace: 0)
!399 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !83, file: !83, size: 192, align: 64, flags: DIFlagFwdDecl)
!400 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1, file: !1, baseType: !401, size: 64, align: 64, offset: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *__mem_Allocator)", baseType: !402, size: 64, align: 64, dwarfAddressSpace: 0)
!402 = !DISubroutineType(types: !403)
!403 = !{null, !279, !398}
!404 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !279, size: 64, align: 64, offset: 128)
!405 = !DILocation(line: 304, scope: !379)
!406 = !DILocalVariable(name: "res", scope: !379, file: !1, line: 304, type: !382)
!407 = !DILocation(line: 306, scope: !379)
!408 = !DILocalVariable(name: "i", scope: !379, file: !1, line: 306, type: !86)
!409 = !DILocation(line: 307, scope: !379)
!410 = !DILocalVariable(name: "ptr", scope: !379, file: !1, line: 307, type: !93)
!411 = !DILocation(line: 308, scope: !379)
!412 = !DILocation(line: 309, scope: !379)
!413 = !DILocation(line: 310, scope: !379)
!414 = !DILocation(line: 313, scope: !379)
!415 = !DILocalVariable(name: "size", scope: !379, file: !1, line: 313, type: !86)
!416 = !DILocation(line: 314, scope: !379)
!417 = !DILocalVariable(name: "j", scope: !379, file: !1, line: 314, type: !86)
!418 = !DILocation(line: 315, scope: !379)
!419 = !DILocation(line: 319, scope: !379)
!420 = distinct !DISubprogram(name: "print_type_with_formatter", linkageName: "__io_print_type_with_formatter", scope: !1, file: !1, line: 322, type: !421, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!421 = !DISubroutineType(types: !422)
!422 = !{null, !81, !89, !276}
!423 = !DILocation(line: 322, scope: !420)
!424 = !DILocalVariable(name: "b", scope: !420, file: !1, line: 322, type: !81)
!425 = !DILocalVariable(name: "c", arg: 1, scope: !420, file: !1, line: 322, type: !89)
!426 = !DILocalVariable(name: "arg", arg: 2, scope: !420, file: !1, line: 322, type: !276)
!427 = !DILocation(line: 323, scope: !420)
!428 = !DILocalVariable(name: "t", scope: !420, file: !1, line: 323, type: !173)
!429 = !DILocation(line: 324, scope: !420)
!430 = !DILocation(line: 325, scope: !420)
!431 = !DILocalVariable(name: "str", scope: !420, file: !1, line: 325, type: !93)
!432 = !DILocation(line: 326, scope: !420)
!433 = !DILocalVariable(name: "i", scope: !420, file: !1, line: 326, type: !86)
!434 = !DILocation(line: 327, scope: !420)
!435 = !DILocation(line: 330, scope: !420)
!436 = !DILocation(line: 331, scope: !420)
!437 = !DILocation(line: 332, scope: !420)
!438 = !DILocation(line: 334, scope: !420)
!439 = distinct !DISubprogram(name: "__internal_print", linkageName: "__io___internal_print", scope: !1, file: !1, line: 336, type: !440, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!440 = !DISubroutineType(types: !441)
!441 = !{!82, !90, !442}
!442 = !DICompositeType(tag: DW_TAG_structure_type, scope: !83, file: !83, size: 128, align: 64, elements: !443)
!443 = !{!85, !444}
!444 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !83, file: !83, baseType: !445, size: 64, align: 64, offset: 64)
!445 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__init_Arg", baseType: !446, size: 64, align: 64, dwarfAddressSpace: 0)
!446 = !DICompositeType(tag: DW_TAG_structure_type, name: "__init_Arg", scope: !83, file: !83, size: 128, elements: !447)
!447 = !{!448, !449}
!448 = !DIDerivedType(tag: DW_TAG_member, name: "t", scope: !83, file: !83, baseType: !200, size: 64, align: 64)
!449 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !83, file: !83, baseType: !279, size: 64, align: 64, offset: 64)
!450 = !DILocation(line: 336, scope: !439)
!451 = !DILocalVariable(name: "fmt", scope: !439, file: !1, line: 336, type: !90)
!452 = !DILocalVariable(name: "args", arg: 1, scope: !439, file: !1, line: 336, type: !442)
!453 = !DILocation(line: 337, scope: !439)
!454 = !DILocalVariable(name: "alloc", scope: !439, file: !1, line: 337, type: !392)
!455 = !DILocation(line: 338, scope: !439)
!456 = !DILocalVariable(name: "builder", scope: !439, file: !1, line: 338, type: !82)
!457 = !DILocation(line: 339, scope: !439)
!458 = !DILocalVariable(name: "arg_count", scope: !439, file: !1, line: 339, type: !86)
!459 = !DILocation(line: 340, scope: !439)
!460 = !DILocalVariable(name: "need_to_print_arg", scope: !439, file: !1, line: 340, type: !151)
!461 = !DILocation(line: 341, scope: !439)
!462 = !DILocalVariable(name: "c", scope: !439, file: !1, line: 341, type: !89)
!463 = !DILocalVariable(name: "i", scope: !439, file: !1, line: 341, type: !86)
!464 = !DILocation(line: 342, scope: !439)
!465 = !DILocation(line: 343, scope: !439)
!466 = !DILocation(line: 345, scope: !439)
!467 = !DILocation(line: 346, scope: !439)
!468 = !DILocalVariable(name: "arg", scope: !439, file: !1, line: 346, type: !276)
!469 = !DILocation(line: 347, scope: !439)
!470 = !DILocation(line: 348, scope: !439)
!471 = !DILocation(line: 349, scope: !439)
!472 = !DILocation(line: 351, scope: !439)
!473 = !DILocation(line: 356, scope: !439)
!474 = !DILocation(line: 357, scope: !439)
!475 = !DILocalVariable(name: "arg", scope: !439, file: !1, line: 357, type: !276)
!476 = !DILocation(line: 358, scope: !439)
!477 = !DILocation(line: 359, scope: !439)
!478 = !DILocation(line: 360, scope: !439)
!479 = !DILocation(line: 363, scope: !439)
!480 = distinct !DISubprogram(name: "vsprint", linkageName: "__io_vsprint", scope: !1, file: !1, line: 366, type: !481, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!481 = !DISubroutineType(types: !482)
!482 = !{!90, !90, !442}
!483 = !DILocation(line: 366, scope: !480)
!484 = !DILocalVariable(name: "str", scope: !480, file: !1, line: 366, type: !90)
!485 = !DILocalVariable(name: "args", arg: 1, scope: !480, file: !1, line: 366, type: !442)
!486 = !DILocation(line: 367, scope: !480)
!487 = !DILocalVariable(name: "builder", scope: !480, file: !1, line: 367, type: !82)
!488 = !DILocation(line: 368, scope: !480)
!489 = !DILocalVariable(name: "res", scope: !480, file: !1, line: 368, type: !382)
!490 = !DILocation(line: 369, scope: !480)
!491 = !DILocation(line: 370, scope: !480)
!492 = distinct !DISubprogram(name: "sprint", linkageName: "__io_sprint", scope: !1, file: !1, line: 373, type: !493, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!493 = !DISubroutineType(types: !494)
!494 = !{!90, !90}
!495 = !DILocation(line: 373, scope: !492)
!496 = !DILocalVariable(name: "str", scope: !492, file: !1, line: 373, type: !90)
!497 = !DILocalVariable(name: "args", arg: 1, scope: !492, file: !1, line: 373, type: !442)
!498 = !DILocation(line: 374, scope: !492)
!499 = !DILocalVariable(name: "builder", scope: !492, file: !1, line: 374, type: !82)
!500 = !DILocation(line: 375, scope: !492)
!501 = !DILocalVariable(name: "res", scope: !492, file: !1, line: 375, type: !382)
!502 = !DILocation(line: 376, scope: !492)
!503 = !DILocation(line: 377, scope: !492)
!504 = distinct !DISubprogram(name: "print", linkageName: "__io_print", scope: !1, file: !1, line: 380, type: !505, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!505 = !DISubroutineType(types: !506)
!506 = !{null, !90}
!507 = !DILocation(line: 380, scope: !504)
!508 = !DILocalVariable(name: "str", scope: !504, file: !1, line: 380, type: !90)
!509 = !DILocalVariable(name: "args", arg: 1, scope: !504, file: !1, line: 380, type: !442)
!510 = !DILocation(line: 381, scope: !504)
!511 = !DILocalVariable(name: "builder", scope: !504, file: !1, line: 381, type: !82)
!512 = !DILocation(line: 382, scope: !504)
!513 = !DILocalVariable(name: "res", scope: !504, file: !1, line: 382, type: !382)
!514 = !DILocation(line: 383, scope: !504)
!515 = !DILocation(line: 384, scope: !504)
!516 = !DILocation(line: 385, scope: !504)
!517 = !DILocation(line: 386, scope: !504)
!518 = distinct !DISubprogram(name: "println", linkageName: "__io_println", scope: !1, file: !1, line: 388, type: !505, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!519 = !DILocation(line: 388, scope: !518)
!520 = !DILocalVariable(name: "str", scope: !518, file: !1, line: 388, type: !90)
!521 = !DILocalVariable(name: "args", arg: 1, scope: !518, file: !1, line: 388, type: !442)
!522 = !DILocation(line: 389, scope: !518)
!523 = !DILocalVariable(name: "builder", scope: !518, file: !1, line: 389, type: !82)
!524 = !DILocation(line: 390, scope: !518)
!525 = !DILocation(line: 391, scope: !518)
!526 = !DILocalVariable(name: "res", scope: !518, file: !1, line: 391, type: !382)
!527 = !DILocation(line: 392, scope: !518)
!528 = !DILocation(line: 393, scope: !518)
!529 = !DILocation(line: 394, scope: !518)
!530 = !DILocation(line: 396, scope: !518)
!531 = distinct !DISubprogram(name: "readln", linkageName: "__io_readln", scope: !1, file: !1, line: 398, type: !532, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!532 = !DISubroutineType(types: !533)
!533 = !{!90, !398, !89}
!534 = !DILocation(line: 398, scope: !531)
!535 = !DILocalVariable(name: "alloc", scope: !531, file: !1, line: 398, type: !398)
!536 = !DILocalVariable(name: "max", arg: 1, scope: !531, file: !1, line: 398, type: !89)
!537 = !DILocation(line: 399, scope: !531)
!538 = !DILocalVariable(name: "mem", scope: !531, file: !1, line: 399, type: !279)
!539 = !DILocation(line: 400, scope: !531)
!540 = !DILocation(line: 401, scope: !531)
!541 = !DILocation(line: 404, scope: !531)
!542 = !DILocalVariable(name: "buf", scope: !531, file: !1, line: 404, type: !93)
!543 = !DILocation(line: 405, scope: !531)
!544 = !DILocalVariable(name: "count", scope: !531, file: !1, line: 405, type: !89)
!545 = !DILocation(line: 406, scope: !531)
!546 = !DILocation(line: 407, scope: !531)
!547 = !DILocalVariable(name: "res", scope: !531, file: !1, line: 410, type: !90)
!548 = !DILocation(line: 410, scope: !531)
!549 = !DILocation(line: 411, scope: !531)
!550 = !DILocation(line: 412, scope: !531)
!551 = !DILocation(line: 414, scope: !531)
!552 = distinct !DISubprogram(name: "get_next", linkageName: "__io_get_next", scope: !1, file: !1, line: 417, type: !553, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!553 = !DISubroutineType(types: !554)
!554 = !{!89, !93}
!555 = !DILocation(line: 417, scope: !552)
!556 = !DILocalVariable(name: "curr", scope: !552, file: !1, line: 417, type: !93)
!557 = !DILocation(line: 418, scope: !552)
!558 = !DILocalVariable(name: "scan", scope: !552, file: !1, line: 418, type: !93)
!559 = !DILocation(line: 419, scope: !552)
!560 = !DILocalVariable(name: "codepoint", scope: !552, file: !1, line: 419, type: !89)
!561 = !DILocation(line: 420, scope: !552)
!562 = !DILocation(line: 421, scope: !552)
!563 = !DILocation(line: 422, scope: !552)
!564 = !DILocation(line: 423, scope: !552)
!565 = !DILocation(line: 425, scope: !552)
!566 = !DILocation(line: 428, scope: !552)
!567 = distinct !DISubprogram(name: "format_float:type_*[]u32_f32_i32_:void", linkageName: "__io_format_float:type_*[]u32_f32_i32_:void", scope: !1, file: !1, line: 67, type: !568, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!568 = !DISubroutineType(types: !569)
!569 = !{null, !200, !81, !339, !570}
!570 = !DIBasicType(name: "i32", size: 32, encoding: DW_ATE_signed)
!571 = !DILocation(line: 67, scope: !567)
!572 = !DILocalVariable(name: "ft", scope: !567, file: !1, line: 67, type: !200)
!573 = !DILocalVariable(name: "b", arg: 1, scope: !567, file: !1, line: 67, type: !81)
!574 = !DILocalVariable(name: "num_in", arg: 2, scope: !567, file: !1, line: 67, type: !339)
!575 = !DILocalVariable(name: "round_at", arg: 3, scope: !567, file: !1, line: 67, type: !570)
!576 = !DILocation(line: 68, scope: !567)
!577 = !DILocalVariable(name: "temp", scope: !567, file: !1, line: 68, type: !114)
!578 = !DILocation(line: 69, scope: !567)
!579 = !DILocalVariable(name: "count", scope: !567, file: !1, line: 69, type: !86)
!580 = !DILocation(line: 70, scope: !567)
!581 = !DILocalVariable(name: "num", scope: !567, file: !1, line: 70, type: !339)
!582 = !DILocation(line: 72, scope: !567)
!583 = !DILocation(line: 73, scope: !567)
!584 = !DILocation(line: 76, scope: !567)
!585 = !DILocation(line: 77, scope: !567)
!586 = !DILocation(line: 78, scope: !567)
!587 = !DILocation(line: 81, scope: !567)
!588 = !DILocalVariable(name: "is_neg", scope: !567, file: !1, line: 81, type: !151)
!589 = !DILocation(line: 82, scope: !567)
!590 = !DILocation(line: 83, scope: !567)
!591 = !DILocation(line: 84, scope: !567)
!592 = !DILocation(line: 87, scope: !567)
!593 = !DILocation(line: 88, scope: !567)
!594 = !DILocalVariable(name: "int_val", scope: !567, file: !1, line: 88, type: !570)
!595 = !DILocation(line: 89, scope: !567)
!596 = !DILocalVariable(name: "dec", scope: !567, file: !1, line: 89, type: !570)
!597 = !DILocation(line: 91, scope: !567)
!598 = !DILocation(line: 92, scope: !567)
!599 = !DILocation(line: 93, scope: !567)
!600 = !DILocation(line: 96, scope: !567)
!601 = !DILocation(line: 97, scope: !567)
!602 = !DILocation(line: 98, scope: !567)
!603 = !DILocation(line: 99, scope: !567)
!604 = !DILocation(line: 103, scope: !567)
!605 = !DILocation(line: 104, scope: !567)
!606 = !DILocation(line: 106, scope: !567)
!607 = !DILocation(line: 107, scope: !567)
!608 = !DILocation(line: 108, scope: !567)
!609 = !DILocation(line: 110, scope: !567)
!610 = !DILocation(line: 111, scope: !567)
!611 = !DILocation(line: 112, scope: !567)
!612 = !DILocation(line: 113, scope: !567)
!613 = !DILocation(line: 118, scope: !567)
!614 = !DILocation(line: 119, scope: !567)
!615 = !DILocation(line: 122, scope: !567)
!616 = !DILocalVariable(name: "i", scope: !567, file: !1, line: 122, type: !86)
!617 = !DILocation(line: 123, scope: !567)
!618 = !DILocation(line: 125, scope: !567)
!619 = distinct !DISubprogram(name: "format_float:type_*[]u32_f64_i32_:void", linkageName: "__io_format_float:type_*[]u32_f64_i32_:void", scope: !1, file: !1, line: 67, type: !620, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !96)
!620 = !DISubroutineType(types: !621)
!621 = !{null, !200, !81, !344, !570}
!622 = !DILocation(line: 67, scope: !619)
!623 = !DILocalVariable(name: "ft", scope: !619, file: !1, line: 67, type: !200)
!624 = !DILocalVariable(name: "b", arg: 1, scope: !619, file: !1, line: 67, type: !81)
!625 = !DILocalVariable(name: "num_in", arg: 2, scope: !619, file: !1, line: 67, type: !344)
!626 = !DILocalVariable(name: "round_at", arg: 3, scope: !619, file: !1, line: 67, type: !570)
!627 = !DILocation(line: 68, scope: !619)
!628 = !DILocalVariable(name: "temp", scope: !619, file: !1, line: 68, type: !114)
!629 = !DILocation(line: 69, scope: !619)
!630 = !DILocalVariable(name: "count", scope: !619, file: !1, line: 69, type: !86)
!631 = !DILocation(line: 70, scope: !619)
!632 = !DILocalVariable(name: "num", scope: !619, file: !1, line: 70, type: !344)
!633 = !DILocation(line: 72, scope: !619)
!634 = !DILocation(line: 73, scope: !619)
!635 = !DILocation(line: 76, scope: !619)
!636 = !DILocation(line: 77, scope: !619)
!637 = !DILocation(line: 78, scope: !619)
!638 = !DILocation(line: 81, scope: !619)
!639 = !DILocalVariable(name: "is_neg", scope: !619, file: !1, line: 81, type: !151)
!640 = !DILocation(line: 82, scope: !619)
!641 = !DILocation(line: 83, scope: !619)
!642 = !DILocation(line: 84, scope: !619)
!643 = !DILocation(line: 87, scope: !619)
!644 = !DILocation(line: 88, scope: !619)
!645 = !DILocalVariable(name: "int_val", scope: !619, file: !1, line: 88, type: !570)
!646 = !DILocation(line: 89, scope: !619)
!647 = !DILocalVariable(name: "dec", scope: !619, file: !1, line: 89, type: !570)
!648 = !DILocation(line: 91, scope: !619)
!649 = !DILocation(line: 92, scope: !619)
!650 = !DILocation(line: 93, scope: !619)
!651 = !DILocation(line: 96, scope: !619)
!652 = !DILocation(line: 97, scope: !619)
!653 = !DILocation(line: 98, scope: !619)
!654 = !DILocation(line: 99, scope: !619)
!655 = !DILocation(line: 103, scope: !619)
!656 = !DILocation(line: 104, scope: !619)
!657 = !DILocation(line: 106, scope: !619)
!658 = !DILocation(line: 107, scope: !619)
!659 = !DILocation(line: 108, scope: !619)
!660 = !DILocation(line: 110, scope: !619)
!661 = !DILocation(line: 111, scope: !619)
!662 = !DILocation(line: 112, scope: !619)
!663 = !DILocation(line: 113, scope: !619)
!664 = !DILocation(line: 118, scope: !619)
!665 = !DILocation(line: 119, scope: !619)
!666 = !DILocation(line: 122, scope: !619)
!667 = !DILocalVariable(name: "i", scope: !619, file: !1, line: 122, type: !86)
!668 = !DILocation(line: 123, scope: !619)
!669 = !DILocation(line: 125, scope: !619)
