; ModuleID = 'mem'
source_filename = "mem.rcp"
target datalayout = "e-m:e-i8:8:32-i16:16:32-i64:64-i128:128-n32:64-S128"
target triple = "arm64v8a-unknown-linux-androideabi34"

%slice.374 = type { i64, ptr }
%__mem_Allocator.330 = type { ptr, ptr, ptr }
%string.315 = type { ptr, i64 }
%__mem_ScratchContext.331 = type { ptr, ptr }
%slice.375 = type { i64, ptr }

@__main_LogTag = external global ptr
@__main_GLOBAL = external global i64
@__pthread_DETACHED = external global i32
@__init_INVALID_TYPE = external global i64
@__init_type_table = external global %slice.374
@__os_stdin = external global i64
@__os_stdout = external global i64
@__os_stderr = external global i64
@__os_SYS_read = external global i64
@__os_SYS_write = external global i64
@__os_SYS_open = external global i64
@__os_SYS_mmap = external global i64
@__os_SYS_munmap = external global i64
@__os_SYS_exit = external global i64
@__os_PROT_READ = external global i64
@__os_PROT_WRITE = external global i64
@__os_PROT_EXEC = external global i64
@__os_PROT_NONE = external global i64
@__os_MAP_SHARED = external global i64
@__os_MAP_PRIVATE = external global i64
@__os_MAP_ANONYMOUS = external global i64
@__os_MAP_ANON = external global i64
@__os_MAP_NORESERVE = external global i64
@__str_CONTINUE_BIT = external global i8
@0 = private unnamed_addr constant [36 x i8] c"Invalid allocator for arena_alloc()\00", align 1
@1 = private unnamed_addr constant [50 x i8] c"Calling arena_alloc() with an out of memory arena\00", align 1
@2 = private unnamed_addr constant [40 x i8] c"Invalid allocator for destroy_scratch()\00", align 1

define void @__mem___GlobalInitializerFunction_0() {
block_0:
  ret void
}

declare ptr @__main_thread_start(ptr)

declare void @__main_warn(ptr, ptr)

declare void @__main_fatal(ptr, ptr)

declare void @ANativeActivity_onCreate(ptr, ptr, i64)

declare i32 @__main_main()

declare i32 @__android_log_write(i32, ptr, ptr)

declare i32 @__android_log_print(i32, ptr, ptr, ...)

declare i32 @pthread_create(ptr, ptr, ptr, ptr)

declare i32 @pthread_attr_init(ptr)

declare i32 @pthread_attr_setdetachstate(ptr, i32)

declare void @__init_global_initializers()

declare i64 @__init_get_struct_alignment(i64)

declare i64 @__init_get_type_alignment(i64)

declare i64 @__init_get_basic_type_size(ptr)

declare i64 @__init_get_struct_size(i64)

declare i64 @__init_get_type_size(i64)

declare i64 @__init_get_struct_member_offset(ptr, i64)

declare i32 @__main_main.1()

declare i32 @main()

declare void @__os_assert(i1, ptr)

declare i64 @_system_call(i64, ...)

declare void @__os_print(ptr, i32)

declare void @__os_abort()

declare ptr @__os_alloc(i64)

declare void @__os_free(ptr)

declare i32 @__os_read_stdin_line(ptr, i32)

declare void @__io_push_string(ptr, ptr)

declare void @__io_format_uint(ptr, i64)

declare void @__io_format_int(ptr, i64)

declare void @__io_print_typetype(ptr, ptr)

declare void @__io_print_type(ptr, ptr)

declare void @__io_builder_to_string(ptr, ptr)

declare void @__io_print_type_with_formatter(ptr, i32, ptr)

declare void @__io___internal_print(ptr, ptr, ptr)

declare void @__io_vsprint(ptr, ptr, ptr)

declare void @__io_sprint(ptr, ptr, ptr)

declare void @__io_print(ptr, ptr)

declare void @__io_println(ptr, ptr)

declare void @__io_readln(ptr, ptr, i32)

declare i32 @__io_get_next(ptr)

declare void @"__io_format_float:type_*[]u32_f32_i32_:void"(i64, ptr, float, i32)

declare void @"__io_format_float:type_*[]u32_f64_i32_:void"(i64, ptr, double, i32)

define ptr @__mem_generic_alloc(i64 %0, ptr %1) !dbg !78 {
block_0:
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  store i64 %0, ptr %2, align 8, !dbg !87
  call void @llvm.dbg.value(metadata ptr %2, metadata !88, metadata !DIExpression()), !dbg !87
  store ptr %1, ptr %3, align 8, !dbg !87
  call void @llvm.dbg.value(metadata ptr %3, metadata !89, metadata !DIExpression()), !dbg !87
  %4 = load i64, ptr %2, align 8, !dbg !90
  %5 = call ptr @__os_alloc(i64 %4), !dbg !90
  ret ptr %5, !dbg !90
}

define void @__mem_generic_free(ptr %0, ptr %1) !dbg !91 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !94
  call void @llvm.dbg.value(metadata ptr %2, metadata !95, metadata !DIExpression()), !dbg !94
  store ptr %1, ptr %3, align 8, !dbg !94
  call void @llvm.dbg.value(metadata ptr %3, metadata !96, metadata !DIExpression()), !dbg !94
  %4 = load ptr, ptr %2, align 8, !dbg !97
  call void @__os_free(ptr %4), !dbg !97
  ret void, !dbg !98
}

define void @__mem_create_generic_allocator(ptr %0) !dbg !99 {
block_0:
  %1 = alloca %__mem_Allocator.330, align 8
  %2 = alloca %__mem_Allocator.330, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 24, i1 false)
  %3 = getelementptr inbounds %__mem_Allocator.330, ptr %1, i32 0, i32 0, !dbg !109
  store ptr @__mem_generic_alloc, ptr %3, align 8, !dbg !109
  %4 = getelementptr inbounds %__mem_Allocator.330, ptr %1, i32 0, i32 1, !dbg !109
  store ptr @__mem_generic_free, ptr %4, align 8, !dbg !109
  %5 = getelementptr inbounds %__mem_Allocator.330, ptr %1, i32 0, i32 2, !dbg !109
  store ptr null, ptr %5, align 8, !dbg !109
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %2, ptr align 8 %1, i64 24, i1 false), !dbg !109
  call void @llvm.dbg.declare(metadata ptr %2, metadata !110, metadata !DIExpression()), !dbg !109
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %2, i64 24, i1 false), !dbg !111
  ret void, !dbg !111
}

define ptr @__mem_arena_alloc(i64 %0, ptr %1) !dbg !112 {
block_0:
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  %4 = alloca ptr, align 8
  %5 = alloca %string.315, align 8
  %6 = alloca %string.315, align 8
  %7 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 8, i1 false)
  store i64 %0, ptr %2, align 8, !dbg !113
  call void @llvm.dbg.value(metadata ptr %2, metadata !114, metadata !DIExpression()), !dbg !113
  store ptr %1, ptr %3, align 8, !dbg !113
  call void @llvm.dbg.value(metadata ptr %3, metadata !115, metadata !DIExpression()), !dbg !113
  %8 = load ptr, ptr %3, align 8, !dbg !116
  %9 = getelementptr inbounds %__mem_Allocator.330, ptr %8, i32 0, i32 2, !dbg !116
  %10 = load ptr, ptr %9, align 8, !dbg !116
  store ptr %10, ptr %4, align 8, !dbg !116
  call void @llvm.dbg.declare(metadata ptr %4, metadata !117, metadata !DIExpression()), !dbg !116
  %11 = load ptr, ptr %4, align 8, !dbg !125
  %12 = icmp ne ptr %11, null, !dbg !125
  %13 = alloca %string.315, align 8, !dbg !125
  %String = getelementptr inbounds %string.315, ptr %13, i32 0, i32 0, !dbg !125
  %Size = getelementptr inbounds %string.315, ptr %13, i32 0, i32 1, !dbg !125
  store ptr @0, ptr %String, align 8, !dbg !125
  store i64 35, ptr %Size, align 8, !dbg !125
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %13, i64 16, i1 false), !dbg !125
  call void @__os_assert(i1 %12, ptr %5), !dbg !125
  %14 = load ptr, ptr %4, align 8, !dbg !126
  %15 = getelementptr inbounds %__mem_ScratchContext.331, ptr %14, i32 0, i32 1, !dbg !126
  %16 = load ptr, ptr %15, align 8, !dbg !126
  %17 = load ptr, ptr %4, align 8, !dbg !126
  %18 = getelementptr inbounds %__mem_ScratchContext.331, ptr %17, i32 0, i32 0, !dbg !126
  %19 = load ptr, ptr %18, align 8, !dbg !126
  %20 = icmp sgt ptr %16, %19, !dbg !126
  %21 = alloca %string.315, align 8, !dbg !126
  %String1 = getelementptr inbounds %string.315, ptr %21, i32 0, i32 0, !dbg !126
  %Size2 = getelementptr inbounds %string.315, ptr %21, i32 0, i32 1, !dbg !126
  store ptr @1, ptr %String1, align 8, !dbg !126
  store i64 49, ptr %Size2, align 8, !dbg !126
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %6, ptr align 8 %21, i64 16, i1 false), !dbg !126
  call void @__os_assert(i1 %20, ptr %6), !dbg !126
  %22 = load ptr, ptr %4, align 8, !dbg !127
  %23 = getelementptr inbounds %__mem_ScratchContext.331, ptr %22, i32 0, i32 0, !dbg !127
  %24 = load ptr, ptr %23, align 8, !dbg !127
  store ptr %24, ptr %7, align 8, !dbg !127
  call void @llvm.dbg.declare(metadata ptr %7, metadata !128, metadata !DIExpression()), !dbg !127
  %25 = load ptr, ptr %4, align 8, !dbg !129
  %26 = getelementptr inbounds %__mem_ScratchContext.331, ptr %25, i32 0, i32 0, !dbg !129
  %27 = load ptr, ptr %4, align 8, !dbg !129
  %28 = getelementptr inbounds %__mem_ScratchContext.331, ptr %27, i32 0, i32 0, !dbg !129
  %29 = load ptr, ptr %28, align 8, !dbg !129
  %30 = load i64, ptr %2, align 8, !dbg !129
  %31 = getelementptr i8, ptr %29, i64 %30, !dbg !129
  store ptr %31, ptr %26, align 8, !dbg !129
  %32 = load ptr, ptr %7, align 8, !dbg !130
  ret ptr %32, !dbg !130
}

define void @__mem_no_free(ptr %0, ptr %1) !dbg !131 {
block_0:
  %2 = alloca ptr, align 8
  %3 = alloca ptr, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  store ptr %0, ptr %2, align 8, !dbg !132
  call void @llvm.dbg.value(metadata ptr %2, metadata !133, metadata !DIExpression()), !dbg !132
  store ptr %1, ptr %3, align 8, !dbg !132
  call void @llvm.dbg.value(metadata ptr %3, metadata !134, metadata !DIExpression()), !dbg !132
  ret void, !dbg !135
}

define void @__mem_create_scratch(ptr %0, i64 %1) !dbg !136 {
block_0:
  %2 = alloca i64, align 8
  %3 = alloca ptr, align 8
  %4 = alloca %__mem_Allocator.330, align 8
  %5 = alloca %__mem_Allocator.330, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 24, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 24, i1 false)
  store i64 %1, ptr %2, align 8, !dbg !139
  call void @llvm.dbg.value(metadata ptr %2, metadata !140, metadata !DIExpression()), !dbg !139
  %6 = load i64, ptr %2, align 8, !dbg !141
  %7 = add i64 %6, 16, !dbg !141
  %8 = call ptr @__os_alloc(i64 %7), !dbg !141
  store ptr %8, ptr %3, align 8, !dbg !141
  call void @llvm.dbg.declare(metadata ptr %3, metadata !142, metadata !DIExpression()), !dbg !141
  %9 = load ptr, ptr %3, align 8, !dbg !143
  %10 = getelementptr inbounds %__mem_ScratchContext.331, ptr %9, i32 0, i32 0, !dbg !143
  %11 = load ptr, ptr %3, align 8, !dbg !143
  %12 = getelementptr %__mem_ScratchContext.331, ptr %11, i64 1, !dbg !143
  store ptr %12, ptr %10, align 8, !dbg !143
  %13 = load ptr, ptr %3, align 8, !dbg !144
  %14 = getelementptr inbounds %__mem_ScratchContext.331, ptr %13, i32 0, i32 1, !dbg !144
  %15 = load ptr, ptr %3, align 8, !dbg !144
  %16 = getelementptr inbounds %__mem_ScratchContext.331, ptr %15, i32 0, i32 0, !dbg !144
  %17 = load ptr, ptr %16, align 8, !dbg !144
  %18 = load i64, ptr %2, align 8, !dbg !144
  %19 = getelementptr i8, ptr %17, i64 %18, !dbg !144
  store ptr %19, ptr %14, align 8, !dbg !144
  %20 = getelementptr inbounds %__mem_Allocator.330, ptr %4, i32 0, i32 0, !dbg !145
  store ptr @__mem_arena_alloc, ptr %20, align 8, !dbg !145
  %21 = getelementptr inbounds %__mem_Allocator.330, ptr %4, i32 0, i32 1, !dbg !145
  store ptr @__mem_no_free, ptr %21, align 8, !dbg !145
  %22 = load ptr, ptr %3, align 8, !dbg !145
  %23 = getelementptr inbounds %__mem_Allocator.330, ptr %4, i32 0, i32 2, !dbg !145
  store ptr %22, ptr %23, align 8, !dbg !145
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %5, ptr align 8 %4, i64 24, i1 false), !dbg !145
  call void @llvm.dbg.declare(metadata ptr %5, metadata !146, metadata !DIExpression()), !dbg !145
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %5, i64 24, i1 false), !dbg !147
  ret void, !dbg !147
}

define void @__mem_destroy_scratch(ptr %0) !dbg !148 {
block_0:
  %1 = alloca ptr, align 8
  %2 = alloca ptr, align 8
  %3 = alloca %string.315, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %1, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %2, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %3, i8 0, i32 16, i1 false)
  store ptr %0, ptr %1, align 8, !dbg !151
  call void @llvm.dbg.value(metadata ptr %1, metadata !152, metadata !DIExpression()), !dbg !151
  %4 = load ptr, ptr %1, align 8, !dbg !153
  %5 = getelementptr inbounds %__mem_Allocator.330, ptr %4, i32 0, i32 2, !dbg !153
  %6 = load ptr, ptr %5, align 8, !dbg !153
  store ptr %6, ptr %2, align 8, !dbg !153
  call void @llvm.dbg.declare(metadata ptr %2, metadata !154, metadata !DIExpression()), !dbg !153
  %7 = load ptr, ptr %2, align 8, !dbg !155
  %8 = icmp ne ptr %7, null, !dbg !155
  %9 = alloca %string.315, align 8, !dbg !155
  %String = getelementptr inbounds %string.315, ptr %9, i32 0, i32 0, !dbg !155
  %Size = getelementptr inbounds %string.315, ptr %9, i32 0, i32 1, !dbg !155
  store ptr @2, ptr %String, align 8, !dbg !155
  store i64 39, ptr %Size, align 8, !dbg !155
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %3, ptr align 8 %9, i64 16, i1 false), !dbg !155
  call void @__os_assert(i1 %8, ptr %3), !dbg !155
  %10 = load ptr, ptr %2, align 8, !dbg !156
  call void @__os_free(ptr %10), !dbg !156
  ret void, !dbg !157
}

declare ptr @memcpy(ptr, ptr, i64)

declare ptr @memset(ptr, i32, i64)

define void @"__mem_make_slice:type_int_*__mem_Allocator_:[]u8"(ptr %0, i64 %1, i64 %2, ptr %3) !dbg !158 {
block_0:
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca ptr, align 8
  %7 = alloca %slice.375, align 8
  %8 = alloca %slice.375, align 8
  call void @llvm.memset.p0.i32(ptr align 8 %4, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %5, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %6, i8 0, i32 8, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %7, i8 0, i32 16, i1 false)
  call void @llvm.memset.p0.i32(ptr align 8 %8, i8 0, i32 16, i1 false)
  store i64 %1, ptr %4, align 8, !dbg !167
  call void @llvm.dbg.value(metadata ptr %4, metadata !168, metadata !DIExpression()), !dbg !167
  store i64 %2, ptr %5, align 8, !dbg !167
  call void @llvm.dbg.value(metadata ptr %5, metadata !169, metadata !DIExpression()), !dbg !167
  store ptr %3, ptr %6, align 8, !dbg !167
  call void @llvm.dbg.value(metadata ptr %6, metadata !170, metadata !DIExpression()), !dbg !167
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %8, ptr align 8 %7, i64 16, i1 false), !dbg !171
  call void @llvm.dbg.declare(metadata ptr %8, metadata !172, metadata !DIExpression()), !dbg !171
  %9 = getelementptr inbounds %slice.375, ptr %8, i32 0, i32 1, !dbg !173
  %10 = load ptr, ptr %6, align 8, !dbg !173
  %11 = getelementptr inbounds %__mem_Allocator.330, ptr %10, i32 0, i32 0, !dbg !173
  %12 = load ptr, ptr %11, align 8, !dbg !173
  %13 = load i64, ptr %5, align 8, !dbg !173
  %14 = mul i64 %13, 1, !dbg !173
  %15 = load ptr, ptr %6, align 8, !dbg !173
  %16 = call ptr %12(i64 %14, ptr %15), !dbg !173
  store ptr %16, ptr %9, align 8, !dbg !173
  %17 = getelementptr inbounds %slice.375, ptr %8, i32 0, i32 0, !dbg !174
  %18 = load i64, ptr %5, align 8, !dbg !174
  store i64 %18, ptr %17, align 8, !dbg !174
  call void @llvm.memcpy.p0.p0.i64(ptr align 8 %0, ptr align 8 %8, i64 16, i1 false), !dbg !175
  ret void, !dbg !175
}

declare i64 @__str_to_int(ptr)

declare void @__str_create(ptr, ptr)

declare void @__str_append(ptr, ptr)

declare void @__str_append_u32(ptr, i32)

declare void @__str_append_u8(ptr, i8)

declare void @__str_from_builder(ptr, ptr, ptr)

declare void @__str_substr(ptr, ptr, i64, i64)

declare i64 @__str_get_codepoint_size(ptr)

declare ptr @__str_advance(ptr)

declare ptr @__str__it_advance(ptr, i64, i64)

declare i32 @__str_deref(ptr)

declare i32 @__str_index(ptr, i64)

declare void @"__array_add:*[]u32_u32_:void"(ptr, i32)

declare void @"__array_create:type_*__mem_Allocator_:[]u8"(ptr, i64, ptr)

declare void @"__array_add:*[]u8_u8_:void"(ptr, i8)

declare void @"__array_create:type_*__mem_Allocator_:[]u32"(ptr, i64, ptr)

declare void @"__array_free:*[]u32_:void"(ptr)

declare void @"__array_free:*[]u8_:void"(ptr)

declare ptr @memcpy.2(ptr, ptr, i64)

declare ptr @memset.3(ptr, i32, i64)

declare void @_fltused()

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i32(ptr nocapture writeonly, i8, i32, i1 immarg) #0

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.value(metadata, metadata, metadata) #1

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

attributes #0 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #1 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!76, !77}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "RCP Compiler", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, splitDebugInlining: false)
!1 = !DIFile(filename: "mem.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!2 = !{!3, !15, !36, !45, !50, !54, !65, !3, !15, !36, !45, !50, !54}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_TypeKind", scope: !1, file: !1, size: 64, align: 64, elements: !4)
!4 = !{!5, !6, !7, !8, !9, !10, !11, !12, !13, !14}
!5 = !DIEnumerator(name: "Invalid", value: 0, isUnsigned: true)
!6 = !DIEnumerator(name: "Basic", value: 1, isUnsigned: true)
!7 = !DIEnumerator(name: "Function", value: 2, isUnsigned: true)
!8 = !DIEnumerator(name: "Struct", value: 3, isUnsigned: true)
!9 = !DIEnumerator(name: "Pointer", value: 4, isUnsigned: true)
!10 = !DIEnumerator(name: "Array", value: 5, isUnsigned: true)
!11 = !DIEnumerator(name: "Slice", value: 6, isUnsigned: true)
!12 = !DIEnumerator(name: "Vector", value: 7, isUnsigned: true)
!13 = !DIEnumerator(name: "Enum", value: 8, isUnsigned: true)
!14 = !DIEnumerator(name: "Generic", value: 9, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicKind", scope: !1, file: !1, size: 64, align: 64, elements: !16)
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35}
!17 = !DIEnumerator(name: "Bool", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "String", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "U8", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "U16", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "U32", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "U64", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "I8", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "I16", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "I32", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "I64", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "F32", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "F64", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "untypedInteger", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "untypedFloat", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "Int", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "Uint", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "Type", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Auto", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Module", value: 18, isUnsigned: true)
!36 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_BasicFlag", scope: !1, file: !1, size: 32, align: 32, elements: !37)
!37 = !{!38, !39, !40, !41, !42, !43, !44}
!38 = !DIEnumerator(name: "Boolean", value: 1, isUnsigned: true)
!39 = !DIEnumerator(name: "Integer", value: 2, isUnsigned: true)
!40 = !DIEnumerator(name: "Float", value: 4, isUnsigned: true)
!41 = !DIEnumerator(name: "String", value: 8, isUnsigned: true)
!42 = !DIEnumerator(name: "Untyped", value: 32, isUnsigned: true)
!43 = !DIEnumerator(name: "Unsigned", value: 64, isUnsigned: true)
!44 = !DIEnumerator(name: "TypeID", value: 128, isUnsigned: true)
!45 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_StructFlag", scope: !1, file: !1, size: 32, align: 32, elements: !46)
!46 = !{!47, !48, !49}
!47 = !DIEnumerator(name: "Packed", value: 1, isUnsigned: true)
!48 = !DIEnumerator(name: "Generic", value: 2, isUnsigned: true)
!49 = !DIEnumerator(name: "Union", value: 4, isUnsigned: true)
!50 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__init_VectorKind", scope: !1, file: !1, size: 64, align: 64, elements: !51)
!51 = !{!52, !53}
!52 = !DIEnumerator(name: "Float", value: 0, isUnsigned: true)
!53 = !DIEnumerator(name: "Int", value: 1, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__compile_CompileFlag", scope: !1, file: !1, size: 32, align: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61, !62, !63, !64}
!56 = !DIEnumerator(name: "Debug", value: 1, isUnsigned: true)
!57 = !DIEnumerator(name: "SanAddress", value: 2, isUnsigned: true)
!58 = !DIEnumerator(name: "SanMemory", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "SanThread", value: 8, isUnsigned: true)
!60 = !DIEnumerator(name: "SanUndefined", value: 16, isUnsigned: true)
!61 = !DIEnumerator(name: "NoStdLib", value: 32, isUnsigned: true)
!62 = !DIEnumerator(name: "SharedLib", value: 64, isUnsigned: true)
!63 = !DIEnumerator(name: "CrossAndroid", value: 128, isUnsigned: true)
!64 = !DIEnumerator(name: "NoLink", value: 256, isUnsigned: true)
!65 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "__android_LogPriority", scope: !1, file: !1, size: 32, align: 32, elements: !66)
!66 = !{!67, !68, !69, !70, !71, !72, !73, !74, !75}
!67 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!68 = !DIEnumerator(name: "DEFAULT", value: 1, isUnsigned: true)
!69 = !DIEnumerator(name: "VERBOSE", value: 2, isUnsigned: true)
!70 = !DIEnumerator(name: "DEBUG", value: 3, isUnsigned: true)
!71 = !DIEnumerator(name: "INFO", value: 4, isUnsigned: true)
!72 = !DIEnumerator(name: "WARN", value: 5, isUnsigned: true)
!73 = !DIEnumerator(name: "ERROR", value: 6, isUnsigned: true)
!74 = !DIEnumerator(name: "FATAL", value: 7, isUnsigned: true)
!75 = !DIEnumerator(name: "SILENT", value: 8, isUnsigned: true)
!76 = !{i32 2, !"CodeView", i32 1}
!77 = !{i32 2, !"Debug Info Version", i32 3}
!78 = distinct !DISubprogram(name: "generic_alloc", linkageName: "__mem_generic_alloc", scope: !1, file: !1, line: 26, type: !79, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!79 = !DISubroutineType(types: !80)
!80 = !{!81, !82, !83}
!81 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*void", baseType: null, size: 64, align: 64, dwarfAddressSpace: 0)
!82 = !DIBasicType(name: "int", size: 64, encoding: DW_ATE_signed)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_Allocator", baseType: !84, size: 64, align: 64, dwarfAddressSpace: 0)
!84 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !85, file: !85, size: 192, align: 64, flags: DIFlagFwdDecl)
!85 = !DIFile(filename: "main.rcp", directory: "E:\\Non_C_Projects\\RCPProjects\\Android\\src")
!86 = !{}
!87 = !DILocation(line: 26, scope: !78)
!88 = !DILocalVariable(name: "size", scope: !78, file: !1, line: 26, type: !82)
!89 = !DILocalVariable(name: "this", arg: 1, scope: !78, file: !1, line: 26, type: !83)
!90 = !DILocation(line: 27, scope: !78)
!91 = distinct !DISubprogram(name: "generic_free", linkageName: "__mem_generic_free", scope: !1, file: !1, line: 30, type: !92, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!92 = !DISubroutineType(types: !93)
!93 = !{null, !81, !83}
!94 = !DILocation(line: 30, scope: !91)
!95 = !DILocalVariable(name: "ptr", scope: !91, file: !1, line: 30, type: !81)
!96 = !DILocalVariable(name: "this", arg: 1, scope: !91, file: !1, line: 30, type: !83)
!97 = !DILocation(line: 31, scope: !91)
!98 = !DILocation(line: 32, scope: !91)
!99 = distinct !DISubprogram(name: "create_generic_allocator", linkageName: "__mem_create_generic_allocator", scope: !1, file: !1, line: 34, type: !100, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!100 = !DISubroutineType(types: !101)
!101 = !{!102}
!102 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_Allocator", scope: !1, file: !1, size: 192, elements: !103)
!103 = !{!104, !106, !108}
!104 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1, file: !1, baseType: !105, size: 64, align: 64)
!105 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(int, *__mem_Allocator) -> ?*", baseType: !79, size: 64, align: 64, dwarfAddressSpace: 0)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !1, file: !1, baseType: !107, size: 64, align: 64, offset: 64)
!107 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*fn(*, *__mem_Allocator)", baseType: !92, size: 64, align: 64, dwarfAddressSpace: 0)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1, file: !1, baseType: !81, size: 64, align: 64, offset: 128)
!109 = !DILocation(line: 35, scope: !99)
!110 = !DILocalVariable(name: "r", scope: !99, file: !1, line: 35, type: !102)
!111 = !DILocation(line: 40, scope: !99)
!112 = distinct !DISubprogram(name: "arena_alloc", linkageName: "__mem_arena_alloc", scope: !1, file: !1, line: 48, type: !79, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!113 = !DILocation(line: 48, scope: !112)
!114 = !DILocalVariable(name: "size", scope: !112, file: !1, line: 48, type: !82)
!115 = !DILocalVariable(name: "this", arg: 1, scope: !112, file: !1, line: 48, type: !83)
!116 = !DILocation(line: 49, scope: !112)
!117 = !DILocalVariable(name: "ctx", scope: !112, file: !1, line: 49, type: !118)
!118 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*__mem_ScratchContext", baseType: !119, size: 64, align: 64, dwarfAddressSpace: 0)
!119 = !DICompositeType(tag: DW_TAG_structure_type, name: "__mem_ScratchContext", scope: !1, file: !1, size: 128, elements: !120)
!120 = !{!121, !124}
!121 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !1, file: !1, baseType: !122, size: 64, align: 64)
!122 = !DIDerivedType(tag: DW_TAG_pointer_type, name: "*u8", baseType: !123, size: 64, align: 64, dwarfAddressSpace: 0)
!123 = !DIBasicType(name: "u8", size: 8, encoding: DW_ATE_unsigned)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !1, file: !1, baseType: !122, size: 64, align: 64, offset: 64)
!125 = !DILocation(line: 50, scope: !112)
!126 = !DILocation(line: 51, scope: !112)
!127 = !DILocation(line: 53, scope: !112)
!128 = !DILocalVariable(name: "res", scope: !112, file: !1, line: 53, type: !122)
!129 = !DILocation(line: 54, scope: !112)
!130 = !DILocation(line: 56, scope: !112)
!131 = distinct !DISubprogram(name: "no_free", linkageName: "__mem_no_free", scope: !1, file: !1, line: 59, type: !92, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!132 = !DILocation(line: 59, scope: !131)
!133 = !DILocalVariable(name: "p", scope: !131, file: !1, line: 59, type: !81)
!134 = !DILocalVariable(name: "this", arg: 1, scope: !131, file: !1, line: 59, type: !83)
!135 = !DILocation(line: 61, scope: !131)
!136 = distinct !DISubprogram(name: "create_scratch", linkageName: "__mem_create_scratch", scope: !1, file: !1, line: 63, type: !137, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!137 = !DISubroutineType(types: !138)
!138 = !{!102, !82}
!139 = !DILocation(line: 63, scope: !136)
!140 = !DILocalVariable(name: "max_size", scope: !136, file: !1, line: 63, type: !82)
!141 = !DILocation(line: 64, scope: !136)
!142 = !DILocalVariable(name: "ctx", scope: !136, file: !1, line: 64, type: !118)
!143 = !DILocation(line: 65, scope: !136)
!144 = !DILocation(line: 66, scope: !136)
!145 = !DILocation(line: 68, scope: !136)
!146 = !DILocalVariable(name: "r", scope: !136, file: !1, line: 68, type: !102)
!147 = !DILocation(line: 74, scope: !136)
!148 = distinct !DISubprogram(name: "destroy_scratch", linkageName: "__mem_destroy_scratch", scope: !1, file: !1, line: 77, type: !149, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!149 = !DISubroutineType(types: !150)
!150 = !{null, !83}
!151 = !DILocation(line: 77, scope: !148)
!152 = !DILocalVariable(name: "a", scope: !148, file: !1, line: 77, type: !83)
!153 = !DILocation(line: 78, scope: !148)
!154 = !DILocalVariable(name: "ctx", scope: !148, file: !1, line: 78, type: !118)
!155 = !DILocation(line: 79, scope: !148)
!156 = !DILocation(line: 80, scope: !148)
!157 = !DILocation(line: 81, scope: !148)
!158 = distinct !DISubprogram(name: "make_slice:type_int_*__mem_Allocator_:[]u8", linkageName: "__mem_make_slice:type_int_*__mem_Allocator_:[]u8", scope: !1, file: !1, line: 10, type: !159, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !86)
!159 = !DISubroutineType(types: !160)
!160 = !{!161, !166, !82, !83}
!161 = !DICompositeType(tag: DW_TAG_structure_type, scope: !162, file: !162, size: 128, align: 64, elements: !163)
!162 = !DIFile(filename: "io.rcp", directory: "E:\\C_Projects\\ReComp\\std")
!163 = !{!164, !165}
!164 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !162, file: !162, baseType: !82, size: 64, align: 64)
!165 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !162, file: !162, baseType: !122, size: 64, align: 64, offset: 64)
!166 = !DIBasicType(name: "type", size: 64, encoding: DW_ATE_unsigned)
!167 = !DILocation(line: 10, scope: !158)
!168 = !DILocalVariable(name: "T", scope: !158, file: !1, line: 10, type: !166)
!169 = !DILocalVariable(name: "size", arg: 1, scope: !158, file: !1, line: 10, type: !82)
!170 = !DILocalVariable(name: "alloc", arg: 2, scope: !158, file: !1, line: 10, type: !83)
!171 = !DILocation(line: 11, scope: !158)
!172 = !DILocalVariable(name: "res", scope: !158, file: !1, line: 11, type: !161)
!173 = !DILocation(line: 12, scope: !158)
!174 = !DILocation(line: 13, scope: !158)
!175 = !DILocation(line: 14, scope: !158)
